{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/index.ts","src/page/SettingsPage.ts","src/page/SettingsPageRoutes.ts","src/page/index.ts","src/service/SettingsConfig.ts","src/service/SettingsPageSelectedTab.ts","src/service/SettingsService.ts","src/service/SettingsStateConfig.ts","src/service/SettingsTab.ts","src/service/index.ts","temp/pip-webui-settings-html.js"],"names":[],"mappings":"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","file":"pip-webui-settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './service';\nimport './page';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './service';","import { ISettingsService } from '../service/ISettingsService';\nimport { SettingsTab } from '../service/SettingsTab';\nimport { SettingsPageSelectedTab } from '../service/SettingsPageSelectedTab';\n\ninterface ISettingsPageController {\n    tabs: SettingsTab[];\n    selected: SettingsPageSelectedTab;\n    // onDropdownSelect: Function;\n    onNavigationSelect(state: string): void;\n}\n\nclass SettingsPageController implements ISettingsPageController {\n    private _pipTranslate: pip.services.ITranslateService\n\n    public tabs: SettingsTab[];\n    public selected: SettingsPageSelectedTab;\n    // public onDropdownSelect: Function;\n    private cleanUpFunc: Function;\n    private cleanUpSelectFunc: Function;\n    private mediaSizeGtSm: boolean;\n    public details: boolean;\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        private $rootScope: ng.IRootScopeService,\n        $scope: ng.IScope,\n        private $injector: ng.auto.IInjectorService,\n        private $timeout: angular.ITimeoutService,\n        private $location: ng.ILocationService,\n        private pipNavService: pip.nav.INavService,\n        private pipSettings: ISettingsService,\n        public pipMedia: pip.layouts.IMediaService,\n    ) {\n\n        this.translateInit();\n\n        this.mediaSizeGtSm = this.pipMedia('gt-sm');\n\n        this.initTabs();\n\n        if (!this.pipMedia('gt-sm')) {\n            this.details = $location.search().details == 'details' ? true : false;\n        } else {\n            this.details = false;\n            this.$location.search('details', 'main');\n        }\n            \n        this.cleanUpSelectFunc = $rootScope.$on('$stateChangeSuccess', () => {\n            let state = this.$state.current.name;\n            this.initSelect(state, false);\n        });\n\n        this.cleanUpFunc = $rootScope.$on('pipMainResized', () => {\n            if (this.mediaSizeGtSm !== this.pipMedia('gt-sm')) {\n                this.mediaSizeGtSm = this.pipMedia('gt-sm');\n\n                if (this.pipMedia('gt-sm')) {\n                    this.details = false;\n                }\n                this.appHeader();\n            }\n        });\n        this.appHeader();\n\n        $scope.$on('$destroy', () => {\n            if (angular.isFunction(this.cleanUpFunc)) {\n                this.cleanUpFunc();\n            }\n            \n            if (angular.isFunction(this.cleanUpSelectFunc)) {\n                this.cleanUpSelectFunc();\n            }\n        });\n    }\n\n    private initTabs(): void {\n        this.tabs = _.filter(this.pipSettings.getTabs(), (tab: SettingsTab) => {\n            if (tab.visible === true && (tab.access ? tab.access(this.$rootScope['$user'], tab) : true)) {\n                return tab;\n            }\n        });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = new SettingsPageSelectedTab();\n        if (this.$state.current.name !== 'settings') {\n            this.initSelect(this.$state.current.name);\n        } else if (this.$state.current.name === 'settings' && this.pipSettings.getDefaultTab()) {\n            this.initSelect(this.pipSettings.getDefaultTab().state);\n        } else {\n            this.$timeout(() => {\n                if (this.pipSettings.getDefaultTab()) {\n                    this.initSelect(this.pipSettings.getDefaultTab().state);\n                }\n                if (!this.pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                    this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n    }\n\n    private translateInit() {\n        this._pipTranslate = this.$injector.has('pipTranslate') ? <pip.services.ITranslateService>this.$injector.get('pipTranslate') : null;\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\n            this._pipTranslate.setTranslations('en', {\n                PIP_SETTINGS: 'Settings',\n                PIP_SETTINGS_DETAILS: 'Settings details'\n            });\n            this._pipTranslate.setTranslations('ru', {\n                PIP_SETTINGS: 'Настройки',\n                PIP_SETTINGS_DETAILS: 'Подробно'\n            });\n        }\n    }\n    private toMainFromDetails(): void {\n        this.$location.search('details', 'main');\n        this.details = false;\n        this.appHeader();\n    }\n\n    public appHeader(): void {\n        this.pipNavService.breadcrumb.breakpoint = 'gt-sm';\n        if (!this.pipMedia('gt-sm')) {\n            let detailsTitle: string = this.selected && this.selected.tab ? this.selected.tab.title : 'PIP_SETTINGS_DETAILS';\n            if (this.details) {\n                this.pipNavService.icon.showBack(() => {\n                    this.toMainFromDetails();\n                });\n                this.pipNavService.breadcrumb.items = [\n                    <pip.nav.BreadcrumbItem>{\n                        title: \"PIP_SETTINGS\", click: () => {\n                            this.toMainFromDetails();\n                        }\n                    },\n                    <pip.nav.BreadcrumbItem>{\n                        title: detailsTitle, click: () => { }, subActions: []\n                    }\n                ];\n            } else {\n                this.pipNavService.icon.showMenu();\n                this.pipNavService.breadcrumb.text = \"PIP_SETTINGS\";\n            }\n        } else {\n            this.pipNavService.icon.showMenu();\n            this.pipNavService.breadcrumb.text = \"PIP_SETTINGS\";\n        }\n\n\n        this.pipNavService.actions.hide();\n        this.pipNavService.appbar.removeShadow();\n    }\n\n    private initSelect(state: string, updateState: boolean = true): void {\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\n            return tab.state === state;\n        });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n        if (updateState === true) this.$state.go(this.selected.tabId);\n    }\n\n    public onNavigationSelect(state: string): void {\n        this.initSelect(state);\n\n        if (!this.pipMedia('gt-sm')) {\n            this.details = true;\n            this.$location.search('details', 'details');\n            this.appHeader();\n        }\n    }\n}\n\nangular\n    .module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n","{\n    function configureSettingsPageRoutes($stateProvider) {\n        $stateProvider\n            .state('settings', {\n                url: '/settings?user_id&details',\n                auth: true,\n                controllerAs: 'vm',\n                controller: 'pipSettingsPageController',\n                templateUrl: 'page/SettingsPage.html'\n            });\n\n    }\n\n    angular.module('pipSettings.Page')\n        .config(configureSettingsPageRoutes);\n}\n","angular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPage';\nimport './SettingsPageRoutes';","import { SettingsTab } from './SettingsTab';\n\nexport class SettingsConfig {\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n}\n","import { SettingsTab } from './SettingsTab';\n\nexport class SettingsPageSelectedTab {\n    public tab: SettingsTab;\n    public tabIndex: number = 0;\n    public tabId: string;\n}","import { SettingsTab } from './SettingsTab';\nimport { SettingsConfig } from './SettingsConfig';\nimport { ISettingsService } from './ISettingsService';\nimport { ISettingsProvider } from './ISettingsService';\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n\n    public constructor(config: SettingsConfig) {\n        \"ngInject\";\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === this._config.defaultTab;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public getTabs(): SettingsTab[] {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\n\n    public getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: SettingsTab): void {\n        let existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            icon: tabObj.icon,\n            iconClass: tabObj.iconClass,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //console.log(this.$stateProvider);\n        //this.$stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n    private validateTab(tabObj: SettingsTab): void {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get(): ISettingsService {\n        \"ngInject\";\n\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\n            this._service = new SettingsService(this._config);\n        }\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","export class SettingsStateConfig {\n    public url: string;\n    public auth: boolean = false;\n    public templateUrl?: string;\n    public template?: string;\n}","import { SettingsStateConfig } from './SettingsStateConfig';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public icon?: string;\n    public iconClass?: string;\n    public index: number;\n    public access: Function;\n    public visible: boolean;\n    public stateConfig: SettingsStateConfig;\n}\n","angular.module('pipSettings.Service', []);\n\nimport './SettingsConfig';\nimport './SettingsPageSelectedTab';\nimport './SettingsStateConfig';\nimport './SettingsTab';\nimport './SettingsService';\n\nexport * from './SettingsConfig';\nexport * from './SettingsPageSelectedTab';\nexport * from './SettingsStateConfig';\nexport * from './SettingsTab';\nexport * from './SettingsService';\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('page/SettingsPage.html',\n    '\\n' +\n    '<div class=\"pip-main-menu pip-settings\" ng-class=\"{\\'pip-single-content\\': vm.details}\">\\n' +\n    '\t<div class=\"pip-menu\">\\n' +\n    '        <div class=\"pip-list-container pip-scroll divider-top\">\\n' +\n    '\\n' +\n    '\t\t\t<md-list class=\"pip-ref-list tp0 pip-settings-list\"                 \\n' +\n    '                pip-selected=\"vm.selected.tabIndex\"\\n' +\n    '                pip-selected-watch=\"vm.selected.navId\"\\n' +\n    '                pip-select=\"vm.onNavigationSelect($event.id)\">\\n' +\n    '\\n' +\n    '\t\t\t\t<md-list-item  class=\"pip-ref-list-item pointer divider-bottom pip-selectable\" \\n' +\n    '                        ng-repeat=\"tab in vm.tabs track by tab.state\" \\n' +\n    '                        pip-id=\"{{:: tab.state }}\" md-ink-ripple>\\n' +\n    '\\n' +\n    '\t\t\t\t\t<div ng-click=\"vm.onNavigationSelect(tab.state)\" class=\"layout-row layout-align-start-center flex\">\\n' +\n    '\t\t\t\t\t\t<div class=\"pip-settings-icon layout-row layout-align-start-center {{ tab.iconClass ? tab.iconClass : \\'pip-settings-icon-color\\'}}\" \\n' +\n    '                            ng-if=\"tab.icon\">\\n' +\n    '\t\t\t\t\t\t\t<md-icon class=\"\" md-svg-icon=\"{{ tab.icon }}\"></md-icon>\\n' +\n    '\t\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t\t\t<div class=\"pip-content {{ tab.icon ? \\'\\' : \\'pip-settings-without-icon\\' }}\">\\n' +\n    '\t\t\t\t\t\t\t<p class=\"pip-title text-overflow flex\">\\n' +\n    '\t\t\t\t\t\t\t\t{{ ::tab.title | translate }}\\n' +\n    '\t\t\t\t\t\t\t</p>\\n' +\n    '\t\t\t\t\t\t</div>\\n' +\n    '                        <div class=\"pip-ref-list-item-end-icon\">\\n' +\n    '                            <md-icon class=\"\" md-svg-icon=\"icons:chevron-right\"></md-icon>\\n' +\n    '                        </div>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t</md-list-item>\\n' +\n    '\t\t\t</md-list>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '    <div class=\"pip-content-container\">\\n' +\n    '        <pip-document>\\n' +\n    '            <div class=\"pip-body tp24-flex layout-column flex\" ui-view></div>\\n' +\n    '        </pip-document>\\n' +\n    '\t</div>\\n' +\n    '</div>        \\n' +\n    '<!--    \\n' +\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar>\\n' +\n    '<pip-document width=\"800\" min-height=\"400\"\\n' +\n    '              class=\"pip-settings\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-menu-container\"\\n' +\n    '         ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">\\n' +\n    '        <md-list class=\"pip-menu pip-simple-list\"\\n' +\n    '                 pip-selected=\"vm.selected.tabIndex\"\\n' +\n    '                 pip-selected-watch=\"vm.selected.navId\"\\n' +\n    '                 pip-select=\"vm.onNavigationSelect($event.id)\">\\n' +\n    '            <md-list-item class=\"pip-simple-list-item pip-selectable flex\"\\n' +\n    '                          ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id ||\\n' +\n    '                          tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\'\\n' +\n    '                          || tab.state ==\\'settings.blacklist\\'\"\\n' +\n    '                          md-ink-ripple\\n' +\n    '                          pip-id=\"{{:: tab.state }}\">\\n' +\n    '                <p>{{::tab.title | translate}}</p>\\n' +\n    '            </md-list-item>\\n' +\n    '        </md-list>\\n' +\n    '\\n' +\n    '        <div class=\"pip-content-container\">\\n' +\n    '            <pip-dropdown pip-actions=\"vm.tabs\"\\n' +\n    '                          pip-dropdown-select=\"vm.onDropdownSelect\"\\n' +\n    '                          pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown>\\n' +\n    '\\n' +\n    '            <div class=\"pip-body tp24-flex layout-column\" ui-view></div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"layout-column layout-align-center-center flex\"\\n' +\n    '         ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">\\n' +\n    '        {{::\\'ERROR_400\\' | translate}}\\n' +\n    '    </div>\\n' +\n    '</pip-document>-->');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}