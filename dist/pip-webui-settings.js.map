{"version":3,"sources":["settings.js","pip-webui-settings-html.js","settings_page/settings_page.js","settings_service/settings_service.js","user_settings/user_settings.js","user_settings/user_settings_basic_info.js","user_settings/user_settings_change_password.js","user_settings/user_settings_data.js","user_settings/user_settings_sessions.js","user_settings/user_settings_strings.js","user_settings/user_settings_verify_email.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfhbxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtzXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"pip-webui-settings.js","sourcesContent":["/**\n * @file Registration of settings components\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function (angular) {\n    'use strict';\n\n    angular.module('pipSettings', [\n        'pipSettings.Service',\n        'pipSettings.Page',\n        'pipUserSettings'\n    ]);\n\n})(window.angular);\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/settings_page.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar>\\n' +\n    '<pip-document width=\"800\" min-height=\"400\"\\n' +\n    '              class=\"pip-settings\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-menu-container\"\\n' +\n    '         ng-hide=\"manager === false || !pages || pages.length < 1\">\\n' +\n    '        <md-list class=\"pip-menu pip-simple-list hide-xs\"\\n' +\n    '                 pip-selected=\"selected.pageIndex\"\\n' +\n    '                 pip-selected-watch=\"selected.navId\"\\n' +\n    '                 pip-select=\"onNavigationSelect($event.id)\">\\n' +\n    '            <md-list-item class=\"pip-simple-list-item pip-selectable flex\"\\n' +\n    '                          ng-repeat=\"page in pages track by page.state\" ng-if=\"$party.id == $user.id ||\\n' +\n    '                          page.state == \\'settings.basic_info\\'|| page.state ==\\'settings.contact_info\\'\\n' +\n    '                          || page.state ==\\'settings.blacklist\\'\"\\n' +\n    '                          md-ink-ripple\\n' +\n    '                          pip-id=\"{{:: page.state }}\">\\n' +\n    '                <p>{{::page.title | translate}}</p>\\n' +\n    '            </md-list-item>\\n' +\n    '        </md-list>\\n' +\n    '\\n' +\n    '        <div class=\"pip-content-container\" ng-if=\"selected.page\">\\n' +\n    '            <pip-dropdown class=\"hide-gt-xs\"\\n' +\n    '                          pip-actions=\"pages\"\\n' +\n    '                          pip-dropdown-select=\"onDropdownSelect\"\\n' +\n    '                          pip-active-index=\"selected.pageIndex\"></pip-dropdown>\\n' +\n    '\\n' +\n    '            <div class=\"pip-body tp24-flex layout-column\" ui-view></div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"layout-column layout-align-center-center flex\"\\n' +\n    '         ng-show=\"manager === false || !pages || pages.length < 1\">\\n' +\n    '        {{::\\'ERROR_400\\' | translate}}\\n' +\n    '    </div>\\n' +\n    '</pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" class=\"w-stretch\" novalidate>\\n' +\n    '    <md-progress-linear class=\"pip-progress-top\"\\n' +\n    '                        ng-show=\"transaction.busy()\"\\n' +\n    '                        md-mode=\"indeterminate\"></md-progress-linear>\\n' +\n    '    <div class=\"layout-row bm12\">\\n' +\n    '        <div class=\"md-tile-left\">\\n' +\n    '            <pip-avatar-edit pip-party-id=\"$party.id\"\\n' +\n    '                             pip-created=\"onPictureCreated($event)\"\\n' +\n    '                             pip-changed=\"onPictureChanged($control, $event)\">\\n' +\n    '            </pip-avatar-edit>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"md-tile-content tp0 layout-align-center\">\\n' +\n    '            <h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3>\\n' +\n    '\\n' +\n    '            <p class=\"text-primary text-overflow m0\">\\n' +\n    '                {{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}}\\n' +\n    '                {{$user.signup | formatLongDate }}\\n' +\n    '            </p>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\">\\n' +\n    '        <label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label>\\n' +\n    '        <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required\\n' +\n    '               ng-model=\"$party.name\"\\n' +\n    '               ng-disabled=\"transaction.busy()\"\\n' +\n    '               ng-change=\"onChangeBasicInfo()\"/>\\n' +\n    '\\n' +\n    '        <div class=\"hint\"\\n' +\n    '             ng-if=\"errorsWithHint(form, form.fullName).hint\">\\n' +\n    '            {{::\\'ERROR_FULLNAME_INVALID\\' | translate}}\\n' +\n    '        </div>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block bm0\">\\n' +\n    '        <label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label>\\n' +\n    '        <input name=\"email\" type=\"email\" required\\n' +\n    '               ng-model=\"$party.email\"\\n' +\n    '               ng-change=\"onChangeBasicInfo()\"\\n' +\n    '               pip-email-unique=\"{{$party.email}}\"/>\\n' +\n    '\\n' +\n    '        <div class=\"hint\"\\n' +\n    '             ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">\\n' +\n    '            {{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' | translate}}\\n' +\n    '        </div>\\n' +\n    '        <div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\" $party.type ==\\'team\\'\">\\n' +\n    '            <div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div>\\n' +\n    '            <div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div>\\n' +\n    '        </div>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-button class=\"md-raised bm16 tm8 rm8\"\\n' +\n    '               ng-click=\"onVerifyEmail($event)\"\\n' +\n    '               ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\">\\n' +\n    '        {{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}\\n' +\n    '    </md-button>\\n' +\n    '\\n' +\n    '    <md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        {{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}\\n' +\n    '    </md-button>\\n' +\n    '\\n' +\n    '    <md-input-container flex class=\"md-block\">\\n' +\n    '        <label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label>\\n' +\n    '        <textarea ng-model=\"$party.about\" columns=\"1\"\\n' +\n    '                  ng-change=\"onChangeBasicInfo()\"></textarea>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        <label>{{::\\'GENDER\\' | translate}}</label>\\n' +\n    '        <md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\"\\n' +\n    '                   placeholder=\"{{\\'GENDER\\' | translate}}\">\\n' +\n    '            <md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <div ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        <p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p>\\n' +\n    '        <pip-date ng-model=\"$party.birthday\"\\n' +\n    '                  ng-change=\"onChangeBasicInfo()\"\\n' +\n    '                  pip-time-mode=\"past\\n' +\n    '                  time-mode=\"past\"></pip-date>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\"\\n' +\n    '                        ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        <label>{{::\\'LANGUAGE\\' | translate}}</label>\\n' +\n    '        <md-select placeholder=\"{{\\'LANGUAGE\\' | translate}}\"\\n' +\n    '                   ng-model=\"$user.language\"\\n' +\n    '                   ng-change=\"onChangeUser()\">\\n' +\n    '            <md-option ng-value=\"language.id\"\\n' +\n    '                       ng-repeat=\"language in languages\">\\n' +\n    '                {{language.name}}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\"\\n' +\n    '                        ng-if=\"$party.type !=\\'team\\'\">\\n' +\n    '        <label>{{::\\'THEME\\' | translate}}</label>\\n' +\n    '        <md-select class=\"w-stretch theme-text-primary\"\\n' +\n    '                   ng-model=\"$user.theme\"\\n' +\n    '                   ng-change=\"onChangeUser()\"\\n' +\n    '                   ng-disabled=\"transaction.busy()\">\\n' +\n    '            <md-option ng-value=\"theme\"\\n' +\n    '                       ng-repeat=\"theme in themes\"\\n' +\n    '                       ng-selected=\"$theme == theme ? true : false\">\\n' +\n    '                {{ theme | translate }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <pip-location-edit class=\"map-edit bm24-flex\"\\n' +\n    '                       ng-hide=\"$party.type ==\\'team\\'\"\\n' +\n    '                       pip-changed=\"onChangeBasicInfo()\"\\n' +\n    '                       pip-location-name=\"$party.loc_name\"\\n' +\n    '                       pip-location-pos=\"loc_pos\">\\n' +\n    '    </pip-location-edit>\\n' +\n    '</form>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog layout-column\"  width=\"440\">\\n' +\n    '    <form name=\"form\" ng-submit=\"onApply()\" >\\n' +\n    '    <div class=\"pip-header\">\\n' +\n    '        <h3 class=\"m0\">\\n' +\n    '            {{::\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}\\n' +\n    '        </h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '            <div class=\"text-error bm8\"\\n' +\n    '                 ng-messages=\"form.$serverError\">\\n' +\n    '                <div ng-message=\"ERROR_UNKNOWN\">\\n' +\n    '                    {{ form.$serverError.ERROR_UNKNOWN | translate }}\\n' +\n    '                </div>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <md-input-container class=\"md-block\">\\n' +\n    '                <label>{{::\\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label>\\n' +\n    '                <input name=\"oldPassword\" type=\"password\"\\n' +\n    '                       ng-model=\"changePasData.old_password\"\\n' +\n    '                       ng-required=\"change_password.$submitted\"\\n' +\n    '                       pip-clear-errors/>\\n' +\n    '\\n' +\n    '                <div ng-messages=\"errorsWithHint(form, form.oldPassword)\">\\n' +\n    '                    <div ng-message=\"required\">\\n' +\n    '                        {{::\\'ERROR_REQUIRED\\' | translate }}\\n' +\n    '                    </div>\\n' +\n    '                    <div ng-message=\"ERROR_1107\">\\n' +\n    '                        {{::\\'ERROR_WRONG_PASSWORD\\' | translate }}\\n' +\n    '                    </div>\\n' +\n    '                </div>\\n' +\n    '\\n' +\n    '            </md-input-container>\\n' +\n    '\\n' +\n    '            <md-input-container class=\"md-block\">\\n' +\n    '                <label>{{\\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label>\\n' +\n    '                <input name=\"newPassword\" type=\"password\"\\n' +\n    '                       ng-model=\"changePasData.new_password\"\\n' +\n    '                       ng-change=\"onCheckRepeatPassword()\"\\n' +\n    '                       ng-required=\"change_password.$submitted\"\\n' +\n    '                       ng-minlength=\"6\"\\n' +\n    '                       pip-clear-errors/>\\n' +\n    '                <div class=\"hint\"\\n' +\n    '                     ng-if=\"errorsWithHint(form, form.newPassword).hint\">\\n' +\n    '                    {{ \\'HINT_PASSWORD\\' | translate }}\\n' +\n    '                </div>\\n' +\n    '                <div ng-messages=\"errorsWithHint(form, form.newPassword)\">\\n' +\n    '                    <div ng-message=\"required\">\\n' +\n    '                        {{::\\'ERROR_REQUIRED\\' | translate}}\\n' +\n    '                    </div>\\n' +\n    '                    <div ng-message=\"minlength\">\\n' +\n    '                        {{::\\'HINT_PASSWORD\\' | translate }}\\n' +\n    '                    </div>\\n' +\n    '                    <div ng-message=\"ERROR_1105\">\\n' +\n    '                        {{::\\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}\\n' +\n    '                    </div>\\n' +\n    '                </div>\\n' +\n    '            </md-input-container>\\n' +\n    '\\n' +\n    '            <md-input-container class=\"md-block\">\\n' +\n    '                <label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label>\\n' +\n    '                <input name=\"repeat\"  type=\"password\"\\n' +\n    '                       ng-model=\"repeat\"\\n' +\n    '                       ng-change=\"onCheckRepeatPassword()\"\\n' +\n    '                       ng-required=\"change_password.$submitted\"\\n' +\n    '                       ng-minlength=\"6\" />\\n' +\n    '\\n' +\n    '                <div class=\"hint\"\\n' +\n    '                     ng-if=\"errorsRepeatWithHint(form.repeat).hint\">\\n' +\n    '                    {{::\\'HINT_REPEAT_PASSWORD\\' | translate }}\\n' +\n    '                </div>\\n' +\n    '\\n' +\n    '                <div ng-messages=\"errorsRepeatWithHint(form.repeat)\">\\n' +\n    '                    <div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"repeat\">{{::\\'REPEAT_PASSWORD_INVALID\\' | translate }}</div>\\n' +\n    '                </div>\\n' +\n    '\\n' +\n    '            </md-input-container>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div>\\n' +\n    '            <md-button aria-label=\"xxx\"\\n' +\n    '                       ng-click=\"onCancel()\">\\n' +\n    '                {{::\\'CANCEL\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">\\n' +\n    '                {{::\\'APPLY\\' | translate : module}}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    </form>\\n' +\n    '</md-dialog>\\n' +\n    '\\n' +\n    '\\n' +\n    '\\n' +\n    '\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '\\n' +\n    '    <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\">\\n' +\n    '    </md-progress-linear>\\n' +\n    '    <div class=\"pip-details-title pip-sessions\">\\n' +\n    '        <p class=\"pip-title bm16\">\\n' +\n    '            {{::\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <p class=\"pip-subtitle\">\\n' +\n    '            {{::\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '\\n' +\n    '<md-list class=\"w-stretch\">\\n' +\n    '    <div ng-repeat=\"session in sessions\" >\\n' +\n    '        <div class=\"layout-row\"\\n' +\n    '             ng-init=\"showBlock = session.id != sessionId\"\\n' +\n    '             ng-click=\"showBlock = !showBlock\" >\\n' +\n    '            <p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">\\n' +\n    '                {{::session.client}}\\n' +\n    '            </p>\\n' +\n    '            <p class=\"m0 lp4 text-body1 color-secondary-text flex\">\\n' +\n    '                {{::\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}}\\n' +\n    '            </p>\\n' +\n    '            <p class=\"m0 text-body1 color-secondary-text \">\\n' +\n    '                {{::country}}\\n' +\n    '                <md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon>\\n' +\n    '                <md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon>\\n' +\n    '            </p>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row bm8 bp8\" ng-class=\"{\\'divider-bottom\\':!$last}\" >\\n' +\n    '            <div flex=\"50\">\\n' +\n    '                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text \">\\n' +\n    '                    {{session.last_req | date : \\'medium\\'}}\\n' +\n    '                </p>\\n' +\n    '                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\"\\n' +\n    '                   ng-show=\"showBlock\">\\n' +\n    '                    {{::\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{::session.platform}}</p>\\n' +\n    '                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\"\\n' +\n    '                   ng-show=\"showBlock\">\\n' +\n    '                    {{::\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{::session.address}}\\n' +\n    '                </p>\\n' +\n    '                <md-button class=\"md-raised\"\\n' +\n    '                           ng-show=\"showBlock && session.id != sessionId\"\\n' +\n    '                           ng-click=\"onRemove(session)\">\\n' +\n    '                    {{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}\\n' +\n    '                </md-button>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\"\\n' +\n    '                             pip-ipaddress=\"session.address\"\\n' +\n    '                             pip-extra-info=\"country = extraInfo.country\">\\n' +\n    '            </pip-location-ip>\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '</md-list>\\n' +\n    '<div class=\"layout-row layout-align-end-center\">\\n' +\n    '    <md-button class=\"md-raised\"\\n' +\n    '               ng-show=\"sessions.length > 1\"\\n' +\n    '               ng-click=\"onRemoveAll()\">\\n' +\n    '        {{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}\\n' +\n    '    </md-button>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog layout-column\"  width=\"440\">\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '                <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\" >\\n' +\n    '                </md-progress-linear>\\n' +\n    '\\n' +\n    '                <h2>{{::\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2>\\n' +\n    '\\n' +\n    '                <p class=\"title-padding\">{{::\\'VERIFY_EMAIL_TEXT_1\\' | translate}} </p>\\n' +\n    '\\n' +\n    '                <form name=\\'form\\' novalidate>\\n' +\n    '                    <div ng-messages=\"form.$serverError\" class=\"text-error bm8\">\\n' +\n    '                        <div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div>\\n' +\n    '                    </div>\\n' +\n    '\\n' +\n    '                    <md-input-container class=\"display  bp4 md-block\" >\\n' +\n    '                        <label>{{::\\'EMAIL\\' | translate}}</label>\\n' +\n    '                        <input name=\"email\" type=\"email\" ng-model=\"data.email\" required step=\"any\"\\n' +\n    '                               pip-clear-errors  tabindex=\"1\"\\n' +\n    '                               ng-disabled=\"transaction.busy()\"\\n' +\n    '                               pip-test=\"input-email\"/>\\n' +\n    '                        <div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div>\\n' +\n    '                        <div ng-messages=\"errorsWithHint(form, form.email)\"\\n' +\n    '                             xng-if=\"!form.email.$pristine\">\\n' +\n    '                            <div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div>\\n' +\n    '                            <div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div>\\n' +\n    '                        </div>\\n' +\n    '                    </md-input-container>\\n' +\n    '\\n' +\n    '                    <md-input-container class=\"md-block\">\\n' +\n    '                        <label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label>\\n' +\n    '                        <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\"\\n' +\n    '                               ng-model=\"data.code\" required pip-clear-errors/>\\n' +\n    '                        <div ng-messages=\"errorsWithHint(form, form.code)\">\\n' +\n    '                            <div ng-message=\"required\"> {{::\\'ERROR_CODE_INVALID\\' | translate }}</div>\\n' +\n    '                            <div ng-message=\"ERROR_1103\"> {{::\\'ERROR_CODE_WRONG\\' | translate }}</div>\\n' +\n    '                        </div>\\n' +\n    '                    </md-input-container>\\n' +\n    '\\n' +\n    '                    <p>\\n' +\n    '                        {{::\\'VERIFY_EMAIL_TEXT_21\\' | translate}}\\n' +\n    '                        <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::\\'VERIFY_EMAIL_RESEND\\' | translate}}</a>\\n' +\n    '                        {{::\\'VERIFY_EMAIL_TEXT_22\\' | translate}}\\n' +\n    '                    </p>\\n' +\n    '                </form>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-footer\">\\n' +\n    '            <md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">\\n' +\n    '                {{::\\'CANCEL\\' | translate}}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\"\\n' +\n    '                ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">\\n' +\n    '                {{::\\'VERIFY\\' | translate}}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">\\n' +\n    '                {{::\\'CANCEL\\' | translate}}\\n' +\n    '            </md-button>\\n' +\n    '\\n' +\n    '        </div>\\n' +\n    '</md-dialog>');\n}]);\n})();\n","(function (angular, _) {\n    'use strict';\n\n    var thisModule = angular.module('pipSettings.Page', [\n        'pipState', 'pipSettings.Service', 'pipAppBar', 'pipSelected', 'pipTranslate',\n        'pipSettings.Templates'\n    ]);\n\n    thisModule.config(['pipAuthStateProvider', function (pipAuthStateProvider) {\n        pipAuthStateProvider.state('settings', {\n            url: '/settings?party_id',\n            auth: true,\n            controller: 'pipSettingsPageController',\n            templateUrl: 'settings_page/settings_page.html'\n        });\n    }]);\n\n    thisModule.controller('pipSettingsPageController',\n        ['$scope', '$state', '$rootScope', '$timeout', 'pipAppBar', 'pipSettings', function ($scope, $state, $rootScope, $timeout, pipAppBar, pipSettings) {\n\n            $scope.pages = _.filter(pipSettings.getPages(), function (page) {\n                if (page.visible === true && (page.access ? page.access($rootScope.$user, page) : true)) {\n                    return page;\n                }\n            });\n\n            $scope.pages = _.sortBy($scope.pages, 'index');\n\n            $scope.selected = {};\n            if ($state.current.name !== 'settings') {\n                initSelect($state.current.name);\n            }\n            if ($state.current.name === 'settings' && pipSettings.getDefaultPage()) {\n                initSelect(pipSettings.getDefaultPage().state);\n            } else {\n                $timeout(function () {\n                    if (pipSettings.getDefaultPage()) {\n                        initSelect(pipSettings.getDefaultPage().state);\n                    }\n                    if (!pipSettings.getDefaultPage() && $scope.pages.length > 0) {\n                        initSelect($scope.pages[0].state);\n                    }\n                }, 0);\n            }\n\n            appHeader();\n\n            $scope.onNavigationSelect = onNavigationSelect;\n            $scope.onDropdownSelect = onDropdownSelect;\n            function appHeader() {\n                pipAppBar.showMenuNavIcon();\n                pipAppBar.showTitleText('SETTINGS_TITLE');\n                pipAppBar.showLocalActions(null, []);\n                pipAppBar.showShadowSm();\n                pipAppBar.hideSearch();\n            }\n\n            function onDropdownSelect(state) {\n                onNavigationSelect(state.state);\n            }\n\n            function onNavigationSelect(state) {\n                initSelect(state);\n\n                if ($scope.selected.page) {\n                    $state.go(state);\n                }\n            }\n\n            function initSelect(state) {\n                $scope.selected.page = _.find($scope.pages, function (page) {\n                    return page.state === state;\n                });\n                $scope.selected.pageIndex = _.indexOf($scope.pages, $scope.selected.page);\n                $scope.selected.pageId = state;\n            }\n        }]);\n\n})(window.angular, window._);\n","(function (angular, _) {\n    'use strict';\n\n    var thisModule = angular.module('pipSettings.Service', []);\n\n    thisModule.provider('pipSettings', ['pipAuthStateProvider', function (pipAuthStateProvider) {\n\n        var defaultPage,\n            pages = [];\n\n        return {\n            addPage: addPage,\n            getPages: getPages,\n            setDefaultPage: setDefaultPage,\n            getDefaultPage: getDefaultPage,\n\n            $get: function () {\n                return {\n                    getPages: getPages,\n                    addPage: addPage,\n                    getDefaultPage: getDefaultPage,\n                    setDefaultPage: setDefaultPage\n                };\n            }\n        };\n\n        function getFullStateName(state) {\n            return 'settings.' + state;\n        }\n\n        function getPages() {\n            return _.clone(pages, true);\n        }\n\n        function getDefaultPage() {\n            var defaultPage;\n\n            defaultPage = _.find(pages, function (p) {\n                return p.state === defaultPage;\n            });\n\n            return _.clone(defaultPage, true);\n        }\n\n        function addPage(pageObj) {\n            var existingPage;\n\n            validatePage(pageObj);\n            existingPage = _.find(pages, function (p) {\n                return p.state === getFullStateName(pageObj.state);\n            });\n            if (existingPage) {\n                throw new Error('Page with state name \"' + pageObj.state + '\" is already registered');\n            }\n\n            pages.push({\n                state: getFullStateName(pageObj.state),\n                title: pageObj.title,\n                index: pageObj.index || 100000,\n                access: pageObj.access,\n                visible: pageObj.visible !== false,\n                stateConfig: _.clone(pageObj.stateConfig, true)\n            });\n\n            pipAuthStateProvider.state(getFullStateName(pageObj.state), pageObj.stateConfig);\n\n            // if we just added first state and no default state is specified\n            if (typeof defaultPage === 'undefined' && pages.length === 1) {\n                setDefaultPage(pageObj.state);\n            }\n        }\n\n        function setDefaultPage(name) {\n            if (!_.find(pages, function (page) {\n                return page.state === getFullStateName(name);\n            })) {\n                throw new Error('Page with state name \"' + name + '\" is not registered');\n            }\n\n            defaultPage = getFullStateName(name);\n\n            pipAuthStateProvider.redirect('settings', getFullStateName(name));\n        }\n\n        function validatePage(pageObj) {\n            if (!pageObj || !_.isObject(pageObj)) {\n                throw new Error('Invalid object');\n            }\n\n            if (pageObj.state === null || pageObj.state === '') {\n                throw new Error('Page should have valid Angular UI router state name');\n            }\n\n            if (pageObj.access && !_.isFunction(pageObj.access)) {\n                throw new Error('\"access\" should be a function');\n            }\n\n            if (!pageObj.stateConfig || !_.isObject(pageObj.stateConfig)) {\n                throw new Error('Invalid state configuration object');\n            }\n        }\n    }]);\n\n})(window.angular, window._);\n","/**\n * @file Settings page logic\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function (angular) {\n    'use strict';\n\n    angular.module('pipUserSettings', [\n        'ngMaterial', 'pipData',\n        'pipSettings.Service',\n        'pipSettings.Page',\n\n        'pipUserSettings.Data',\n        'pipUserSettings.Strings',\n        'pipUserSettings.Sessions',\n        'pipUserSettings.BasicInfo',\n        'pipSettings.Templates'\n\n    ]);\n\n})(window.angular);\n","/**\n * @file Settings basic info controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function (angular, _) {\n    'use strict';\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail']);\n\n    thisModule.config(['pipSettingsProvider', function (pipSettingsProvider) {\n        pipSettingsProvider.addPage({\n            state: 'basic_info',\n            index: 1,\n            title: 'SETTINGS_BASIC_INFO_TITLE',\n            stateConfig: {\n                url: '/basic_info',\n                controller: 'pipUserSettingsBasicInfoController',\n                templateUrl: 'user_settings/user_settings_basic_info.html',\n                auth: true\n            }\n        });\n\n        pipSettingsProvider.setDefaultPage('basic_info');\n    }]);\n\n    thisModule.controller('pipUserSettingsBasicInfoController',\n        ['$scope', '$rootScope', '$mdDialog', '$state', '$window', '$timeout', '$mdTheming', 'pipTranslate', 'pipTransaction', 'pipTheme', 'pipToasts', 'pipUserSettingsPageData', 'pipFormErrors', function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\n                  pipTranslate, pipTransaction, pipTheme,\n                  pipToasts, pipUserSettingsPageData, pipFormErrors) {\n\n            try {\n                $scope.originalParty = angular.toJson($rootScope.$party);\n            } catch (err) {\n                throw err;\n            }\n\n            $scope.nameCopy = $rootScope.$party.name;\n\n            $timeout(function () {\n                $scope.loc_pos = $rootScope.$party.loc_pos;\n                $scope.$apply();\n            });\n\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\n\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\n\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\n\n            $state.get('settings.basic_info').onExit = saveChanges;\n\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            $scope.onChangePassword = onChangePassword;\n            $scope.onVerifyEmail = onVerifyEmail;\n            $scope.onPictureCreated = onPictureCreated;\n            $scope.onPictureChanged = onPictureChanged;\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\n\n            function onPictureChanged() {\n                $scope.picture.save(\n                    function () {\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\n                    },\n                    function (error) {\n                        return new Error(error);\n                    }\n                );\n            }\n\n            function onPictureCreated($event) {\n                $scope.picture = $event.sender;\n                $scope.picture.save(\n                    function () {\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\n                    },\n                    function (error) {\n                        return new Error(error);\n                    }\n                );\n            }\n\n            function saveChanges() {\n                if ($scope.form) {\n                    $scope.form.$setSubmitted();\n                }\n\n                if ($rootScope.$party) {\n\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\n                        return;\n                    }\n\n                    // Check to avoid unnecessary savings\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\n                    try {\n                        var party = angular.toJson($rootScope.$party);\n                    } catch (err) {\n                        throw err;\n                    }\n\n                    if (party !== $scope.originalParty) {\n                        pipUserSettingsPageData.updateParty($scope.transaction, $rootScope.$party,\n                            function (data) {\n                                $scope.originalParty = party;\n                                $scope.nameCopy = data.name;\n                            }, function (error) {\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\n                            }\n                        );\n                    }\n                }\n\n            }\n\n            function updateUser() {\n\n                if ($rootScope.$user.id === $rootScope.$party.id) {\n                    pipUserSettingsPageData.updateUser($scope.transaction, $rootScope.$user,\n                        function (data) {\n                            pipTranslate.use(data.language);\n                            $rootScope.$user.language = data.language;\n                            $rootScope.$user.theme = data.theme;\n                            if ($rootScope.$user.theme) {\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\n                            }\n\n                        }, function (error) {\n                            var message;\n\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    );\n                }\n            }\n\n            function onChangePassword(event) {\n                var message;\n\n                $mdDialog.show({\n                    templateUrl: 'user_settings/user_settings_change_password.html',\n                    controller: 'pipUserSettingsChangePasswordController',\n                    targetEvent: event,\n                    locals: {email: $rootScope.$party.email}\n                }).then(\n                    function (answer) {\n                        if (answer) {\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    });\n            }\n\n            function onVerifyEmail(event) {\n                var message;\n\n                $mdDialog.show({\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\n                    controller: 'pipUserSettingsVerifyEmailController',\n                    targetEvent: event,\n                    locals: {email: $rootScope.$party.email}\n                }).then(\n                    function (answer) {\n                        $scope.user.email_ver = answer;\n                        if (answer) {\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n\n                        }\n                    }\n                );\n            }\n        }]\n    );\n\n})(window.angular, window._);\n","/**\n * @file Settings change password controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function (angular) {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\n\n    thisModule.controller('pipUserSettingsChangePasswordController',\n        ['$scope', '$rootScope', '$mdDialog', 'email', 'pipRest', 'pipTransaction', 'pipFormErrors', function ($scope, $rootScope, $mdDialog, email, pipRest, pipTransaction, pipFormErrors) {\n\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\n            $scope.errorsRepeatWithHint = function (form, formPart) {\n                if ($scope.showRepeatHint) {\n                    return pipFormErrors.errorsWithHint(form, formPart);\n                }\n\n                return {};\n            };\n            $scope.showRepeatHint = true;\n            $scope.changePasData = {};\n\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            $scope.onCancel = onCancel;\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\n            $scope.onApply = onApply;\n\n            function onCancel() {\n                $mdDialog.cancel();\n            }\n\n            function onCheckRepeatPassword() {\n                if ($scope.changePasData) {\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\n                        $scope.form.repeat.$setValidity('repeat', true);\n                        if ($scope.repeat === $scope.changePasData.new_password) {\n                            $scope.showRepeatHint = false;\n                        } else {\n                            $scope.showRepeatHint = true;\n                        }\n                    } else {\n                        $scope.showRepeatHint = true;\n                        $scope.form.repeat.$setValidity('repeat', false);\n                    }\n                }\n            }\n\n            function onApply() {\n                $scope.onCheckRepeatPassword();\n\n                if ($scope.form.$invalid) {\n                    return;\n                }\n\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\n                    return;\n                }\n\n                $scope.changePasData.email = email;\n\n                pipRest.changePassword().call(\n                    $scope.changePasData,\n                    function (data) {\n                        $scope.transaction.end();\n                        $mdDialog.hide(true);\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n                        pipFormErrors.setFormError(\n                            $scope.form, error,\n                            {\n                                1107: 'oldPassword',\n                                1105: 'newPassword'\n                            }\n                        );\n                    }\n                );\n            }\n        }]\n    );\n\n})(window.angular);\n","/**\n * @file Settings data model\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function (angular) {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Data', ['pipDataModel']);\n\n    thisModule.provider('pipUserSettingsPageData', function () {\n\n        this.readContactsResolver = /* @ngInject */\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\n                return pipRest.getOwnContacts().get({\n                    party_id: pipRest.partyId($stateParams),\n                    session_id: pipRest.sessionId()\n                }).$promise;\n            }];\n\n        this.readBlocksResolver = /* @ngInject */\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\n                return pipRest.connectionBlocks().query({\n                    party_id: pipRest.partyId($stateParams)\n                }).$promise;\n            }];\n\n        this.readSessionsResolver = /* @ngInject */\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\n                return pipRest.userSessions().query({\n                    party_id: pipRest.partyId($stateParams)\n                }).$promise;\n            }];\n\n        this.readActivitiesResolver = /* @ngInject */\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\n                return pipRest.partyActivities().page({\n                    party_id: pipRest.partyId($stateParams),\n                    paging: 1,\n                    skip: 0,\n                    take: 25\n                }).$promise;\n            }];\n\n        this.readSettingsResolver = /* @ngInject */\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\n                return pipRest.partySettings().get({\n                    party_id: pipRest.partyId($stateParams)\n                }).$promise;\n            }];\n\n        this.readSessionIdResolver = /* @ngInject */\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\n                return pipRest.sessionId();\n            }];\n\n        // CRUD operations and other business methods\n\n        this.$get = ['pipRest', '$stateParams', function (pipRest, $stateParams) {\n            return {\n                partyId: pipRest.partyId,\n\n                updateParty: function (transaction, party, successCallback, errorCallback) {\n                    var tid = transaction.begin('UPDATING');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.parties().update(\n                        party,\n                        function (updatedParty) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n\n                            if (successCallback) {\n                                successCallback(updatedParty);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                saveContacts: function (transaction, contacts, successCallback, errorCallback) {\n                    var tid = transaction.begin('SAVING');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.contacts().save(\n                        contacts,\n                        function (savedContacts) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                            if (successCallback) {\n                                successCallback(savedContacts);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                updateContact: function (transaction, contact, successCallback, errorCallback) {\n                    var tid = transaction.begin('UPDATING');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.contacts().update(\n                        contact,\n                        function (updatedContact) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                            if (successCallback) {\n                                successCallback(updatedContact);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                updateUser: function (transaction, user, successCallback, errorCallback) {\n                    var tid = transaction.begin('UPDATING');\n\n                    if (!tid) {\n                        return;\n                    }\n                    pipRest.users().update(\n                        user,\n                        function (updatedUser) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                            if (successCallback) {\n                                successCallback(updatedUser);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                removeBlock: function (transaction, block, successCallback, errorCallback) {\n                    var tid = transaction.begin('REMOVING');\n\n                    if (!tid) {\n                        return;\n                    }\n                    pipRest.connectionBlocks().remove(\n                        block,\n                        function (removedBlock) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                            if (successCallback) {\n                                successCallback(removedBlock);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                removeSession: function (transaction, session, successCallback, errorCallback) {\n                    var tid = transaction.begin('REMOVING');\n\n                    if (!tid) {\n                        return;\n                    }\n                    pipRest.userSessions().remove(\n                        {\n                            id: session.id,\n                            party_id: pipRest.partyId($stateParams)\n                        },\n                        function (removedSession) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                            if (successCallback) {\n                                successCallback(removedSession);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                requestEmailVerification: function (transaction) {\n                    var tid = transaction.begin('RequestEmailVerification');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.requestEmailVerification().get(\n                        {\n                            party_id: pipRest.partyId($stateParams)\n                        },\n                        function () {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                        }, function (error) {\n                            transaction.end(error);\n                        }\n                    );\n                },\n\n                verifyEmail: function (transaction, verifyData, successCallback, errorCallback) {\n                    var tid = transaction.begin('Verifying');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.verifyEmail().call(\n                        verifyData,\n                        function (verifyData) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n\n                            if (successCallback) {\n                                successCallback(verifyData);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                saveSettings: function (transaction, settings, successCallback, errorCallback) {\n                    var tid = transaction.begin('SAVING');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.partySettings().save(\n                        settings,\n                        function (savedSettings) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n\n                            if (successCallback) {\n                                successCallback(savedSettings);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                getPreviousActivities: function (transaction, start, successCallback, errorCallback) {\n                    var tid = transaction.begin('SAVING');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.partyActivities().page(\n                        {\n                            party_id: pipRest.partyId($stateParams),\n                            paging: 1,\n                            skip: start,\n                            take: 25\n                        },\n                        function (pagedActivities) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n                            if (successCallback) {\n                                successCallback(pagedActivities);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                },\n\n                getRefPreviousEventsActivities: function (transaction, start, refType, item,\n                                                          successCallback, errorCallback) {\n                    var tid = transaction.begin('SAVING');\n\n                    if (!tid) {\n                        return;\n                    }\n\n                    pipRest.partyActivities().page(\n                        {\n                            party_id: pipRest.partyId($stateParams),\n                            paging: 1,\n                            skip: start,\n                            ref_type: refType,\n                            ref_id: item.id,\n                            take: 25\n                        },\n                        function (pagedActivities) {\n                            if (transaction.aborted(tid)) {\n                                return;\n                            }\n                            transaction.end();\n\n                            if (successCallback) {\n                                successCallback(pagedActivities);\n                            }\n                        },\n                        function (error) {\n                            transaction.end(error);\n                            if (errorCallback) {\n                                errorCallback(error);\n                            }\n                        }\n                    );\n                }\n            };\n        }];\n    });\n\n})(window.angular);\n","/**\n * @file Settings sessions controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function (angular, _, async) {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Sessions', []);\n\n    thisModule.config(['pipSettingsProvider', 'pipUserSettingsPageDataProvider', function (pipSettingsProvider, pipUserSettingsPageDataProvider) {\n        pipSettingsProvider.addPage({\n            state: 'sessions',\n            index: 3,\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\n            stateConfig: {\n                url: '/sessions',\n                controller: 'pipUserSettingsSessionsController',\n                templateUrl: 'user_settings/user_settings_sessions.html',\n                auth: true,\n                resolve: {\n                    sessions: pipUserSettingsPageDataProvider.readSessionsResolver,\n                    sessionId: pipUserSettingsPageDataProvider.readSessionIdResolver\n                }\n            }\n        });\n    }]);\n\n    thisModule.controller('pipUserSettingsSessionsController',\n        ['$scope', 'pipTransaction', 'pipUserSettingsPageData', 'sessions', 'sessionId', function ($scope, pipTransaction, pipUserSettingsPageData, sessions, sessionId) {\n\n            $scope.sessionId = sessionId;\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\n            $scope.sessions = sessions;\n\n            $scope.onRemoveAll = onRemoveAll;\n            $scope.onRemove = onRemove;\n\n            function onRemoveAll() {\n                async.each($scope.sessions, function (session) {\n                    if (session.id !== $scope.sessionId) {\n                        $scope.onRemove(session);\n                    }\n                });\n            }\n\n            function onRemove(session) {\n                if (session.id === $scope.sessionId) {\n                    return;\n                }\n\n                pipUserSettingsPageData.removeSession($scope.transaction, session,\n                    function () {\n                        $scope.sessions = _.without($scope.sessions, session);\n                    },\n                    function (error) {\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\n                    }\n                );\n            }\n        }]\n    );\n\n})(window.angular, window._, window.async);\n","/**\n * @file Settings string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function (angular) {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\n\n    thisModule.config(['pipTranslateProvider', function (pipTranslateProvider) {\n\n        // Set translation strings for the module\n        pipTranslateProvider.translations('en', {\n            'SETTINGS_TITLE': 'Settings',\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\n\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\n\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\n\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\n\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\n            '\"Close Session\" to end the session.',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\n\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\n            'private messages.',\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\n\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\n\n            'THEME': 'Theme',\n\n            'HINT_PASSWORD': 'Minimum 6 characters',\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\n\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\n        });\n\n        pipTranslateProvider.translations('ru', {\n            'SETTINGS_TITLE': 'Настройки',\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\n\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\n\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\n\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\n\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\n\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\n            ' посылать вам приглашения и личные сообщения.',\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\n\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\n\n            'THEME': 'Тема',\n\n            'HINT_PASSWORD': 'Минимум 6 знаков',\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\n\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\n        });\n    }]);\n\n})(window.angular);\n","/**\n * @file Settings verify email controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function (angular) {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\n\n    thisModule.controller('pipUserSettingsVerifyEmailController',\n        ['$scope', '$rootScope', '$mdDialog', 'pipTransaction', 'pipFormErrors', 'pipUserSettingsPageData', 'email', function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipUserSettingsPageData, email) {\n\n            $scope.emailVerified = false;\n            $scope.data = {\n                email: email,\n                code: ''\n            };\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\n\n            $scope.onAbort = onAbort;\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            $scope.onVerify = onVerify;\n            $scope.onCancel = onCancel;\n\n            function onAbort() {\n                $scope.transaction.abort();\n            }\n\n            function onCancel() {\n                $mdDialog.cancel();\n            }\n\n            function onRequestVerificationClick() {\n                pipUserSettingsPageData.requestEmailVerification($scope.transaction);\n            }\n\n            function onVerify() {\n                $scope.form.$setSubmitted();\n\n                if ($scope.form.$invalid) {\n                    return;\n                }\n\n                pipUserSettingsPageData.verifyEmail(\n                    $scope.transaction,\n                    $scope.data,\n                    function (verifyData) {\n                        $mdDialog.hide(true);\n                    },\n                    function (error) {\n                        pipFormErrors.setFormError(\n                            $scope.form, error,\n                            {\n                                1106: 'email',\n                                1103: 'code'\n                            }\n                        );\n\n                    }\n                );\n            }\n        }]\n    );\n\n})(window.angular);\n"],"sourceRoot":"/source/"}