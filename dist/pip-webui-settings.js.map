{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","src/user_settings/user_settings.ts","src/user_settings/user_settings_basic_info.ts","src/user_settings/user_settings_change_password.ts","src/user_settings/user_settings_sessions.ts","src/user_settings/user_settings_strings.ts","src/user_settings/user_settings_verify_email.ts","temp/pip-webui-settings-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport './settings_service/index';\nimport './settings_page/index';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './settings_service';\nexport * from './settings_page';","﻿/**\n * @file Registration of settings components\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    angular.module('pipSettings', [\n        'pipSettings.Service',\n        'pipSettings.Page'\n    ]);\n\n})();\n","// Prevent junk from going into typescript definitions\n(() => {\n\nclass SettingsPageController {\n    private _log: ng.ILogService;\n    private _q: ng.IQService;\n    private _state: ng.ui.IStateService;\n\n    public tabs: any;\n    public selected: any;\n    public onDropdownSelect: any;\n\n    constructor(\n        $log: ng.ILogService,\n        $q: ng.IQService,\n        $state: ng.ui.IStateService,\n        pipNavService,\n        pipSettings,\n        $rootScope, \n        $timeout\n    ) {\n        this._log = $log;\n        this._q = $q;\n        this._state = $state;\n\n        this.tabs = _.filter(pipSettings.getTabs(), function (tab: any) {\n                if (tab.visible === true && (tab.access ? tab.access($rootScope.$user, tab) : true)) {\n                    return tab;\n                }\n            });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = {};\n        if (this._state.current.name !== 'settings') {\n            this.initSelect(this._state.current.name);\n        } else if (this._state.current.name === 'settings' && pipSettings.getDefaultTab()) {\n            this.initSelect(pipSettings.getDefaultTab().state);\n        } else {\n            $timeout(function () {\n                if (pipSettings.getDefaultTab()) {\n                    this.initSelect(pipSettings.getDefaultTab().state);\n                }\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                     this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n\n        pipNavService.icon.showMenu();\n        pipNavService.breadcrumb.text = \"Settings\";\n        pipNavService.actions.hide();\n        pipNavService.appbar.removeShadow();\n        \n        this.onDropdownSelect = (state) => {\n            this.onNavigationSelect(state.state);\n        }\n    }\n\n    private initSelect(state: string) {\n        this.selected.tab = _.find(this.tabs, function (tab: any) {\n                    return tab.state === state;\n                });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n    }\n\n    public onNavigationSelect(state: string) {\n        this.initSelect(state);\n\n        if (this.selected.tab) {\n            this._state.go(state);\n        }\n    }\n}\n\nangular.module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n})();","'use strict';\n\nfunction configureSettingsPageRoutes($stateProvider) {\n    $stateProvider\n        .state('settings', {\n            url: '/settings?party_id',\n            auth: true,\n            controllerAs: 'vm',\n            controller: 'pipSettingsPageController',\n            templateUrl: 'settings_page/SettingsPage.html'\n        });\n       \n}\n\nangular.module('pipSettings.Page')\n    .config(configureSettingsPageRoutes);\n","'use strict';\n\nangular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPageController';\nimport './SettingsPageRoutes';","'use strict';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public index: string;\n    public access: boolean;\n    public visible: boolean;\n    public stateConfig: any;\n}\n\nexport interface ISettingsService {\n    getDefaultTab();\n    showTitleText (newTitleText);\n    showTitleLogo(newTitleLogo);\n    setDefaultTab(name: string);\n    showNavIcon(value);\n    getTabs();\n}\n\nexport interface ISettingsProvider extends ng.IServiceProvider {\n    getDefaultTab(): SettingsTab;\n    addTab(tabObj: any);\n    setDefaultTab(name: string): void;\n    getFullStateName(state: string): string;\n}\n\nexport class SettingsConfig {\n\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n\n}\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor($rootScope: ng.IRootScopeService, \n                       config: SettingsConfig) {\n        \"ngInject\";\n        this._rootScope = $rootScope;\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, function (tab) {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab() {\n        var defaultTab;\n        defaultTab = _.find(this._config.tabs, function (p) {\n            return p.state === defaultTab;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string) {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean) {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n    public getTabs() {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n    private _stateProvider: ng.ui.IStateProvider;\n\n    constructor($stateProvider: ng.ui.IStateProvider) {\n        this._stateProvider = $stateProvider;\n    }\n\n    public getFullStateName(state): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        var defaultTab;\n\n        defaultTab = _.find(this._config.tabs, function (p) {\n            return p.state === defaultTab;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: any) {\n        var existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, function (p) {\n            return p.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this._stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, function (tab) {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //this._stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n\n    private validateTab(tabObj: SettingsTab) {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value) {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get($rootScope, $state) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SettingsService($rootScope, this._config);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","'use strict';\n\nangular.module('pipSettings.Service', []);\n\nimport './SettingsService';","/**\n * @file Settings tab logic\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    angular.module('pipUserSettings', [\n        'ngMaterial', 'pipData',\n        'pipSettings.Service',\n        'pipSettings.Page',\n\n        'pipUserSettings.Strings',\n        'pipUserSettings.Sessions',\n        'pipUserSettings.BasicInfo',\n        'pipSettings.Templates'\n    ]);\n\n})();\n","/**\n * @file Settings basic info controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail', \n            'pipSettings.Service', 'pipSettings.Page',]);\n\n    thisModule.config(function (pipSettingsProvider) {\n        pipSettingsProvider.addTab({\n            state: 'basic_info',\n            index: 1,\n            title: 'SETTINGS_BASIC_INFO_TITLE',\n            stateConfig: {\n                url: '/basic_info',\n                controller: 'pipUserSettingsBasicInfoController',\n                templateUrl: 'user_settings/user_settings_basic_info.html',\n                auth: true\n            }\n        });\n\n        pipSettingsProvider.setDefaultTab('basic_info');\n    });\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n     *\n     * @description\n     * Controller for the predefined 'basic_info' state.\n     * Provides sync changes user's profile with remote profile.\n     * On state exit everything is saved on the server.\n     */\n    thisModule.controller('pipUserSettingsBasicInfoController',\n        function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\n                  pipTranslate, pipTransaction, pipTheme,\n                  pipToasts, pipDataUser, pipDataParty, pipFormErrors) {\n\n            try {\n                $scope.originalParty = angular.toJson($rootScope.$party);\n            } catch (err) {\n                throw err;\n            }\n\n            $scope.nameCopy = $rootScope.$party.name;\n\n            $timeout(function () {\n                $scope.loc_pos = $rootScope.$party.loc_pos;\n            });\n\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\n\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\n\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\n\n            $state.get('settings.basic_info').onExit = saveChanges;\n\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            /** @see onChangePassword */\n            $scope.onChangePassword = onChangePassword;\n            /** @see onVerifyEmail */\n            $scope.onVerifyEmail = onVerifyEmail;\n            /** @see onPictureCreated */\n            $scope.onPictureCreated = onPictureCreated;\n            /** @see onPictureChanged */\n            $scope.onPictureChanged = onPictureChanged;\n            /** @see updateUser */\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\n            /** @see saveChanges */\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\n\n            function onPictureChanged() {\n                $scope.picture.save(\n                    function () {\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\n                    },\n                    function (error) {\n                        return new Error(error);\n                    }\n                );\n            }\n\n            function onPictureCreated($event) {\n                $scope.picture = $event.sender;\n                $scope.picture.save(\n                    function () {\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\n                    },\n                    function (error) {\n                        return new Error(error);\n                    }\n                );\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeBasicInfo\n             *\n             * @description\n             * Saves changes onto server.\n             * This method responses on change of the input information.\n             * It is updated user's party profile. Also it updates user's profile in $rootScope.\n             */\n            function saveChanges() {\n                if ($scope.form) {\n                    $scope.form.$setSubmitted();\n                }\n\n                if ($rootScope.$party) {\n\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\n                        return;\n                    }\n\n                    // Check to avoid unnecessary savings\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\n                    try {\n                        var party = angular.toJson($rootScope.$party);\n                    } catch (err) {\n                        throw err;\n                    }\n\n                    if (party !== $scope.originalParty) {\n                        var tid = $scope.transaction.begin('UPDATING');\n\n                        pipDataParty.updateParty($rootScope.$party,\n                            function (data) {\n                                if ($scope.transaction.aborted(tid)) {\n                                    return;\n                                }\n                                $scope.transaction.end();\n\n                                $scope.originalParty = party;\n                                $scope.nameCopy = data.name;\n                            }, function (error) {\n                                $scope.transaction.end(error);\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\n                            }\n                        );\n                    }\n                }\n\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeUser\n             *\n             * @description\n             * Saves changes onto server.\n             * This method responses on change of the user's profile information.\n             * Also it updates user's profile in $rootScope.\n             */\n            function updateUser() {\n                var tid = $scope.transaction.begin('RequestEmailVerification');\n\n                if ($rootScope.$user.id === $rootScope.$party.id) {\n                    pipDataUser.updateUser(\n                        {\n                            item: $rootScope.$user\n                        },\n                        function (data) {\n                            if ($scope.transaction.aborted(tid)) {\n                                return;\n                            }\n                            $scope.transaction.end();\n\n                            pipTranslate.use(data.language);\n                            $rootScope.$user.language = data.language;\n                            $rootScope.$user.theme = data.theme;\n                            if ($rootScope.$user.theme) {\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\n                            }\n\n                        }, function (error) {\n                            var message;\n                            \n                            $scope.transaction.end(error);\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    );\n                }\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangePassword\n             *\n             * @description\n             * It opens a dialog panel to change password.\n             *\n             * @param {Object} event    Triggered event object\n             */\n            function onChangePassword(event) {\n                var message;\n\n                $mdDialog.show({\n                    templateUrl: 'user_settings/user_settings_change_password.html',\n                    controller: 'pipUserSettingsChangePasswordController',\n                    targetEvent: event,\n                    locals: {email: $rootScope.$party.email}\n                }).then(\n                    function (answer) {\n                        if (answer) {\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    });\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onVerifyEmail\n             *\n             * @description\n             * It opens a dialog panel to change password.\n             *\n             * @param {Object} event    Triggered event object\n             */\n            function onVerifyEmail(event) {\n                var message;\n\n                $mdDialog.show({\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\n                    controller: 'pipUserSettingsVerifyEmailController',\n                    targetEvent: event,\n                    locals: {email: $rootScope.$party.email}\n                }).then(\n                    function (answer) {\n                        $scope.user.email_ver = answer;\n                        if (answer) {\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","/**\n * @file Settings change password controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n     *\n     * @description\n     * Controller for dialog panel of password change.\n     */\n    thisModule.controller('pipUserSettingsChangePasswordController',\n        function ($scope, $rootScope, $mdDialog, email, pipDataUser, pipTransaction, pipFormErrors) {\n\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\n            $scope.errorsRepeatWithHint = function (form, formPart) {\n                if ($scope.showRepeatHint) {\n                    return pipFormErrors.errorsWithHint(form, formPart);\n                }\n\n                return {};\n            };\n            $scope.showRepeatHint = true;\n            $scope.changePasData = {};\n\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            $scope.onCancel = onCancel;\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\n            $scope.onApply = onApply;\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCancel\n             *\n             * @description\n             * Closes opened dialog panel.\n             */\n            function onCancel() {\n                $mdDialog.cancel();\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCheckRepeatPassword\n             *\n             * @description\n             * Validates a password typed into password fields.\n             */\n            function onCheckRepeatPassword() {\n                if ($scope.changePasData) {\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\n                        $scope.form.repeat.$setValidity('repeat', true);\n                        if ($scope.repeat === $scope.changePasData.new_password) {\n                            $scope.showRepeatHint = false;\n                        } else {\n                            $scope.showRepeatHint = true;\n                        }\n                    } else {\n                        $scope.showRepeatHint = true;\n                        $scope.form.repeat.$setValidity('repeat', false);\n                    }\n                }\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onApply\n             *\n             * @description\n             * Approves password change and sends request to the server on password change.\n             */\n            function onApply() {\n                $scope.onCheckRepeatPassword();\n\n                if ($scope.form.$invalid) {\n                    return;\n                }\n\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\n                    return;\n                }\n\n                $scope.changePasData.email = email;\n\n                pipDataUser.changePassword(\n                    $scope.changePasData,\n                    function () {\n                        $scope.transaction.end();\n                        $mdDialog.hide(true);\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n                        pipFormErrors.setFormError(\n                            $scope.form, error,\n                            {\n                                1107: 'oldPassword',\n                                1105: 'newPassword'\n                            }\n                        );\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","/**\n * @file Settings sessions controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Sessions', [\n        'pipSettings.Service', 'pipSettings.Page',]);\n\n    thisModule.config(function (pipSettingsProvider, pipDataSessionProvider) {\n        pipSettingsProvider.addTab({\n            state: 'sessions',\n            index: 3,\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\n            stateConfig: {\n                url: '/sessions',\n                controller: 'pipUserSettingsSessionsController',\n                templateUrl: 'user_settings/user_settings_sessions.html',\n                auth: true,\n                resolve: {\n                    sessions: pipDataSessionProvider.readSessionsResolver,\n                    sessionId: pipDataSessionProvider.readSessionIdResolver\n                }\n            }\n        });\n    });\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.Sessions:pipUserSettingsSessionsController\n     *\n     * @description\n     * Controller provides an interface for managing active sessions.\n     */\n    thisModule.controller('pipUserSettingsSessionsController',\n        function ($scope, pipTransaction, pipDataSession, sessions, sessionId) {\n\n            $scope.sessionId = sessionId;\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\n            $scope.sessions = sessions;\n\n            $scope.onRemoveAll = onRemoveAll;\n            $scope.onRemove = onRemove;\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemoveAll\n             *\n             * @description\n             * Closes all active session.\n             */\n            function onRemoveAll() {\n                var tid = $scope.transaction.begin('REMOVING');\n\n                async.eachSeries(\n                    $scope.sessions,\n                    function (session: any, callback) {\n                        if (session.id == $scope.sessionId) {\n                            callback();\n                        } else {\n                            pipDataSession.removeSession(\n                                {\n                                    session: session\n                                },\n                                function () {\n                                    $scope.sessions = _.without($scope.sessions, session);\n                                    callback();\n                                },\n                                function (error) {\n                                    callback;\n                                }\n                            );\n                        }\n                    },\n                    function (err) {\n                        if (err) {\n                            $scope.transaction.end(err);\n                        }\n                        if ($scope.transaction.aborted(tid)) {\n                            return;\n                        }\n                        $scope.transaction.end();\n                    });                \n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemove\n             *\n             * @description\n             * Closes passed session.\n             *\n             * @param {Object} session  Session configuration object\n             */\n            function onRemove(session, callback) {\n                if (session.id === $scope.sessionId) {\n                    return;\n                }\n                var tid = $scope.transaction.begin('REMOVING');\n                pipDataSession.removeSession(\n                    {\n                        session: session\n                    },\n                    function () {\n                        if ($scope.transaction.aborted(tid)) {\n                            return;\n                        }\n                        $scope.transaction.end();\n\n                        $scope.sessions = _.without($scope.sessions, session);\n                        if (callback) {\n                            callback();\n                        }\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","/**\n * @file Settings string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* eslint-disable quote-props */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\n\n    thisModule.config(function (pipTranslateProvider) {\n\n        // Set translation strings for the module\n        pipTranslateProvider.translations('en', {\n            'SETTINGS_TITLE': 'Settings',\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\n\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\n\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\n\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\n\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\n            '\"Close Session\" to end the session.',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\n\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\n            'private messages.',\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\n\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\n\n            'THEME': 'Theme',\n\n            'HINT_PASSWORD': 'Minimum 6 characters',\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\n\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\n        });\n\n        pipTranslateProvider.translations('ru', {\n            'SETTINGS_TITLE': 'Настройки',\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\n\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\n\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\n\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\n\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\n\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\n            ' посылать вам приглашения и личные сообщения.',\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\n\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\n\n            'THEME': 'Тема',\n\n            'HINT_PASSWORD': 'Минимум 6 знаков',\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\n\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\n        });\n    });\n\n})();\n","/**\n * @file Settings verify email controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n     *\n     * @description\n     * Controller for verify email dialog panel.\n     */\n    thisModule.controller('pipUserSettingsVerifyEmailController',\n        function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipDataUser, email) {\n\n            $scope.emailVerified = false;\n            $scope.data = {\n                email: email,\n                code: ''\n            };\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\n\n            /** @see onAbort */\n            $scope.onAbort = onAbort;\n            /** @see onRequestVerificationClick*/\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            /** @see onVerify */\n            $scope.onVerify = onVerify;\n            /** @see onCancel */\n            $scope.onCancel = onCancel;\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onAbort\n             *\n             * @description\n             * Aborts a verify request.\n             */\n            function onAbort() {\n                $scope.transaction.abort();\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onCancel\n             *\n             * @description\n             * Closes opened dialog panel.\n             */\n            function onCancel() {\n                $mdDialog.cancel();\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onRequestVerificationClick\n             *\n             * @description\n             * Sends request to verify entered email.\n             */\n            function onRequestVerificationClick() {\n                    var tid = $scope.transaction.begin('RequestEmailVerification');\n\n                pipDataUser.requestEmailVerification(\n                    {},                         \n                    function (result) {\n                            if ($scope.transaction.aborted(tid)) {\n                                return;\n                            }\n                            $scope.transaction.end();\n                        }, \n                        function (error) {\n                            $scope.transaction.end(error);\n                        }\n                    );\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onVerify\n             *\n             * @description\n             * Initiates request on verify email on the server.\n             */\n            function onVerify() {\n                $scope.form.$setSubmitted();\n\n                if ($scope.form.$invalid) {\n                    return;\n                }\n                var tid = $scope.transaction.begin('Verifying');\n\n                pipDataUser.verifyEmail(\n                    {\n                        email: $scope.data.email,\n                        code: $scope.data.code\n                    }, \n                    function (verifyData) {\n                            if ($scope.transaction.aborted(tid)) {\n                                return;\n                            }\n                            $scope.transaction.end();\n\n                        $mdDialog.hide(true);\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n\n                        pipFormErrors.setFormError(\n                            $scope.form, error,\n                            {\n                                1106: 'email',\n                                1103: 'code'\n                            }\n                        );\n\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" class=\"w-stretch\" novalidate=\"\"><md-progress-linear class=\"pip-progress-top\" ng-show=\"transaction.busy()\" md-mode=\"indeterminate\"></md-progress-linear><div class=\"layout-row bm12\"><div class=\"md-tile-left\"><pip-avatar-edit pip-party-id=\"$party.id\" pip-created=\"onPictureCreated($event)\" pip-changed=\"onPictureChanged($control, $event)\"></pip-avatar-edit></div><div class=\"md-tile-content tp0 layout-align-center\"><h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3><p class=\"text-primary text-overflow m0\">{{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}} {{$user.signup | formatLongDate }}</p></div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label> <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required=\"\" ng-model=\"$party.name\" ng-disabled=\"transaction.busy()\" ng-change=\"onChangeBasicInfo()\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.fullName).hint\">{{::\\'ERROR_FULLNAME_INVALID\\' | translate}}</div></md-input-container><md-input-container class=\"md-block bm0\"><label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" required=\"\" ng-model=\"$party.email\" ng-change=\"onChangeBasicInfo()\" pip-email-unique=\"{{$party.email}}\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' | translate}}</div><div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\"$party.type ==\\'team\\'\"><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div><div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div></div></md-input-container><md-button class=\"md-raised bm16 tm8 rm8\" ng-click=\"onVerifyEmail($event)\" ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}</md-button><md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}</md-button><md-input-container class=\"md-block flex\"><label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label> <textarea ng-model=\"$party.about\" columns=\"1\" ng-change=\"onChangeBasicInfo()\"></textarea></md-input-container><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'GENDER\\' | translate}}</label><md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\" placeholder=\"{{\\'GENDER\\' | translate}}\"><md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option></md-select></md-input-container><div ng-hide=\"$party.type ==\\'team\\'\"><p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p><pip-date ng-model=\"$party.birthday\" ng-change=\"onChangeBasicInfo()\" pip-time-mode=\"past time-mode=\" past\"=\"\"></pip-date></div><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'LANGUAGE\\' | translate}}</label><md-select placeholder=\"{{\\'LANGUAGE\\' | translate}}\" ng-model=\"$user.language\" ng-change=\"onChangeUser()\"><md-option ng-value=\"language.id\" ng-repeat=\"language in languages\">{{language.name}}</md-option></md-select></md-input-container><md-input-container class=\"md-block\" ng-if=\"$party.type !=\\'team\\'\"><label>{{::\\'THEME\\' | translate}}</label><md-select class=\"w-stretch theme-text-primary\" ng-model=\"$user.theme\" ng-change=\"onChangeUser()\" ng-disabled=\"transaction.busy()\"><md-option ng-value=\"theme\" ng-repeat=\"theme in themes\" ng-selected=\"$theme == theme ? true : false\">{{ theme | translate }}</md-option></md-select></md-input-container><pip-location-edit class=\"map-edit bm24-flex\" ng-hide=\"$party.type ==\\'team\\'\" pip-changed=\"onChangeBasicInfo()\" pip-location-name=\"$party.loc_name\" pip-location-pos=\"loc_pos\"></pip-location-edit></form>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><form name=\"form\" ng-submit=\"onApply()\"><div class=\"pip-header\"><h3 class=\"m0\">{{::\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}</h3></div><div class=\"pip-body\"><div class=\"pip-content\"><div class=\"text-error bm8\" ng-messages=\"form.$serverError\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label> <input name=\"oldPassword\" type=\"password\" ng-model=\"changePasData.old_password\" ng-required=\"change_password.$submitted\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.oldPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"ERROR_1107\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{\\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label> <input name=\"newPassword\" type=\"password\" ng-model=\"changePasData.new_password\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\" pip-clear-errors=\"\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.newPassword).hint\">{{ \\'HINT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsWithHint(form, form.newPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"ERROR_1105\">{{::\\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label> <input name=\"repeat\" type=\"password\" ng-model=\"repeat\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\"><div class=\"hint\" ng-if=\"errorsRepeatWithHint(form.repeat).hint\">{{::\\'HINT_REPEAT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsRepeatWithHint(form.repeat)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"repeat\">{{::\\'REPEAT_PASSWORD_INVALID\\' | translate }}</div></div></md-input-container></div></div><div class=\"pip-footer\"><div><md-button aria-label=\"xxx\" ng-click=\"onCancel()\">{{::\\'CANCEL\\' | translate }}</md-button><md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">{{::\\'APPLY\\' | translate : module}}</md-button></div></div></form></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '<md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><div class=\"pip-details-title pip-sessions\"><p class=\"pip-title bm16\">{{::\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}</p><p class=\"pip-subtitle\">{{::\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}</p></div><md-list class=\"w-stretch\"><div ng-repeat=\"session in sessions\"><div class=\"layout-row\" ng-init=\"showBlock = session.id != sessionId\" ng-click=\"showBlock = !showBlock\"><p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">{{::session.client}}</p><p class=\"m0 lp4 text-body1 color-secondary-text flex\">{{::\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}}</p><p class=\"m0 text-body1 color-secondary-text\">{{::country}}<md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon><md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon></p></div><div class=\"layout-row bm8 bp8\" ng-class=\"{\\'divider-bottom\\':!$last}\"><div class=\"flex-50\"><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\">{{session.last_req | date : \\'medium\\'}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{::session.platform}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{::session.address}}</p><md-button class=\"md-raised\" ng-show=\"showBlock && session.id != sessionId\" ng-click=\"onRemove(session)\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}</md-button></div><pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\" pip-ipaddress=\"session.address\" pip-extra-info=\"country = extraInfo.country\"></pip-location-ip></div></div></md-list><div class=\"layout-row layout-align-end-center\"><md-button class=\"md-raised\" ng-show=\"sessions.length > 1\" ng-click=\"onRemoveAll()\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2>{{::\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{::\\'VERIFY_EMAIL_TEXT_1\\' | translate}}</p><form name=\"form\" novalidate=\"\"><div ng-messages=\"form.$serverError\" class=\"text-error bm8\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"display bp4 md-block\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" ng-model=\"data.email\" required=\"\" step=\"any\" pip-clear-errors=\"\" tabindex=\"1\" ng-disabled=\"transaction.busy()\" pip-test=\"input-email\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"errorsWithHint(form, form.email)\" xng-if=\"!form.email.$pristine\"><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label> <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\" ng-model=\"data.code\" required=\"\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.code)\"><div ng-message=\"required\">{{::\\'ERROR_CODE_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1103\">{{::\\'ERROR_CODE_WRONG\\' | translate }}</div></div></md-input-container><p>{{::\\'VERIFY_EMAIL_TEXT_21\\' | translate}} <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::\\'VERIFY_EMAIL_RESEND\\' | translate}}</a> {{::\\'VERIFY_EMAIL_TEXT_22\\' | translate}}</p></form></div></div><div class=\"pip-footer\"><md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\" ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">{{::\\'VERIFY\\' | translate}}</md-button><md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}