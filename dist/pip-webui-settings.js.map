{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","temp/pip-webui-settings-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport './settings_service/index';\nimport './settings_page/index';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './settings_service';\nexport * from './settings_page';","// Prevent junk from going into typescript definitions\n\nimport {ISettingsService, SettingsTab} from '../settings_service/SettingsService';\n\nexport class SettingsPageSelectedTab {\n    public tab: SettingsTab;\n    public tabIndex: number = 0;\n    public tabId: string;\n}\n\ninterface ISettingsPageController {\n    tabs: SettingsTab[];\n    selected: SettingsPageSelectedTab;\n    onDropdownSelect: Function;\n    onNavigationSelect(state: string): void;\n}\n\n\n\n(() => {\n\n    class SettingsPageController implements ISettingsPageController {\n    public tabs: SettingsTab[];\n    public selected: SettingsPageSelectedTab;\n    public onDropdownSelect: Function;\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        pipNavService: pip.nav.INavService,\n        pipSettings: ISettingsService,\n        $rootScope: ng.IRootScopeService, \n        $timeout: angular.ITimeoutService\n    ) {\n\n        this.tabs = _.filter(pipSettings.getTabs(), (tab: SettingsTab) => {\n                if (tab.visible === true && (tab.access ? tab.access($rootScope['$user'], tab) : true)) {\n                    return tab;\n                }\n            });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = new SettingsPageSelectedTab();\n        if (this.$state.current.name !== 'settings') {\n            this.initSelect(this.$state.current.name);\n        } else if (this.$state.current.name === 'settings' && pipSettings.getDefaultTab()) {\n            this.initSelect(pipSettings.getDefaultTab().state);\n        } else {\n            $timeout(() => {\n                if (pipSettings.getDefaultTab()) {\n                    this.initSelect(pipSettings.getDefaultTab().state);\n                }\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                     this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n\n        pipNavService.icon.showMenu();\n        pipNavService.breadcrumb.text = \"Settings\";\n        pipNavService.actions.hide();\n        pipNavService.appbar.removeShadow();\n        \n        this.onDropdownSelect = (state) => {\n            this.onNavigationSelect(state.state);\n        }\n    }\n\n    private initSelect(state: string): void {\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\n            return tab.state === state;\n        });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n    }\n\n    public onNavigationSelect(state: string): void {\n        this.initSelect(state);\n\n        if (this.selected.tab) {\n            this.$state.go(state);\n        }\n    }\n}\n\nangular.module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n})();","'use strict';\n\nfunction configureSettingsPageRoutes($stateProvider) {\n    $stateProvider\n        .state('settings', {\n            url: '/settings?party_id',\n            auth: true,\n            controllerAs: 'vm',\n            controller: 'pipSettingsPageController',\n            templateUrl: 'settings_page/SettingsPage.html'\n        });\n       \n}\n\nangular.module('pipSettings.Page')\n    .config(configureSettingsPageRoutes);\n","'use strict';\n\nangular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPageController';\nimport './SettingsPageRoutes';","'use strict';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public index: number;\n    public access: Function;\n    public visible: boolean;\n    public stateConfig: SettingsStateConfig;\n}\n\nexport class SettingsStateConfig {\n    public url: string;\n    public auth: boolean = false;\n    public templateUrl?: string;\n    public template?: string;\n}\n\nexport interface ISettingsService {\n    getDefaultTab(): SettingsTab;\n    showTitleText (newTitleText: string): void;\n    showTitleLogo(newTitleLogo);\n    setDefaultTab(name: string): void;\n    showNavIcon(value: boolean): boolean;\n    getTabs(): SettingsTab[];\n}\n\nexport interface ISettingsProvider extends ng.IServiceProvider {\n    getDefaultTab(): SettingsTab;\n    addTab(tabObj: SettingsTab): void;\n    setDefaultTab(name: string): void;\n    getFullStateName(state: string): string;\n}\n\nexport class SettingsConfig {\n\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n\n}\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n\n    public constructor(config: SettingsConfig) {\n        \"ngInject\";\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public getTabs(): SettingsTab[] {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\n\n    public getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: SettingsTab): void {\n        let existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //this.$stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n\n    private validateTab(tabObj: SettingsTab): void {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get(): ISettingsService {\n        \"ngInject\";\n\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\n            this._service = new SettingsService(this._config);\n        }\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","'use strict';\n\nangular.module('pipSettings.Service', []);\n\nimport './SettingsService';","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}