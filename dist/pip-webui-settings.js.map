{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","src/user_settings/user_settings.ts","src/user_settings/user_settings_basic_info.ts","src/user_settings/user_settings_change_password.ts","src/user_settings/user_settings_sessions.ts","src/user_settings/user_settings_strings.ts","src/user_settings/user_settings_verify_email.ts","temp/pip-webui-settings-html.min.js"],"names":[],"mappings":"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E7B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC,EACD,UAAU,KAAK;gBACX,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE9B,aAAa,CAAC,YAAY,CACtB,MAAM,CAAC,IAAI,EAAE,KAAK,EAClB;oBACI,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,MAAM;iBACf,CACJ,CAAC;YAEN,CAAC,CACJ,CAAC;QACN,CAAC;IACL,CAAC,CACJ,CAAC;AAEN,CAAC,CAAC,EAAE,CAAC;;ACpIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nimport './settings_service/index';\r\nimport './settings_page/index';\r\n\r\nangular.module('pipSettings', [\r\n    'pipSettings.Service',\r\n    'pipSettings.Page'\r\n]);\r\n\r\nexport * from './settings_service';\r\nexport * from './settings_page';","﻿/**\r\n * @file Registration of settings components\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipSettings', [\r\n        'pipSettings.Service',\r\n        'pipSettings.Page'\r\n    ]);\r\n\r\n})();\r\n","// Prevent junk from going into typescript definitions\r\n\r\nimport {ISettingsService, SettingsTab} from '../settings_service/SettingsService';\r\n\r\nexport class SettingsPageSelectedTab {\r\n    public tab: SettingsTab;\r\n    public tabIndex: number = 0;\r\n    public tabId: string;\r\n}\r\n\r\ninterface ISettingsPageController {\r\n    tabs: SettingsTab[];\r\n    selected: SettingsPageSelectedTab;\r\n    onDropdownSelect: Function;\r\n    onNavigationSelect(state: string): void;\r\n}\r\n\r\nclass SettingsPageController implements ISettingsPageController {\r\n    public tabs: SettingsTab[];\r\n    public selected: SettingsPageSelectedTab;\r\n    public onDropdownSelect: Function;\r\n\r\n    constructor(\r\n        private $state: ng.ui.IStateService,\r\n        pipNavService: pip.nav.INavService,\r\n        pipSettings: ISettingsService,\r\n        $rootScope: ng.IRootScopeService, \r\n        $timeout: angular.ITimeoutService\r\n    ) {\r\n\r\n        this.tabs = _.filter(pipSettings.getTabs(), (tab: SettingsTab) => {\r\n                if (tab.visible === true && (tab.access ? tab.access($rootScope['$user'], tab) : true)) {\r\n                    return tab;\r\n                }\r\n            });\r\n\r\n        this.tabs = _.sortBy(this.tabs, 'index');\r\n\r\n        this.selected = new SettingsPageSelectedTab();\r\n        if (this.$state.current.name !== 'settings') {\r\n            this.initSelect(this.$state.current.name);\r\n        } else if (this.$state.current.name === 'settings' && pipSettings.getDefaultTab()) {\r\n            this.initSelect(pipSettings.getDefaultTab().state);\r\n        } else {\r\n            $timeout(() => {\r\n                if (pipSettings.getDefaultTab()) {\r\n                    this.initSelect(pipSettings.getDefaultTab().state);\r\n                }\r\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\r\n                     this.initSelect(this.tabs[0].state);\r\n                }\r\n            });\r\n        }\r\n\r\n        pipNavService.icon.showMenu();\r\n        pipNavService.breadcrumb.text = \"Settings\";\r\n        pipNavService.actions.hide();\r\n        pipNavService.appbar.removeShadow();\r\n        \r\n        this.onDropdownSelect = (state) => {\r\n            this.onNavigationSelect(state.state);\r\n        }\r\n    }\r\n\r\n    private initSelect(state: string): void {\r\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\r\n            return tab.state === state;\r\n        });\r\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\r\n        this.selected.tabId = state;\r\n    }\r\n\r\n    public onNavigationSelect(state: string): void {\r\n        this.initSelect(state);\r\n\r\n        if (this.selected.tab) {\r\n            this.$state.go(state);\r\n        }\r\n    }\r\n}\r\n\r\n(() => {\r\n\r\nangular.module('pipSettings.Page')\r\n    .controller('pipSettingsPageController', SettingsPageController);\r\n})();","'use strict';\r\n\r\nfunction configureSettingsPageRoutes($stateProvider) {\r\n    $stateProvider\r\n        .state('settings', {\r\n            url: '/settings?party_id',\r\n            auth: true,\r\n            controllerAs: 'vm',\r\n            controller: 'pipSettingsPageController',\r\n            templateUrl: 'settings_page/SettingsPage.html'\r\n        });\r\n       \r\n}\r\n\r\nangular.module('pipSettings.Page')\r\n    .config(configureSettingsPageRoutes);\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Page', [\r\n    'ui.router', \r\n    'pipSettings.Service',\r\n    'pipNav', \r\n    'pipSelected',\r\n    'pipTranslate',\r\n    'pipSettings.Templates'\r\n    ]);\r\n\r\n\r\nimport './SettingsPageController';\r\nimport './SettingsPageRoutes';","'use strict';\r\n\r\nexport class SettingsTab {\r\n    public state: string;\r\n    public title: string;\r\n    public index: number;\r\n    public access: Function;\r\n    public visible: boolean;\r\n    public stateConfig: SettingsStateConfig;\r\n}\r\n\r\nexport class SettingsStateConfig {\r\n    public url: string;\r\n    public auth: boolean = false;\r\n    public templateUrl?: string;\r\n    public template?: string;\r\n}\r\n\r\nexport interface ISettingsService {\r\n    getDefaultTab(): SettingsTab;\r\n    showTitleText (newTitleText: string): void;\r\n    showTitleLogo(newTitleLogo);\r\n    setDefaultTab(name: string): void;\r\n    showNavIcon(value: boolean): boolean;\r\n    getTabs(): SettingsTab[];\r\n}\r\n\r\nexport interface ISettingsProvider extends ng.IServiceProvider {\r\n    getDefaultTab(): SettingsTab;\r\n    addTab(tabObj: SettingsTab): void;\r\n    setDefaultTab(name: string): void;\r\n    getFullStateName(state: string): string;\r\n}\r\n\r\nexport class SettingsConfig {\r\n\r\n    public defaultTab: string;\r\n    public tabs: SettingsTab[] = [];\r\n    public titleText: string = 'SETTINGS_TITLE';\r\n    public titleLogo: boolean = null;\r\n    public isNavIcon: boolean = true;\r\n\r\n}\r\n\r\nclass SettingsService implements ISettingsService {\r\n    private _config: SettingsConfig;\r\n\r\n    public constructor(config: SettingsConfig) {\r\n        \"ngInject\";\r\n        this._config = config;\r\n    }\r\n\r\n    private getFullStateName(state: string): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public setDefaultTab(name: string): void {\r\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        let defaultTab: SettingsTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === defaultTab.state;\r\n        });\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean): boolean {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public getTabs(): SettingsTab[] {\r\n        return _.cloneDeep(this._config.tabs);\r\n    }\r\n\r\n}\r\n\r\nclass SettingsProvider implements ISettingsProvider {\r\n    private _service: SettingsService;\r\n    private _config: SettingsConfig = new SettingsConfig();\r\n\r\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\r\n\r\n    public getFullStateName(state: string): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        let defaultTab: SettingsTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === defaultTab.state;\r\n        });\r\n\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public addTab(tabObj: SettingsTab) {\r\n        let existingTab: SettingsTab;\r\n\r\n        this.validateTab(tabObj);\r\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + tabObj.state;\r\n        });\r\n        if (existingTab) {\r\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\r\n        }\r\n\r\n        this._config.tabs.push({\r\n            state: this.getFullStateName(tabObj.state),\r\n            title: tabObj.title,\r\n            index: tabObj.index || 100000,\r\n            access: tabObj.access,\r\n            visible: tabObj.visible !== false,\r\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\r\n        });\r\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\r\n\r\n        // if we just added first state and no default state is specified\r\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\r\n            this.setDefaultTab(tabObj.state);\r\n        }\r\n    }\r\n\r\n    public setDefaultTab(name: string): void {\r\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\r\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n        //this.$stateProvider.go(this._config.defaultTab);\r\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n    }\r\n\r\n    /**\r\n     * Validates passed tab config object\r\n     * If passed tab is not valid it will throw an error\r\n     */\r\n\r\n    private validateTab(tabObj: SettingsTab): void {\r\n        if (!tabObj || !_.isObject(tabObj)) {\r\n            throw new Error('Invalid object');\r\n        }\r\n\r\n        if (tabObj.state === null || tabObj.state === '') {\r\n            throw new Error('Tab should have valid Angular UI router state name');\r\n        }\r\n\r\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\r\n            throw new Error('\"access\" should be a function');\r\n        }\r\n\r\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\r\n            throw new Error('Invalid state configuration object');\r\n        }\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean): boolean {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public $get(): ISettingsService {\r\n        \"ngInject\";\r\n\r\n        if (_.isNull(this._service) || _.isFunction(this._service)) {\r\n            this._service = new SettingsService(this._config);\r\n        }\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipSettings.Service')\r\n    .provider('pipSettings', SettingsProvider);\r\n\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Service', []);\r\n\r\nimport './SettingsService';","/**\r\n * @file Settings tab logic\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipUserSettings', [\r\n        'ngMaterial', 'pipData',\r\n        'pipSettings.Service',\r\n        'pipSettings.Page',\r\n\r\n        'pipUserSettings.Strings',\r\n        'pipUserSettings.Sessions',\r\n        'pipUserSettings.BasicInfo',\r\n        'pipSettings.Templates'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * @file Settings basic info controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\r\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail', \r\n            'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'basic_info',\r\n            index: 1,\r\n            title: 'SETTINGS_BASIC_INFO_TITLE',\r\n            stateConfig: {\r\n                url: '/basic_info',\r\n                controller: 'pipUserSettingsBasicInfoController',\r\n                templateUrl: 'user_settings/user_settings_basic_info.html',\r\n                auth: true\r\n            }\r\n        });\r\n\r\n        pipSettingsProvider.setDefaultTab('basic_info');\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n     *\r\n     * @description\r\n     * Controller for the predefined 'basic_info' state.\r\n     * Provides sync changes user's profile with remote profile.\r\n     * On state exit everything is saved on the server.\r\n     */\r\n    thisModule.controller('pipUserSettingsBasicInfoController',\r\n        function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\r\n                  pipTranslate, pipTransaction, pipTheme,\r\n                  pipToasts, pipDataUser, pipDataParty, pipFormErrors) {\r\n\r\n            try {\r\n                $scope.originalParty = angular.toJson($rootScope.$party);\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n\r\n            $scope.nameCopy = $rootScope.$party.name;\r\n\r\n            $timeout(function () {\r\n                $scope.loc_pos = $rootScope.$party.loc_pos;\r\n            });\r\n\r\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\r\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\r\n\r\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\r\n\r\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\r\n\r\n            $state.get('settings.basic_info').onExit = saveChanges;\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onChangePassword */\r\n            $scope.onChangePassword = onChangePassword;\r\n            /** @see onVerifyEmail */\r\n            $scope.onVerifyEmail = onVerifyEmail;\r\n            /** @see onPictureCreated */\r\n            $scope.onPictureCreated = onPictureCreated;\r\n            /** @see onPictureChanged */\r\n            $scope.onPictureChanged = onPictureChanged;\r\n            /** @see updateUser */\r\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\r\n            /** @see saveChanges */\r\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\r\n\r\n            function onPictureChanged() {\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            function onPictureCreated($event) {\r\n                $scope.picture = $event.sender;\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeBasicInfo\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the input information.\r\n             * It is updated user's party profile. Also it updates user's profile in $rootScope.\r\n             */\r\n            function saveChanges() {\r\n                if ($scope.form) {\r\n                    $scope.form.$setSubmitted();\r\n                }\r\n\r\n                if ($rootScope.$party) {\r\n\r\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\r\n                        return;\r\n                    }\r\n\r\n                    // Check to avoid unnecessary savings\r\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\r\n                    try {\r\n                        var party = angular.toJson($rootScope.$party);\r\n                    } catch (err) {\r\n                        throw err;\r\n                    }\r\n\r\n                    if (party !== $scope.originalParty) {\r\n                        var tid = $scope.transaction.begin('UPDATING');\r\n\r\n                        pipDataParty.updateParty($rootScope.$party,\r\n                            function (data) {\r\n                                if ($scope.transaction.aborted(tid)) {\r\n                                    return;\r\n                                }\r\n                                $scope.transaction.end();\r\n\r\n                                $scope.originalParty = party;\r\n                                $scope.nameCopy = data.name;\r\n                            }, function (error) {\r\n                                $scope.transaction.end(error);\r\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeUser\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the user's profile information.\r\n             * Also it updates user's profile in $rootScope.\r\n             */\r\n            function updateUser() {\r\n                var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                if ($rootScope.$user.id === $rootScope.$party.id) {\r\n                    pipDataUser.updateUser(\r\n                        {\r\n                            item: $rootScope.$user\r\n                        },\r\n                        function (data) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                            pipTranslate.use(data.language);\r\n                            $rootScope.$user.language = data.language;\r\n                            $rootScope.$user.theme = data.theme;\r\n                            if ($rootScope.$user.theme) {\r\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\r\n                            }\r\n\r\n                        }, function (error) {\r\n                            var message;\r\n                            \r\n                            $scope.transaction.end(error);\r\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangePassword\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onChangePassword(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_change_password.html',\r\n                    controller: 'pipUserSettingsChangePasswordController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        if (answer) {\r\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onVerifyEmail\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onVerifyEmail(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\r\n                    controller: 'pipUserSettingsVerifyEmailController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        $scope.user.email_ver = answer;\r\n                        if (answer) {\r\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings change password controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n     *\r\n     * @description\r\n     * Controller for dialog panel of password change.\r\n     */\r\n    thisModule.controller('pipUserSettingsChangePasswordController',\r\n        function ($scope, $rootScope, $mdDialog, email, pipDataUser, pipTransaction, pipFormErrors) {\r\n\r\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\r\n            $scope.errorsRepeatWithHint = function (form, formPart) {\r\n                if ($scope.showRepeatHint) {\r\n                    return pipFormErrors.errorsWithHint(form, formPart);\r\n                }\r\n\r\n                return {};\r\n            };\r\n            $scope.showRepeatHint = true;\r\n            $scope.changePasData = {};\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onCancel = onCancel;\r\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\r\n            $scope.onApply = onApply;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCheckRepeatPassword\r\n             *\r\n             * @description\r\n             * Validates a password typed into password fields.\r\n             */\r\n            function onCheckRepeatPassword() {\r\n                if ($scope.changePasData) {\r\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\r\n                        $scope.form.repeat.$setValidity('repeat', true);\r\n                        if ($scope.repeat === $scope.changePasData.new_password) {\r\n                            $scope.showRepeatHint = false;\r\n                        } else {\r\n                            $scope.showRepeatHint = true;\r\n                        }\r\n                    } else {\r\n                        $scope.showRepeatHint = true;\r\n                        $scope.form.repeat.$setValidity('repeat', false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onApply\r\n             *\r\n             * @description\r\n             * Approves password change and sends request to the server on password change.\r\n             */\r\n            function onApply() {\r\n                $scope.onCheckRepeatPassword();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\r\n                    return;\r\n                }\r\n\r\n                $scope.changePasData.email = email;\r\n\r\n                pipDataUser.changePassword(\r\n                    $scope.changePasData,\r\n                    function () {\r\n                        $scope.transaction.end();\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1107: 'oldPassword',\r\n                                1105: 'newPassword'\r\n                            }\r\n                        );\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings sessions controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Sessions', [\r\n        'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider, pipDataSessionProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'sessions',\r\n            index: 3,\r\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\r\n            stateConfig: {\r\n                url: '/sessions',\r\n                controller: 'pipUserSettingsSessionsController',\r\n                templateUrl: 'user_settings/user_settings_sessions.html',\r\n                auth: true,\r\n                resolve: {\r\n                    sessions: pipDataSessionProvider.readSessionsResolver,\r\n                    sessionId: pipDataSessionProvider.readSessionIdResolver\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n     *\r\n     * @description\r\n     * Controller provides an interface for managing active sessions.\r\n     */\r\n    thisModule.controller('pipUserSettingsSessionsController',\r\n        function ($scope, pipTransaction, pipDataSession, sessions, sessionId) {\r\n\r\n            $scope.sessionId = sessionId;\r\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\r\n            $scope.sessions = sessions;\r\n\r\n            $scope.onRemoveAll = onRemoveAll;\r\n            $scope.onRemove = onRemove;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemoveAll\r\n             *\r\n             * @description\r\n             * Closes all active session.\r\n             */\r\n            function onRemoveAll() {\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n\r\n                async.eachSeries(\r\n                    $scope.sessions,\r\n                    function (session: any, callback) {\r\n                        if (session.id == $scope.sessionId) {\r\n                            callback();\r\n                        } else {\r\n                            pipDataSession.removeSession(\r\n                                {\r\n                                    session: session\r\n                                },\r\n                                function () {\r\n                                    $scope.sessions = _.without($scope.sessions, session);\r\n                                    callback();\r\n                                },\r\n                                function (error) {\r\n                                    callback;\r\n                                }\r\n                            );\r\n                        }\r\n                    },\r\n                    function (err) {\r\n                        if (err) {\r\n                            $scope.transaction.end(err);\r\n                        }\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n                    });                \r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemove\r\n             *\r\n             * @description\r\n             * Closes passed session.\r\n             *\r\n             * @param {Object} session  Session configuration object\r\n             */\r\n            function onRemove(session, callback) {\r\n                if (session.id === $scope.sessionId) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n                pipDataSession.removeSession(\r\n                    {\r\n                        session: session\r\n                    },\r\n                    function () {\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n\r\n                        $scope.sessions = _.without($scope.sessions, session);\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* eslint-disable quote-props */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\r\n\r\n    thisModule.config(function (pipTranslateProvider) {\r\n\r\n        // Set translation strings for the module\r\n        pipTranslateProvider.translations('en', {\r\n            'SETTINGS_TITLE': 'Settings',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\r\n\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\r\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\r\n            '\"Close Session\" to end the session.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\r\n            'private messages.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\r\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\r\n\r\n            'THEME': 'Theme',\r\n\r\n            'HINT_PASSWORD': 'Minimum 6 characters',\r\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\r\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\r\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'SETTINGS_TITLE': 'Настройки',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\r\n\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\r\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\r\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\r\n            ' посылать вам приглашения и личные сообщения.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\r\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\r\n\r\n            'THEME': 'Тема',\r\n\r\n            'HINT_PASSWORD': 'Минимум 6 знаков',\r\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\r\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\r\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\r\n        });\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Settings verify email controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n     *\r\n     * @description\r\n     * Controller for verify email dialog panel.\r\n     */\r\n    thisModule.controller('pipUserSettingsVerifyEmailController',\r\n        function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipDataUser, email) {\r\n\r\n            $scope.emailVerified = false;\r\n            $scope.data = {\r\n                email: email,\r\n                code: ''\r\n            };\r\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\r\n\r\n            /** @see onAbort */\r\n            $scope.onAbort = onAbort;\r\n            /** @see onRequestVerificationClick*/\r\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onVerify */\r\n            $scope.onVerify = onVerify;\r\n            /** @see onCancel */\r\n            $scope.onCancel = onCancel;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onAbort\r\n             *\r\n             * @description\r\n             * Aborts a verify request.\r\n             */\r\n            function onAbort() {\r\n                $scope.transaction.abort();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onRequestVerificationClick\r\n             *\r\n             * @description\r\n             * Sends request to verify entered email.\r\n             */\r\n            function onRequestVerificationClick() {\r\n                    var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                pipDataUser.requestEmailVerification(\r\n                    {},                         \r\n                    function (result) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n                        }, \r\n                        function (error) {\r\n                            $scope.transaction.end(error);\r\n                        }\r\n                    );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onVerify\r\n             *\r\n             * @description\r\n             * Initiates request on verify email on the server.\r\n             */\r\n            function onVerify() {\r\n                $scope.form.$setSubmitted();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('Verifying');\r\n\r\n                pipDataUser.verifyEmail(\r\n                    {\r\n                        email: $scope.data.email,\r\n                        code: $scope.data.code\r\n                    }, \r\n                    function (verifyData) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1106: 'email',\r\n                                1103: 'code'\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" class=\"w-stretch\" novalidate=\"\"><md-progress-linear class=\"pip-progress-top\" ng-show=\"transaction.busy()\" md-mode=\"indeterminate\"></md-progress-linear><div class=\"layout-row bm12\"><div class=\"md-tile-left\"><pip-avatar-edit pip-party-id=\"$party.id\" pip-created=\"onPictureCreated($event)\" pip-changed=\"onPictureChanged($control, $event)\"></pip-avatar-edit></div><div class=\"md-tile-content tp0 layout-align-center\"><h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3><p class=\"text-primary text-overflow m0\">{{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}} {{$user.signup | formatLongDate }}</p></div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label> <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required=\"\" ng-model=\"$party.name\" ng-disabled=\"transaction.busy()\" ng-change=\"onChangeBasicInfo()\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.fullName).hint\">{{::\\'ERROR_FULLNAME_INVALID\\' | translate}}</div></md-input-container><md-input-container class=\"md-block bm0\"><label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" required=\"\" ng-model=\"$party.email\" ng-change=\"onChangeBasicInfo()\" pip-email-unique=\"{{$party.email}}\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' | translate}}</div><div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\"$party.type ==\\'team\\'\"><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div><div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div></div></md-input-container><md-button class=\"md-raised bm16 tm8 rm8\" ng-click=\"onVerifyEmail($event)\" ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}</md-button><md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}</md-button><md-input-container class=\"md-block flex\"><label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label> <textarea ng-model=\"$party.about\" columns=\"1\" ng-change=\"onChangeBasicInfo()\"></textarea></md-input-container><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'GENDER\\' | translate}}</label><md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\" placeholder=\"{{\\'GENDER\\' | translate}}\"><md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option></md-select></md-input-container><div ng-hide=\"$party.type ==\\'team\\'\"><p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p><pip-date ng-model=\"$party.birthday\" ng-change=\"onChangeBasicInfo()\" pip-time-mode=\"past time-mode=\" past\"=\"\"></pip-date></div><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'LANGUAGE\\' | translate}}</label><md-select placeholder=\"{{\\'LANGUAGE\\' | translate}}\" ng-model=\"$user.language\" ng-change=\"onChangeUser()\"><md-option ng-value=\"language.id\" ng-repeat=\"language in languages\">{{language.name}}</md-option></md-select></md-input-container><md-input-container class=\"md-block\" ng-if=\"$party.type !=\\'team\\'\"><label>{{::\\'THEME\\' | translate}}</label><md-select class=\"w-stretch theme-text-primary\" ng-model=\"$user.theme\" ng-change=\"onChangeUser()\" ng-disabled=\"transaction.busy()\"><md-option ng-value=\"theme\" ng-repeat=\"theme in themes\" ng-selected=\"$theme == theme ? true : false\">{{ theme | translate }}</md-option></md-select></md-input-container><pip-location-edit class=\"map-edit bm24-flex\" ng-hide=\"$party.type ==\\'team\\'\" pip-changed=\"onChangeBasicInfo()\" pip-location-name=\"$party.loc_name\" pip-location-pos=\"loc_pos\"></pip-location-edit></form>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><form name=\"form\" ng-submit=\"onApply()\"><div class=\"pip-header\"><h3 class=\"m0\">{{::\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}</h3></div><div class=\"pip-body\"><div class=\"pip-content\"><div class=\"text-error bm8\" ng-messages=\"form.$serverError\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label> <input name=\"oldPassword\" type=\"password\" ng-model=\"changePasData.old_password\" ng-required=\"change_password.$submitted\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.oldPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"ERROR_1107\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{\\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label> <input name=\"newPassword\" type=\"password\" ng-model=\"changePasData.new_password\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\" pip-clear-errors=\"\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.newPassword).hint\">{{ \\'HINT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsWithHint(form, form.newPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"ERROR_1105\">{{::\\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label> <input name=\"repeat\" type=\"password\" ng-model=\"repeat\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\"><div class=\"hint\" ng-if=\"errorsRepeatWithHint(form.repeat).hint\">{{::\\'HINT_REPEAT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsRepeatWithHint(form.repeat)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"repeat\">{{::\\'REPEAT_PASSWORD_INVALID\\' | translate }}</div></div></md-input-container></div></div><div class=\"pip-footer\"><div><md-button aria-label=\"xxx\" ng-click=\"onCancel()\">{{::\\'CANCEL\\' | translate }}</md-button><md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">{{::\\'APPLY\\' | translate : module}}</md-button></div></div></form></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '<md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><div class=\"pip-details-title pip-sessions\"><p class=\"pip-title bm16\">{{::\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}</p><p class=\"pip-subtitle\">{{::\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}</p></div><md-list class=\"w-stretch\"><div ng-repeat=\"session in sessions\"><div class=\"layout-row\" ng-init=\"showBlock = session.id != sessionId\" ng-click=\"showBlock = !showBlock\"><p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">{{::session.client}}</p><p class=\"m0 lp4 text-body1 color-secondary-text flex\">{{::\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}}</p><p class=\"m0 text-body1 color-secondary-text\">{{::country}}<md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon><md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon></p></div><div class=\"layout-row bm8 bp8\" ng-class=\"{\\'divider-bottom\\':!$last}\"><div class=\"flex-50\"><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\">{{session.last_req | date : \\'medium\\'}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{::session.platform}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{::session.address}}</p><md-button class=\"md-raised\" ng-show=\"showBlock && session.id != sessionId\" ng-click=\"onRemove(session)\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}</md-button></div><pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\" pip-ipaddress=\"session.address\" pip-extra-info=\"country = extraInfo.country\"></pip-location-ip></div></div></md-list><div class=\"layout-row layout-align-end-center\"><md-button class=\"md-raised\" ng-show=\"sessions.length > 1\" ng-click=\"onRemoveAll()\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2>{{::\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{::\\'VERIFY_EMAIL_TEXT_1\\' | translate}}</p><form name=\"form\" novalidate=\"\"><div ng-messages=\"form.$serverError\" class=\"text-error bm8\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"display bp4 md-block\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" ng-model=\"data.email\" required=\"\" step=\"any\" pip-clear-errors=\"\" tabindex=\"1\" ng-disabled=\"transaction.busy()\" pip-test=\"input-email\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"errorsWithHint(form, form.email)\" xng-if=\"!form.email.$pristine\"><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label> <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\" ng-model=\"data.code\" required=\"\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.code)\"><div ng-message=\"required\">{{::\\'ERROR_CODE_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1103\">{{::\\'ERROR_CODE_WRONG\\' | translate }}</div></div></md-input-container><p>{{::\\'VERIFY_EMAIL_TEXT_21\\' | translate}} <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::\\'VERIFY_EMAIL_RESEND\\' | translate}}</a> {{::\\'VERIFY_EMAIL_TEXT_22\\' | translate}}</p></form></div></div><div class=\"pip-footer\"><md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\" ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">{{::\\'VERIFY\\' | translate}}</md-button><md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}