{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/index.ts","src/page/SettingsPage.ts","src/page/SettingsPageRoutes.ts","src/page/index.ts","src/service/SettingsConfig.ts","src/service/SettingsPageSelectedTab.ts","src/service/SettingsService.ts","src/service/SettingsStateConfig.ts","src/service/SettingsTab.ts","src/service/index.ts","temp/pip-webui-settings-html.js"],"names":[],"mappings":"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","file":"pip-webui-settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './service';\nimport './page';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './service';","import { ISettingsService } from '../service/ISettingsService';\nimport { SettingsTab } from '../service/SettingsTab';\nimport { SettingsPageSelectedTab } from '../service/SettingsPageSelectedTab';\n\ninterface ISettingsPageController {\n    tabs: SettingsTab[];\n    selected: SettingsPageSelectedTab;\n    onDropdownSelect: Function;\n    onNavigationSelect(state: string): void;\n}\n\nclass SettingsPageController implements ISettingsPageController {\n    public tabs: SettingsTab[];\n    public selected: SettingsPageSelectedTab;\n    public onDropdownSelect: Function;\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        pipNavService: pip.nav.INavService,\n        pipSettings: ISettingsService,\n        $rootScope: ng.IRootScopeService, \n        $timeout: angular.ITimeoutService\n    ) {\n\n        this.tabs = _.filter(pipSettings.getTabs(), (tab: SettingsTab) => {\n                if (tab.visible === true && (tab.access ? tab.access($rootScope['$user'], tab) : true)) {\n                    return tab;\n                }\n            });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = new SettingsPageSelectedTab();\n        if (this.$state.current.name !== 'settings') {\n            this.initSelect(this.$state.current.name);\n        } else if (this.$state.current.name === 'settings' && pipSettings.getDefaultTab()) {\n            this.initSelect(pipSettings.getDefaultTab().state);\n        } else {\n            $timeout(() => {\n                if (pipSettings.getDefaultTab()) {\n                    this.initSelect(pipSettings.getDefaultTab().state);\n                }\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                     this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n\n        pipNavService.icon.showMenu();\n        pipNavService.breadcrumb.text = \"Settings\";\n        pipNavService.actions.hide();\n        pipNavService.appbar.removeShadow();\n        \n        this.onDropdownSelect = (state) => {\n            this.onNavigationSelect(state.state);\n        }\n    }\n\n    private initSelect(state: string): void {\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\n            return tab.state === state;\n        });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n        this.$state.go(this.selected.tabId);\n    }\n\n    public onNavigationSelect(state: string): void {\n        this.initSelect(state);\n\n        if (this.selected.tab) {\n            this.$state.go(state);\n        }\n    }\n}\n\nangular\n    .module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n","{\n    function configureSettingsPageRoutes($stateProvider) {\n        $stateProvider\n            .state('settings', {\n                url: '/settings?party_id',\n                auth: true,\n                controllerAs: 'vm',\n                controller: 'pipSettingsPageController',\n                templateUrl: 'page/SettingsPage.html'\n            });\n\n    }\n\n    angular.module('pipSettings.Page')\n        .config(configureSettingsPageRoutes);\n}\n","angular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPage';\nimport './SettingsPageRoutes';","import { SettingsTab } from './SettingsTab';\n\nexport class SettingsConfig {\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n}\n","import { SettingsTab } from './SettingsTab';\n\nexport class SettingsPageSelectedTab {\n    public tab: SettingsTab;\n    public tabIndex: number = 0;\n    public tabId: string;\n}","import { SettingsTab } from './SettingsTab';\nimport { SettingsConfig } from './SettingsConfig';\nimport { ISettingsService } from './ISettingsService';\nimport { ISettingsProvider } from './ISettingsService';\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n\n    public constructor(config: SettingsConfig) {\n        \"ngInject\";\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === this._config.defaultTab;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public getTabs(): SettingsTab[] {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\n\n    public getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: SettingsTab): void {\n        let existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //console.log(this.$stateProvider);\n        //this.$stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n    private validateTab(tabObj: SettingsTab): void {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get(): ISettingsService {\n        \"ngInject\";\n\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\n            this._service = new SettingsService(this._config);\n        }\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","export class SettingsStateConfig {\n    public url: string;\n    public auth: boolean = false;\n    public templateUrl?: string;\n    public template?: string;\n}","import { SettingsStateConfig } from './SettingsStateConfig';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public index: number;\n    public access: Function;\n    public visible: boolean;\n    public stateConfig: SettingsStateConfig;\n}\n","angular.module('pipSettings.Service', []);\n\nimport './SettingsConfig';\nimport './SettingsPageSelectedTab';\nimport './SettingsStateConfig';\nimport './SettingsTab';\nimport './SettingsService';\n\nexport * from './SettingsConfig';\nexport * from './SettingsPageSelectedTab';\nexport * from './SettingsStateConfig';\nexport * from './SettingsTab';\nexport * from './SettingsService';\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar>\\n' +\n    '<pip-document width=\"800\" min-height=\"400\"\\n' +\n    '              class=\"pip-settings\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-menu-container\"\\n' +\n    '         ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">\\n' +\n    '        <md-list class=\"pip-menu pip-simple-list\"\\n' +\n    '                 pip-selected=\"vm.selected.tabIndex\"\\n' +\n    '                 pip-selected-watch=\"vm.selected.navId\"\\n' +\n    '                 pip-select=\"vm.onNavigationSelect($event.id)\">\\n' +\n    '            <md-list-item class=\"pip-simple-list-item pip-selectable flex\"\\n' +\n    '                          ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id ||\\n' +\n    '                          tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\'\\n' +\n    '                          || tab.state ==\\'settings.blacklist\\'\"\\n' +\n    '                          md-ink-ripple\\n' +\n    '                          pip-id=\"{{:: tab.state }}\">\\n' +\n    '                <p>{{::tab.title | translate}}</p>\\n' +\n    '            </md-list-item>\\n' +\n    '        </md-list>\\n' +\n    '\\n' +\n    '        <div class=\"pip-content-container\">\\n' +\n    '            <pip-dropdown pip-actions=\"vm.tabs\"\\n' +\n    '                          pip-dropdown-select=\"vm.onDropdownSelect\"\\n' +\n    '                          pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown>\\n' +\n    '\\n' +\n    '            <div class=\"pip-body tp24-flex layout-column\" ui-view></div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"layout-column layout-align-center-center flex\"\\n' +\n    '         ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">\\n' +\n    '        {{::\\'ERROR_400\\' | translate}}\\n' +\n    '    </div>\\n' +\n    '</pip-document>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvaW5kZXgudHMiLCJzcmMvcGFnZS9TZXR0aW5nc1BhZ2UudHMiLCJzcmMvcGFnZS9TZXR0aW5nc1BhZ2VSb3V0ZXMudHMiLCJzcmMvcGFnZS9pbmRleC50cyIsInNyYy9zZXJ2aWNlL1NldHRpbmdzQ29uZmlnLnRzIiwic3JjL3NlcnZpY2UvU2V0dGluZ3NQYWdlU2VsZWN0ZWRUYWIudHMiLCJzcmMvc2VydmljZS9TZXR0aW5nc1NlcnZpY2UudHMiLCJzcmMvc2VydmljZS9TZXR0aW5nc1N0YXRlQ29uZmlnLnRzIiwic3JjL3NlcnZpY2UvU2V0dGluZ3NUYWIudHMiLCJzcmMvc2VydmljZS9pbmRleC50cyIsInRlbXAvcGlwLXdlYnVpLXNldHRpbmdzLWh0bWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQ0FBLHFCQUFtQjtBQUNuQixrQkFBZ0I7QUFFaEIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUU7SUFDMUIscUJBQXFCO0lBQ3JCLGtCQUFrQjtDQUNyQixDQUFDLENBQUM7QUFFSCwrQkFBMEI7Ozs7O0FDTjFCLDhFQUE2RTtBQVM3RTtJQUtJLGdDQUNZLE1BQTJCLEVBQ25DLGFBQWtDLEVBQ2xDLFdBQTZCLEVBQzdCLFVBQWdDLEVBQ2hDLFFBQWlDO1FBTHJDLGlCQXdDQztRQXZDVyxXQUFNLEdBQU4sTUFBTSxDQUFxQjtRQU9uQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxFQUFFLFVBQUMsR0FBZ0I7WUFDckQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sS0FBSyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFD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QUFzQztBQUN0QyxtQ0FBOEI7OztBQ1g5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgJy4vc2VydmljZSc7XG5pbXBvcnQgJy4vcGFnZSc7XG5cbmFuZ3VsYXIubW9kdWxlKCdwaXBTZXR0aW5ncycsIFtcbiAgICAncGlwU2V0dGluZ3MuU2VydmljZScsXG4gICAgJ3BpcFNldHRpbmdzLlBhZ2UnXG5dKTtcblxuZXhwb3J0ICogZnJvbSAnLi9zZXJ2aWNlJzsiLCJpbXBvcnQgeyBJU2V0dGluZ3NTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9JU2V0dGluZ3NTZXJ2aWNlJztcbmltcG9ydCB7IFNldHRpbmdzVGFiIH0gZnJvbSAnLi4vc2VydmljZS9TZXR0aW5nc1RhYic7XG5pbXBvcnQgeyBTZXR0aW5nc1BhZ2VTZWxlY3RlZFRhYiB9IGZyb20gJy4uL3NlcnZpY2UvU2V0dGluZ3NQYWdlU2VsZWN0ZWRUYWInO1xuXG5pbnRlcmZhY2UgSVNldHRpbmdzUGFnZUNvbnRyb2xsZXIge1xuICAgIHRhYnM6IFNldHRpbmdzVGFiW107XG4gICAgc2VsZWN0ZWQ6IFNldHRpbmdzUGFnZVNlbGVjdGVkVGFiO1xuICAgIG9uRHJvcGRvd25TZWxlY3Q6IEZ1bmN0aW9uO1xuICAgIG9uTmF2aWdhdGlvblNlbGVjdChzdGF0ZTogc3RyaW5nKTogdm9pZDtcbn1cblxuY2xhc3MgU2V0dGluZ3NQYWdlQ29udHJvbGxlciBpbXBsZW1lbnRzIElTZXR0aW5nc1BhZ2VDb250cm9sbGVyIHtcbiAgICBwdWJsaWMgdGFiczogU2V0dGluZ3NUYWJbXTtcbiAgICBwdWJsaWMgc2VsZWN0ZWQ6IFNldHRpbmdzUGFnZVNlbGVjdGVkVGFiO1xuICAgIHB1YmxpYyBvbkRyb3Bkb3duU2VsZWN0OiBGdW5jdGlvbjtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlICRzdGF0ZTogbmcudWkuSVN0YXRlU2VydmljZSxcbiAgICAgICAgcGlwTmF2U2VydmljZTogcGlwLm5hdi5JTmF2U2VydmljZSxcbiAgICAgICAgcGlwU2V0dGluZ3M6IElTZXR0aW5nc1NlcnZpY2UsXG4gICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLCBcbiAgICAgICAgJHRpbWVvdXQ6IGFuZ3VsYXIuSVRpbWVvdXRTZXJ2aWNlXG4gICAgKSB7XG5cbiAgICAgICAgdGhpcy50YWJzID0gXy5maWx0ZXIocGlwU2V0dGluZ3MuZ2V0VGFicygpLCAodGFiOiBTZXR0aW5nc1RhYikgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0YWIudmlzaWJsZSA9PT0gdHJ1ZSAmJiAodGFiLmFjY2VzcyA/IHRhYi5hY2Nlc3MoJHJvb3RTY29wZVsnJHVzZXInXSwgdGFiKSA6IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0YWI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy50YWJzID0gXy5zb3J0QnkodGhpcy50YWJzLCAnaW5kZXgnKTtcblxuICAgICAgICB0aGlzLnNlbGVjdGVkID0gbmV3IFNldHRpbmdzUGFnZVNlbGVjdGVkVGFiKCk7XG4gICAgICAgIGlmICh0aGlzLiRzdGF0ZS5jdXJyZW50Lm5hbWUgIT09ICdzZXR0aW5ncycpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdFNlbGVjdCh0aGlzLiRzdGF0ZS5jdXJyZW50Lm5hbWUpO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJHN0YXRlLmN1cnJlbnQubmFtZSA9PT0gJ3NldHRpbmdzJyAmJiBwaXBTZXR0aW5ncy5nZXREZWZhdWx0VGFiKCkpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdFNlbGVjdChwaXBTZXR0aW5ncy5nZXREZWZhdWx0VGFiKCkuc3RhdGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChwaXBTZXR0aW5ncy5nZXREZWZhdWx0VGFiKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0U2VsZWN0KHBpcFNldHRpbmdzLmdldERlZmF1bHRUYWIoKS5zdGF0ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghcGlwU2V0dGluZ3MuZ2V0RGVmYXVsdFRhYigpICYmIHRoaXMudGFicy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICB0aGlzLmluaXRTZWxlY3QodGhpcy50YWJzWzBdLnN0YXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBpcE5hdlNlcnZpY2UuaWNvbi5zaG93TWVudSgpO1xuICAgICAgICBwaXBOYXZTZXJ2aWNlLmJyZWFkY3J1bWIudGV4dCA9IFwiU2V0dGluZ3NcIjtcbiAgICAgICAgcGlwTmF2U2VydmljZS5hY3Rpb25zLmhpZGUoKTtcbiAgICAgICAgcGlwTmF2U2VydmljZS5hcHBiYXIucmVtb3ZlU2hhZG93KCk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLm9uRHJvcGRvd25TZWxlY3QgPSAoc3RhdGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMub25OYXZpZ2F0aW9uU2VsZWN0KHN0YXRlLnN0YXRlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdFNlbGVjdChzdGF0ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWQudGFiID0gXy5maW5kKHRoaXMudGFicywgKHRhYjogU2V0dGluZ3NUYWIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0YWIuc3RhdGUgPT09IHN0YXRlO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZC50YWJJbmRleCA9IF8uaW5kZXhPZih0aGlzLnRhYnMsIHRoaXMuc2VsZWN0ZWQudGFiKTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZC50YWJJZCA9IHN0YXRlO1xuICAgICAgICB0aGlzLiRzdGF0ZS5nbyh0aGlzLnNlbGVjdGVkLnRhYklkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25OYXZpZ2F0aW9uU2VsZWN0KHN0YXRlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5pbml0U2VsZWN0KHN0YXRlKTtcblxuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZC50YWIpIHtcbiAgICAgICAgICAgIHRoaXMuJHN0YXRlLmdvKHN0YXRlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcFNldHRpbmdzLlBhZ2UnKVxuICAgIC5jb250cm9sbGVyKCdwaXBTZXR0aW5nc1BhZ2VDb250cm9sbGVyJywgU2V0dGluZ3NQYWdlQ29udHJvbGxlcik7XG4iLCJ7XG4gICAgZnVuY3Rpb24gY29uZmlndXJlU2V0dGluZ3NQYWdlUm91dGVzKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICAgICAgICRzdGF0ZVByb3ZpZGVyXG4gICAgICAgICAgICAuc3RhdGUoJ3NldHRpbmdzJywge1xuICAgICAgICAgICAgICAgIHVybDogJy9zZXR0aW5ncz9wYXJ0eV9pZCcsXG4gICAgICAgICAgICAgICAgYXV0aDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3BpcFNldHRpbmdzUGFnZUNvbnRyb2xsZXInLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAncGFnZS9TZXR0aW5nc1BhZ2UuaHRtbCdcbiAgICAgICAgICAgIH0pO1xuXG4gICAgfVxuXG4gICAgYW5ndWxhci5tb2R1bGUoJ3BpcFNldHRpbmdzLlBhZ2UnKVxuICAgICAgICAuY29uZmlnKGNvbmZpZ3VyZVNldHRpbmdzUGFnZVJvdXRlcyk7XG59XG4iLCJhbmd1bGFyLm1vZHVsZSgncGlwU2V0dGluZ3MuUGFnZScsIFtcbiAgICAndWkucm91dGVyJywgXG4gICAgJ3BpcFNldHRpbmdzLlNlcnZpY2UnLFxuICAgICdwaXBOYXYnLCBcbiAgICAncGlwU2VsZWN0ZWQnLFxuICAgICdwaXBUcmFuc2xhdGUnLFxuICAgICdwaXBTZXR0aW5ncy5UZW1wbGF0ZXMnXG4gICAgXSk7XG5cblxuaW1wb3J0ICcuL1NldHRpbmdzUGFnZSc7XG5pbXBvcnQgJy4vU2V0dGluZ3NQYWdlUm91dGVzJzsiLCJpbXBvcnQgeyBTZXR0aW5nc1RhYiB9IGZyb20gJy4vU2V0dGluZ3NUYWInO1xuXG5leHBvcnQgY2xhc3MgU2V0dGluZ3NDb25maWcge1xuICAgIHB1YmxpYyBkZWZhdWx0VGFiOiBzdHJpbmc7XG4gICAgcHVibGljIHRhYnM6IFNldHRpbmdzVGFiW10gPSBbXTtcbiAgICBwdWJsaWMgdGl0bGVUZXh0OiBzdHJpbmcgPSAnU0VUVElOR1NfVElUTEUnO1xuICAgIHB1YmxpYyB0aXRsZUxvZ286IGJvb2xlYW4gPSBudWxsO1xuICAgIHB1YmxpYyBpc05hdkljb246IGJvb2xlYW4gPSB0cnVlO1xufVxuIiwiaW1wb3J0IHsgU2V0dGluZ3NUYWIgfSBmcm9tICcuL1NldHRpbmdzVGFiJztcblxuZXhwb3J0IGNsYXNzIFNldHRpbmdzUGFnZVNlbGVjdGVkVGFiIHtcbiAgICBwdWJsaWMgdGFiOiBTZXR0aW5nc1RhYjtcbiAgICBwdWJsaWMgdGFiSW5kZXg6IG51bWJlciA9IDA7XG4gICAgcHVibGljIHRhYklkOiBzdHJpbmc7XG59IiwiaW1wb3J0IHsgU2V0dGluZ3NUYWIgfSBmcm9tICcuL1NldHRpbmdzVGFiJztcbmltcG9ydCB7IFNldHRpbmdzQ29uZmlnIH0gZnJvbSAnLi9TZXR0aW5nc0NvbmZpZyc7XG5pbXBvcnQgeyBJU2V0dGluZ3NTZXJ2aWNlIH0gZnJvbSAnLi9JU2V0dGluZ3NTZXJ2aWNlJztcbmltcG9ydCB7IElTZXR0aW5nc1Byb3ZpZGVyIH0gZnJvbSAnLi9JU2V0dGluZ3NTZXJ2aWNlJztcblxuY2xhc3MgU2V0dGluZ3NTZXJ2aWNlIGltcGxlbWVudHMgSVNldHRpbmdzU2VydmljZSB7XG4gICAgcHJpdmF0ZSBfY29uZmlnOiBTZXR0aW5nc0NvbmZpZztcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb25maWc6IFNldHRpbmdzQ29uZmlnKSB7XG4gICAgICAgIFwibmdJbmplY3RcIjtcbiAgICAgICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0RnVsbFN0YXRlTmFtZShzdGF0ZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuICdzZXR0aW5ncy4nICsgc3RhdGU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldERlZmF1bHRUYWIobmFtZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmICghXy5maW5kKHRoaXMuX2NvbmZpZy50YWJzLCAodGFiOiBTZXR0aW5nc1RhYikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRhYi5zdGF0ZSA9PT0gJ3NldHRpbmdzLicgKyBuYW1lO1xuICAgICAgICB9KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUYWIgd2l0aCBzdGF0ZSBuYW1lIFwiJyArIG5hbWUgKyAnXCIgaXMgbm90IHJlZ2lzdGVyZWQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NvbmZpZy5kZWZhdWx0VGFiID0gdGhpcy5nZXRGdWxsU3RhdGVOYW1lKG5hbWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXREZWZhdWx0VGFiKCk6IFNldHRpbmdzVGFiIHtcbiAgICAgICAgbGV0IGRlZmF1bHRUYWI6IFNldHRpbmdzVGFiO1xuXG4gICAgICAgIGRlZmF1bHRUYWIgPSBfLmZpbmQodGhpcy5fY29uZmlnLnRhYnMsICh0YWI6IFNldHRpbmdzVGFiKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGFiLnN0YXRlID09PSB0aGlzLl9jb25maWcuZGVmYXVsdFRhYjtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfLmNsb25lRGVlcChkZWZhdWx0VGFiKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd1RpdGxlVGV4dCAobmV3VGl0bGVUZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICBpZiAobmV3VGl0bGVUZXh0KSB7XG4gICAgICAgICAgICB0aGlzLl9jb25maWcudGl0bGVUZXh0ID0gbmV3VGl0bGVUZXh0O1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnLnRpdGxlTG9nbyA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnRpdGxlVGV4dDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd1RpdGxlTG9nbyhuZXdUaXRsZUxvZ28pIHtcbiAgICAgICAgaWYgKG5ld1RpdGxlTG9nbykge1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnLnRpdGxlTG9nbyA9IG5ld1RpdGxlTG9nbztcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy50aXRsZVRleHQgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy50aXRsZUxvZ287XG4gICAgfVxuXG4gICAgcHVibGljIHNob3dOYXZJY29uKHZhbHVlOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLl9jb25maWcuaXNOYXZJY29uID0gISF2YWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuaXNOYXZJY29uO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUYWJzKCk6IFNldHRpbmdzVGFiW10ge1xuICAgICAgICByZXR1cm4gXy5jbG9uZURlZXAodGhpcy5fY29uZmlnLnRhYnMpO1xuICAgIH1cblxufVxuXG5jbGFzcyBTZXR0aW5nc1Byb3ZpZGVyIGltcGxlbWVudHMgSVNldHRpbmdzUHJvdmlkZXIge1xuICAgIHByaXZhdGUgX3NlcnZpY2U6IFNldHRpbmdzU2VydmljZTtcbiAgICBwcml2YXRlIF9jb25maWc6IFNldHRpbmdzQ29uZmlnID0gbmV3IFNldHRpbmdzQ29uZmlnKCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRzdGF0ZVByb3ZpZGVyOiBuZy51aS5JU3RhdGVQcm92aWRlcikge31cblxuICAgIHB1YmxpYyBnZXRGdWxsU3RhdGVOYW1lKHN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gJ3NldHRpbmdzLicgKyBzdGF0ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0RGVmYXVsdFRhYigpOiBTZXR0aW5nc1RhYiB7XG4gICAgICAgIGxldCBkZWZhdWx0VGFiOiBTZXR0aW5nc1RhYjtcblxuICAgICAgICBkZWZhdWx0VGFiID0gXy5maW5kKHRoaXMuX2NvbmZpZy50YWJzLCAodGFiOiBTZXR0aW5nc1RhYikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRhYi5zdGF0ZSA9PT0gZGVmYXVsdFRhYi5zdGF0ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIF8uY2xvbmVEZWVwKGRlZmF1bHRUYWIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhZGRUYWIodGFiT2JqOiBTZXR0aW5nc1RhYik6IHZvaWQge1xuICAgICAgICBsZXQgZXhpc3RpbmdUYWI6IFNldHRpbmdzVGFiO1xuXG4gICAgICAgIHRoaXMudmFsaWRhdGVUYWIodGFiT2JqKTtcbiAgICAgICAgZXhpc3RpbmdUYWIgPSBfLmZpbmQodGhpcy5fY29uZmlnLnRhYnMsICh0YWI6IFNldHRpbmdzVGFiKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGFiLnN0YXRlID09PSAnc2V0dGluZ3MuJyArIHRhYk9iai5zdGF0ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChleGlzdGluZ1RhYikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUYWIgd2l0aCBzdGF0ZSBuYW1lIFwiJyArIHRhYk9iai5zdGF0ZSArICdcIiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NvbmZpZy50YWJzLnB1c2goe1xuICAgICAgICAgICAgc3RhdGU6IHRoaXMuZ2V0RnVsbFN0YXRlTmFtZSh0YWJPYmouc3RhdGUpLFxuICAgICAgICAgICAgdGl0bGU6IHRhYk9iai50aXRsZSxcbiAgICAgICAgICAgIGluZGV4OiB0YWJPYmouaW5kZXggfHwgMTAwMDAwLFxuICAgICAgICAgICAgYWNjZXNzOiB0YWJPYmouYWNjZXNzLFxuICAgICAgICAgICAgdmlzaWJsZTogdGFiT2JqLnZpc2libGUgIT09IGZhbHNlLFxuICAgICAgICAgICAgc3RhdGVDb25maWc6IF8uY2xvbmVEZWVwKHRhYk9iai5zdGF0ZUNvbmZpZylcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuJHN0YXRlUHJvdmlkZXIuc3RhdGUodGhpcy5nZXRGdWxsU3RhdGVOYW1lKHRhYk9iai5zdGF0ZSksIHRhYk9iai5zdGF0ZUNvbmZpZyk7XG5cbiAgICAgICAgLy8gaWYgd2UganVzdCBhZGRlZCBmaXJzdCBzdGF0ZSBhbmQgbm8gZGVmYXVsdCBzdGF0ZSBpcyBzcGVjaWZpZWRcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLl9jb25maWcuZGVmYXVsdFRhYiA9PT0gJ3VuZGVmaW5lZCcgJiYgdGhpcy5fY29uZmlnLnRhYnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLnNldERlZmF1bHRUYWIodGFiT2JqLnN0YXRlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzZXREZWZhdWx0VGFiKG5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICAvLyBUT0RPIFthcGlkaGlybnlpXSBleHRyYWN0IGV4cHJlc3Npb24gaW5zaWRlICdpZicgaW50byB2YXJpYWJsZS4gSXQgaXNuJ3QgcmVhZGFibGUgbm93LlxuICAgICAgICBpZiAoIV8uZmluZCh0aGlzLl9jb25maWcudGFicywgKHRhYjogU2V0dGluZ3NUYWIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0YWIuc3RhdGUgPT09ICdzZXR0aW5ncy4nICsgbmFtZTtcbiAgICAgICAgfSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGFiIHdpdGggc3RhdGUgbmFtZSBcIicgKyBuYW1lICsgJ1wiIGlzIG5vdCByZWdpc3RlcmVkJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9jb25maWcuZGVmYXVsdFRhYiA9IHRoaXMuZ2V0RnVsbFN0YXRlTmFtZShuYW1lKTtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLiRzdGF0ZVByb3ZpZGVyKTtcbiAgICAgICAgLy90aGlzLiRzdGF0ZVByb3ZpZGVyLmdvKHRoaXMuX2NvbmZpZy5kZWZhdWx0VGFiKTtcbiAgICAgICAgICAgIC8vcGlwQXV0aFN0YXRlUHJvdmlkZXIucmVkaXJlY3QoJ3NldHRpbmdzJywgZ2V0RnVsbFN0YXRlTmFtZShuYW1lKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVmFsaWRhdGVzIHBhc3NlZCB0YWIgY29uZmlnIG9iamVjdFxuICAgICAqIElmIHBhc3NlZCB0YWIgaXMgbm90IHZhbGlkIGl0IHdpbGwgdGhyb3cgYW4gZXJyb3JcbiAgICAgKi9cbiAgICBwcml2YXRlIHZhbGlkYXRlVGFiKHRhYk9iajogU2V0dGluZ3NUYWIpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0YWJPYmogfHwgIV8uaXNPYmplY3QodGFiT2JqKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG9iamVjdCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRhYk9iai5zdGF0ZSA9PT0gbnVsbCB8fCB0YWJPYmouc3RhdGUgPT09ICcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RhYiBzaG91bGQgaGF2ZSB2YWxpZCBBbmd1bGFyIFVJIHJvdXRlciBzdGF0ZSBuYW1lJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGFiT2JqLmFjY2VzcyAmJiAhXy5pc0Z1bmN0aW9uKHRhYk9iai5hY2Nlc3MpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wiYWNjZXNzXCIgc2hvdWxkIGJlIGEgZnVuY3Rpb24nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghdGFiT2JqLnN0YXRlQ29uZmlnIHx8ICFfLmlzT2JqZWN0KHRhYk9iai5zdGF0ZUNvbmZpZykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdGF0ZSBjb25maWd1cmF0aW9uIG9iamVjdCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHNob3dUaXRsZVRleHQgKG5ld1RpdGxlVGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKG5ld1RpdGxlVGV4dCkge1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnLnRpdGxlVGV4dCA9IG5ld1RpdGxlVGV4dDtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy50aXRsZUxvZ28gPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy50aXRsZVRleHQ7XG4gICAgfVxuXG4gICAgcHVibGljIHNob3dUaXRsZUxvZ28obmV3VGl0bGVMb2dvKSB7XG4gICAgICAgIGlmIChuZXdUaXRsZUxvZ28pIHtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy50aXRsZUxvZ28gPSBuZXdUaXRsZUxvZ287XG4gICAgICAgICAgICB0aGlzLl9jb25maWcudGl0bGVUZXh0ID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcudGl0bGVMb2dvO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93TmF2SWNvbih2YWx1ZTogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmlzTmF2SWNvbiA9ICEhdmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmlzTmF2SWNvbjtcbiAgICB9XG5cbiAgICBwdWJsaWMgJGdldCgpOiBJU2V0dGluZ3NTZXJ2aWNlIHtcbiAgICAgICAgXCJuZ0luamVjdFwiO1xuXG4gICAgICAgIGlmIChfLmlzTnVsbCh0aGlzLl9zZXJ2aWNlKSB8fCBfLmlzVW5kZWZpbmVkKHRoaXMuX3NlcnZpY2UpKSB7XG4gICAgICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IFNldHRpbmdzU2VydmljZSh0aGlzLl9jb25maWcpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcbiAgICB9XG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdwaXBTZXR0aW5ncy5TZXJ2aWNlJylcbiAgICAucHJvdmlkZXIoJ3BpcFNldHRpbmdzJywgU2V0dGluZ3NQcm92aWRlcik7XG5cbiIsImV4cG9ydCBjbGFzcyBTZXR0aW5nc1N0YXRlQ29uZmlnIHtcbiAgICBwdWJsaWMgdXJsOiBzdHJpbmc7XG4gICAgcHVibGljIGF1dGg6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwdWJsaWMgdGVtcGxhdGVVcmw/OiBzdHJpbmc7XG4gICAgcHVibGljIHRlbXBsYXRlPzogc3RyaW5nO1xufSIsImltcG9ydCB7IFNldHRpbmdzU3RhdGVDb25maWcgfSBmcm9tICcuL1NldHRpbmdzU3RhdGVDb25maWcnO1xuXG5leHBvcnQgY2xhc3MgU2V0dGluZ3NUYWIge1xuICAgIHB1YmxpYyBzdGF0ZTogc3RyaW5nO1xuICAgIHB1YmxpYyB0aXRsZTogc3RyaW5nO1xuICAgIHB1YmxpYyBpbmRleDogbnVtYmVyO1xuICAgIHB1YmxpYyBhY2Nlc3M6IEZ1bmN0aW9uO1xuICAgIHB1YmxpYyB2aXNpYmxlOiBib29sZWFuO1xuICAgIHB1YmxpYyBzdGF0ZUNvbmZpZzogU2V0dGluZ3NTdGF0ZUNvbmZpZztcbn1cbiIsImFuZ3VsYXIubW9kdWxlKCdwaXBTZXR0aW5ncy5TZXJ2aWNlJywgW10pO1xuXG5pbXBvcnQgJy4vU2V0dGluZ3NDb25maWcnO1xuaW1wb3J0ICcuL1NldHRpbmdzUGFnZVNlbGVjdGVkVGFiJztcbmltcG9ydCAnLi9TZXR0aW5nc1N0YXRlQ29uZmlnJztcbmltcG9ydCAnLi9TZXR0aW5nc1RhYic7XG5pbXBvcnQgJy4vU2V0dGluZ3NTZXJ2aWNlJztcblxuZXhwb3J0ICogZnJvbSAnLi9TZXR0aW5nc0NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL1NldHRpbmdzUGFnZVNlbGVjdGVkVGFiJztcbmV4cG9ydCAqIGZyb20gJy4vU2V0dGluZ3NTdGF0ZUNvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL1NldHRpbmdzVGFiJztcbmV4cG9ydCAqIGZyb20gJy4vU2V0dGluZ3NTZXJ2aWNlJztcbiIsIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBTZXR0aW5ncy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcFNldHRpbmdzLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgncGFnZS9TZXR0aW5nc1BhZ2UuaHRtbCcsXG4gICAgJzxtZC10b29sYmFyIGNsYXNzPVwicGlwLWFwcGJhci1leHRcIj48L21kLXRvb2xiYXI+XFxuJyArXG4gICAgJzxwaXAtZG9jdW1lbnQgd2lkdGg9XCI4MDBcIiBtaW4taGVpZ2h0PVwiNDAwXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICBjbGFzcz1cInBpcC1zZXR0aW5nc1wiPlxcbicgK1xuICAgICdcXG4nICtcbiAgICAnICAgIDxkaXYgY2xhc3M9XCJwaXAtbWVudS1jb250YWluZXJcIlxcbicgK1xuICAgICcgICAgICAgICBuZy1oaWRlPVwidm0ubWFuYWdlciA9PT0gZmFsc2UgfHwgIXZtLnRhYnMgfHwgdm0udGFicy5sZW5ndGggPCAxXCI+XFxuJyArXG4gICAgJyAgICAgICAgPG1kLWxpc3QgY2xhc3M9XCJwaXAtbWVudSBwaXAtc2ltcGxlLWxpc3RcIlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgIHBpcC1zZWxlY3RlZD1cInZtLnNlbGVjdGVkLnRhYkluZGV4XCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICBwaXAtc2VsZWN0ZWQtd2F0Y2g9XCJ2bS5zZWxlY3RlZC5uYXZJZFwiXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgcGlwLXNlbGVjdD1cInZtLm9uTmF2aWdhdGlvblNlbGVjdCgkZXZlbnQuaWQpXCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxtZC1saXN0LWl0ZW0gY2xhc3M9XCJwaXAtc2ltcGxlLWxpc3QtaXRlbSBwaXAtc2VsZWN0YWJsZSBmbGV4XCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1yZXBlYXQ9XCJ0YWIgaW4gdm0udGFicyB0cmFjayBieSB0YWIuc3RhdGVcIiBuZy1pZj1cInZtLiRwYXJ0eS5pZCA9PSB2bS4kdXNlci5pZCB8fFxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgICAgICAgIHRhYi5zdGF0ZSA9PSBcXCdzZXR0aW5ncy5iYXNpY19pbmZvXFwnfHwgdGFiLnN0YXRlID09XFwnc2V0dGluZ3MuY29udGFjdF9pbmZvXFwnXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgICAgICAgfHwgdGFiLnN0YXRlID09XFwnc2V0dGluZ3MuYmxhY2tsaXN0XFwnXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgICAgICAgICBtZC1pbmstcmlwcGxlXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgICAgICAgcGlwLWlkPVwie3s6OiB0YWIuc3RhdGUgfX1cIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIDxwPnt7Ojp0YWIudGl0bGUgfCB0cmFuc2xhdGV9fTwvcD5cXG4nICtcbiAgICAnICAgICAgICAgICAgPC9tZC1saXN0LWl0ZW0+XFxuJyArXG4gICAgJyAgICAgICAgPC9tZC1saXN0PlxcbicgK1xuICAgICdcXG4nICtcbiAgICAnICAgICAgICA8ZGl2IGNsYXNzPVwicGlwLWNvbnRlbnQtY29udGFpbmVyXCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxwaXAtZHJvcGRvd24gcGlwLWFjdGlvbnM9XCJ2bS50YWJzXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgICAgICAgICBwaXAtZHJvcGRvd24tc2VsZWN0PVwidm0ub25Ecm9wZG93blNlbGVjdFwiXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgICAgICAgcGlwLWFjdGl2ZS1pbmRleD1cInZtLnNlbGVjdGVkLnRhYkluZGV4XCI+PC9waXAtZHJvcGRvd24+XFxuJyArXG4gICAgJ1xcbicgK1xuICAgICcgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGlwLWJvZHkgdHAyNC1mbGV4IGxheW91dC1jb2x1bW5cIiB1aS12aWV3PjwvZGl2PlxcbicgK1xuICAgICcgICAgICAgIDwvZGl2PlxcbicgK1xuICAgICcgICAgPC9kaXY+XFxuJyArXG4gICAgJyAgICA8ZGl2IGNsYXNzPVwibGF5b3V0LWNvbHVtbiBsYXlvdXQtYWxpZ24tY2VudGVyLWNlbnRlciBmbGV4XCJcXG4nICtcbiAgICAnICAgICAgICAgbmctc2hvdz1cInZtLm1hbmFnZXIgPT09IGZhbHNlIHx8ICF2bS50YWJzIHx8IHZtLnRhYnMubGVuZ3RoIDwgMVwiPlxcbicgK1xuICAgICcgICAgICAgIHt7OjpcXCdFUlJPUl80MDBcXCcgfCB0cmFuc2xhdGV9fVxcbicgK1xuICAgICcgICAgPC9kaXY+XFxuJyArXG4gICAgJzwvcGlwLWRvY3VtZW50PicpO1xufV0pO1xufSkoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwLXdlYnVpLXNldHRpbmdzLWh0bWwuanMubWFwXG4iXX0="}