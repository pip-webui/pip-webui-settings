{"version":3,"sources":["settings.js","pip-webui-settings-html.js","settings_page/settings_page.js","settings_service/settings_service.js","user_settings/user_settings.js","user_settings/user_settings_basic_info.js","user_settings/user_settings_change_password.js","user_settings/user_settings_data.js","user_settings/user_settings_sessions.js","user_settings/user_settings_strings.js","user_settings/user_settings_verify_email.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"pip-webui-settings.js","sourcesContent":["/**\r\n * @file Registration of settings components\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipSettings', [\r\n        'pipSettings.Service',\r\n        'pipSettings.Page',\r\n        'pipUserSettings'\r\n    ]);\r\n    \r\n})();","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/settings_page.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar>\\n' +\n    '<pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-menu-container\" ng-hide=\"manager === false || !pages || pages.length < 1\">\\n' +\n    '        <md-list class=\"pip-menu pip-simple-list hide-xs\" pip-selected=\"selected.pageIndex\"\\n' +\n    '                 pip-selected-watch=\"selected.navId\" pip-select=\"onNavigationSelect($event.id)\">\\n' +\n    '            <md-list-item class=\"pip-simple-list-item pip-selectable flex\" md-ink-ripple pip-id=\"{{ page.state }}\"\\n' +\n    '                          ng-repeat=\"page in pages track by page.state\" ng-if=\"$party.id == $user.id ||\\n' +\n    '                          page.state == \\'settings.basic_info\\'|| page.state ==\\'settings.contact_info\\'\\n' +\n    '                          || page.state ==\\'settings.blacklist\\'\">\\n' +\n    '                <p> {{page.title | translate}}</p>\\n' +\n    '            </md-list-item>\\n' +\n    '        </md-list>\\n' +\n    '\\n' +\n    '        <div class=\"pip-content-container\" ng-if=\"selected.page\" style=\"min-height: 100%;\">\\n' +\n    '            <pip-dropdown pip-actions=\"pages\" class=\"hide-gt-xs\" pip-dropdown-select=\"onDropdownSelect\"\\n' +\n    '                          pip-active-index=\"selected.pageIndex\"></pip-dropdown>\\n' +\n    '\\n' +\n    '            <div class=\"pip-body tp24-flex\" ui-view layout=\"column\"  style=\"max-width: none !important; min-height: 100%\"></div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div ng-show=\"manager === false || !pages || pages.length < 1\" layout=\"column\" layout-align=\"center center\" flex>\\n' +\n    '        {{::\\'ERROR_400\\' | translate}}\\n' +\n    '    </div>\\n' +\n    '</pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" style=\"width:100%;\" novalidate>\\n' +\n    '    <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\">\\n' +\n    '    </md-progress-linear>\\n' +\n    '    <div layout=\"row\" class=\"bm12\">\\n' +\n    '        <div class=\"md-tile-left\" style=\"position: relative; margin-right: 16px; height: 80px; width: 80px\">\\n' +\n    '            <pip-avatar-edit pip-party-id=\"$party.id\"\\n' +\n    '                             pip-created=\"onPictureCreated($event)\" pip-changed=\"onPictureChanged($control, $event)\">\\n' +\n    '            </pip-avatar-edit>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"md-tile-content tp0\" layout-align=\"center\">\\n' +\n    '            <h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3>\\n' +\n    '\\n' +\n    '            <p class=\"text-primary text-overflow m0\"> {{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}}\\n' +\n    '                {{$user.signup | formatLongDate }}</p>\\n' +\n    '\\n' +\n    '            <!--<p class=\"text-primary text-one-line\"> {{::\\'SETTINGS_BASIC_INFO_USER_ID\\' | translate}} {{$party.id}} </p>-->\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\">\\n' +\n    '        <label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label>\\n' +\n    '        <input name=\"fullName\" ng-model=\"$party.name\" ng-disabled=\"transaction.busy()\"\\n' +\n    '               step=\"any\" type=\"text\" tabindex=\"0\"\\n' +\n    '               required\\n' +\n    '               ng-change=\"onChangeBasicInfo()\"/>\\n' +\n    '\\n' +\n    '        <div class=\"hint\" ng-if=\"errorsWithHint(form, form.fullName).hint\">{{::\\'ERROR_FULLNAME_INVALID\\' | translate}}\\n' +\n    '        </div>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block bm0\">\\n' +\n    '        <label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label>\\n' +\n    '        <input name=\"email\" pip-email-unique=\"{{$party.email}}\" ng-model=\"$party.email\"\\n' +\n    '               type=\"email\" required\\n' +\n    '               ng-change=\"onChangeBasicInfo()\"/>\\n' +\n    '\\n' +\n    '        <div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' |\\n' +\n    '            translate}}\\n' +\n    '        </div>\\n' +\n    '        <div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\" $party.type ==\\'team\\'\">\\n' +\n    '            <div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div>\\n' +\n    '            <div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div>\\n' +\n    '        </div>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-button ng-click=\"onVerifyEmail($event)\" ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\"\\n' +\n    '               class=\"md-raised bm16 tm8 rm8\">\\n' +\n    '        {{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}\\n' +\n    '    </md-button>\\n' +\n    '\\n' +\n    '    <md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        {{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}\\n' +\n    '    </md-button>\\n' +\n    '\\n' +\n    '    <md-input-container flex class=\"md-block\">\\n' +\n    '        <label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label>\\n' +\n    '        <textarea ng-model=\"$party.about\" columns=\"1\"\\n' +\n    '                  ng-change=\"onChangeBasicInfo()\"></textarea>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        <label>{{::\\'GENDER\\' | translate}}</label>\\n' +\n    '        <md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\"\\n' +\n    '                   placeholder=\"{{\\'GENDER\\' | translate}}\">\\n' +\n    '            <md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <div ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        <p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p>\\n' +\n    '        <pip-date ng-model=\"$party.birthday\" time-mode=\"past\" ng-change=\"onChangeBasicInfo()\"\\n' +\n    '                  pip-time-mode=\"past\"></pip-date>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\">\\n' +\n    '        <label>{{::\\'LANGUAGE\\' | translate}}</label>\\n' +\n    '        <md-select ng-model=\"$user.language\" ng-change=\"onChangeUser()\"\\n' +\n    '                   placeholder=\"{{\\'LANGUAGE\\' | translate}}\">\\n' +\n    '            <md-option ng-value=\"language.id\" ng-repeat=\"language in languages\">{{language.name}}</md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '\\n' +\n    '    <md-input-container class=\"md-block\" ng-if=\"$party.type !=\\'team\\'\">\\n' +\n    '        <label>{{::\\'THEME\\' | translate}}</label>\\n' +\n    '        <md-select ng-model=\"$user.theme\" ng-change=\"onChangeUser()\" class=\"w-stretch theme-text-primary\"\\n' +\n    '                   ng-disabled=\"transaction.busy()\">\\n' +\n    '            <md-option ng-value=\"theme\" ng-repeat=\"theme in themes\" ng-selected=\"$theme == theme ? true : false\">{{\\n' +\n    '                theme | translate }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <pip-location-edit class=\"map-edit bm24-flex\"\\n' +\n    '                       ng-hide=\"$party.type ==\\'team\\'\"\\n' +\n    '                       pip-changed=\"onChangeBasicInfo()\"\\n' +\n    '                       pip-location-name=\"$party.loc_name\"\\n' +\n    '                       pip-location-pos=\"loc_pos\">\\n' +\n    '    </pip-location-edit>\\n' +\n    '</form>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog\" layout=\"column\"  width=\"440\">\\n' +\n    '    <form name=\"form\" ng-submit=\"onApply()\" >\\n' +\n    '    <div class=\"pip-header\">\\n' +\n    '        <h3 class=\"m0\">{{\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '            <div ng-messages=\"form.$serverError\" class=\"text-error bm8\">\\n' +\n    '                <div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <md-input-container class=\"md-block\">\\n' +\n    '                <label>{{ \\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label>\\n' +\n    '                <input name=\"oldPassword\" ng-model=\"changePasData.old_password\"\\n' +\n    '                       type=\"password\" ng-required=\"change_password.$submitted\" pip-clear-errors/>\\n' +\n    '\\n' +\n    '                <div ng-messages=\"errorsWithHint(form, form.oldPassword)\">\\n' +\n    '                    <div ng-message=\"required\">{{ \\'ERROR_REQUIRED\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"ERROR_1107\">{{ \\'ERROR_WRONG_PASSWORD\\' | translate }}</div>\\n' +\n    '                </div>\\n' +\n    '\\n' +\n    '            </md-input-container>\\n' +\n    '\\n' +\n    '            <md-input-container class=\"md-block\">\\n' +\n    '                <label>{{ \\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label>\\n' +\n    '                <input name=\"newPassword\" ng-model=\"changePasData.new_password\"\\n' +\n    '                       ng-change=\"onCheckRepeatPassword()\"\\n' +\n    '                       ng-minlength=\"6\" type=\"password\" ng-required=\"change_password.$submitted\" pip-clear-errors/>\\n' +\n    '                <div class=\"hint\" ng-if=\"errorsWithHint(form, form.newPassword).hint\">{{ \\'HINT_PASSWORD\\' | translate }}</div>\\n' +\n    '                <div ng-messages=\"errorsWithHint(form, form.newPassword)\">\\n' +\n    '                    <div ng-message=\"required\">{{ \\'ERROR_REQUIRED\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"minlength\">{{ \\'HINT_PASSWORD\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"ERROR_1105\">{{ \\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}</div>\\n' +\n    '                </div>\\n' +\n    '            </md-input-container>\\n' +\n    '\\n' +\n    '            <md-input-container class=\"md-block\">\\n' +\n    '                <label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label>\\n' +\n    '                <input name=\"repeat\" ng-model=\"repeat\" ng-change=\"onCheckRepeatPassword()\"\\n' +\n    '                       ng-minlength=\"6\" type=\"password\" ng-required=\"change_password.$submitted\"/>\\n' +\n    '\\n' +\n    '                <div class=\"hint\" ng-if=\"errorsRepeatWithHint(form.repeat).hint\">{{ \\'HINT_REPEAT_PASSWORD\\' | translate }}</div>\\n' +\n    '                <div ng-messages=\"errorsRepeatWithHint(form.repeat)\">\\n' +\n    '                    <div ng-message=\"required\">{{ \\'ERROR_REQUIRED\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"minlength\">{{ \\'HINT_PASSWORD\\' | translate }}</div>\\n' +\n    '                    <div ng-message=\"repeat\">{{ \\'REPEAT_PASSWORD_INVALID\\' | translate }}</div>\\n' +\n    '                </div>\\n' +\n    '            </md-input-container>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div>\\n' +\n    '            <md-button ng-click=\"onCancel()\" aria-label=\"xxx\">{{ \\'CANCEL\\' | translate }} </md-button>\\n' +\n    '            <md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">{{ \\'APPLY\\' | translate : module}}  </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    </form>\\n' +\n    '</md-dialog>\\n' +\n    '\\n' +\n    '\\n' +\n    '\\n' +\n    '\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '\\n' +\n    '    <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\">\\n' +\n    '    </md-progress-linear>\\n' +\n    '    <div class=\"pip-details-title\">\\n' +\n    '        <p class=\"pip-title bm16\">{{\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}</p>\\n' +\n    '\\n' +\n    '        <p class=\"pip-subtitle\">{{\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}</p>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '\\n' +\n    '<md-list class=\"w-stretch\">\\n' +\n    '    <md-item ng-repeat=\"session in sessions\" >\\n' +\n    '        <div layout=\"row\" ng-init=\"session.id != sessionId ? showBlock = true : showBlock = false\"\\n' +\n    '                          ng-click=\"showBlock = !showBlock\" >\\n' +\n    '            <p class=\"m0 text-subhead2 text-overflow max-w50-stretch\" >{{session.client}}</p>\\n' +\n    '            <p class=\"m0 lp4 text-body1 color-secondary-text \" flex>{{\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}} </p>\\n' +\n    '            <p class=\"m0 text-body1 color-secondary-text \">\\n' +\n    '                {{country}}\\n' +\n    '                <md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon>\\n' +\n    '                <md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon>\\n' +\n    '            </p>\\n' +\n    '        </div>\\n' +\n    '        <div layout=\"row\" class=\"bm8 bp8\" ng-class=\"{\\' divider-bottom\\':!$last}\" >\\n' +\n    '            <div flex=\"50\">\\n' +\n    '                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text \" >{{ session.last_req | date : \\'medium\\' }}</p>\\n' +\n    '                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text \" ng-show=\"showBlock\">{{\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{session.platform}}</p>\\n' +\n    '                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text \" ng-show=\"showBlock\">{{\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{session.address}}</p>\\n' +\n    '                <md-button class=\"md-raised\" ng-show=\"showBlock && session.id != sessionId\" ng-click=\"onRemove(session)\">\\n' +\n    '                    {{\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}\\n' +\n    '                </md-button>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <pip-location-ip class=\"map-edit\" ng-if=\"showBlock\" flex=\"50\"\\n' +\n    '                             pip-ipaddress=\"session.address\"\\n' +\n    '                             pip-extra-info=\"country = extraInfo.country\">\\n' +\n    '            </pip-location-ip>\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '    </md-item>\\n' +\n    '</md-list>\\n' +\n    '<div layout=\"row\" layout-align=\"end center\">\\n' +\n    '    <md-button class=\"md-raised\" ng-show=\"sessions.length > 1\" ng-click=\"onRemoveAll()\">\\n' +\n    '        {{\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}\\n' +\n    '    </md-button>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog\" layout=\"column\"  width=\"440\">\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '                <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\" >\\n' +\n    '                </md-progress-linear>\\n' +\n    '\\n' +\n    '                <h2>{{\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2>\\n' +\n    '\\n' +\n    '                <p class=\"title-padding\">{{\\'VERIFY_EMAIL_TEXT_1\\' | translate}} </p>\\n' +\n    '\\n' +\n    '                <form name=\\'form\\' novalidate>\\n' +\n    '                    <div ng-messages=\"form.$serverError\" class=\"text-error bm8\">\\n' +\n    '                        <div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div>\\n' +\n    '                    </div>\\n' +\n    '\\n' +\n    '                    <md-input-container class=\"display  bp4 md-block\" >\\n' +\n    '                        <label>{{::\\'EMAIL\\' | translate}}</label>\\n' +\n    '                        <input name=\"email\" type=\"email\" ng-model=\"data.email\" required step=\"any\"\\n' +\n    '                               pip-clear-errors  tabindex=\"1\"\\n' +\n    '                               ng-disabled=\"transaction.busy()\"\\n' +\n    '                               pip-test=\"input-email\"/>\\n' +\n    '                        <div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div>\\n' +\n    '                        <div ng-messages=\"errorsWithHint(form, form.email)\"\\n' +\n    '                             xng-if=\"!form.email.$pristine\">\\n' +\n    '                            <div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div>\\n' +\n    '                            <div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div>\\n' +\n    '                        </div>\\n' +\n    '                    </md-input-container>\\n' +\n    '\\n' +\n    '                    <md-input-container class=\"md-block\">\\n' +\n    '                        <label>{{\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label>\\n' +\n    '                        <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\"\\n' +\n    '                               ng-model=\"data.code\" required pip-clear-errors/>\\n' +\n    '                        <div ng-messages=\"errorsWithHint(form, form.code)\">\\n' +\n    '                            <div ng-message=\"required\"> {{ \\'ERROR_CODE_INVALID\\' | translate }}</div>\\n' +\n    '                            <div ng-message=\"ERROR_1103\"> {{ \\'ERROR_CODE_WRONG\\' | translate }}</div>\\n' +\n    '                        </div>\\n' +\n    '                    </md-input-container>\\n' +\n    '\\n' +\n    '                    <p>\\n' +\n    '                        {{\\'VERIFY_EMAIL_TEXT_21\\' | translate}} \\n' +\n    '                        <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{\\'VERIFY_EMAIL_RESEND\\' | translate}}</a>\\n' +\n    '                        {{\\'VERIFY_EMAIL_TEXT_22\\' | translate}} \\n' +\n    '                    </p>\\n' +\n    '                </form>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-footer\">\\n' +\n    '            <md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">\\n' +\n    '                {{::\\'CANCEL\\' | translate}}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\"\\n' +\n    '                ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">\\n' +\n    '                {{::\\'VERIFY\\' | translate}}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">\\n' +\n    '                {{::\\'CANCEL\\' | translate}}\\n' +\n    '            </md-button>\\n' +\n    '\\n' +\n    '        </div>\\n' +\n    '</md-dialog>');\n}]);\n})();\n","/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSettings.Page', [\r\n        'pipState', 'pipSettings.Service', 'pipAppBar', 'pipSelected', 'pipTranslate',\r\n        'pipSettings.Templates'\r\n    ]);\r\n\r\n    thisModule.config(['pipAuthStateProvider', function (pipAuthStateProvider) {\r\n        pipAuthStateProvider.state('settings', {\r\n            url: '/settings?party_id',\r\n            auth: true,\r\n            controller: 'pipSettingsPageController',\r\n            templateUrl: 'settings_page/settings_page.html'\r\n        });\r\n    }]);\r\n\r\n    thisModule.controller('pipSettingsPageController', ['$scope', '$state', '$rootScope', 'pipAppBar', 'pipSettings', function ($scope, $state, $rootScope, pipAppBar, pipSettings) {\r\n\r\n        $scope.pages = _.filter(pipSettings.getPages(), function (page) {\r\n            if (page.visible === true && (page.access ? page.access($rootScope.$user, page) : true)) {\r\n                return page;\r\n            }\r\n        });\r\n\r\n        $scope.pages =_.sortBy($scope.pages, function(page){\r\n            return page.index;\r\n        });\r\n\r\n        $scope.selected = {};\r\n        if ($state.current.name != 'settings')\r\n            initSelect($state.current.name);\r\n        else {\r\n            if (pipSettings.getDefaultPage())\r\n                initSelect(pipSettings.getDefaultPage().state);\r\n            else {\r\n                setTimeout(function () {\r\n                    if (pipSettings.getDefaultPage())\r\n                        initSelect(pipSettings.getDefaultPage().state);\r\n                    else {\r\n                        if($scope.pages.length >0)\r\n                            initSelect($scope.pages[0].state);\r\n\r\n                    }\r\n                }, 0);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        appHeader();\r\n\r\n        $scope.onNavigationSelect = onNavigationSelect;\r\n        $scope.onDropdownSelect = onDropdownSelect;\r\n\r\n        return;\r\n\r\n        function appHeader() {\r\n            pipAppBar.showMenuNavIcon();\r\n            pipAppBar.showTitleText('SETTINGS_TITLE');\r\n            pipAppBar.showLocalActions(null, []);\r\n            pipAppBar.showShadowSm();\r\n            pipAppBar.hideSearch();\r\n        };\r\n\r\n        function onDropdownSelect(state) {\r\n            onNavigationSelect(state.state);\r\n        }\r\n\r\n        function onNavigationSelect(state) {\r\n            initSelect(state);\r\n\r\n            if ($scope.selected.page) {\r\n\r\n                $state.go(state);\r\n\r\n            }\r\n        };\r\n\r\n        function initSelect(state) {\r\n            $scope.selected.page = _.find($scope.pages, function (page) {\r\n                return page.state == state;\r\n            });\r\n            $scope.selected.pageIndex = _.indexOf($scope.pages, $scope.selected.page);\r\n            $scope.selected.pageId = state;\r\n        }\r\n    }]);\r\n\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSettings.Service', []);\r\n\r\n    thisModule.provider('pipSettings', ['pipAuthStateProvider', function (pipAuthStateProvider) {\r\n\r\n        var defaultPage,\r\n            pages = [];\r\n\r\n        return {\r\n            addPage: addPage,\r\n            getPages: getPages,\r\n            setDefaultPage: setDefaultPage,\r\n            getDefaultPage: getDefaultPage,\r\n\r\n            $get: function () {\r\n                return {\r\n                    getPages: getPages,\r\n                    addPage: addPage,\r\n                    getDefaultPage: getDefaultPage,\r\n                    setDefaultPage: setDefaultPage\r\n                }\r\n            }\r\n        };\r\n\r\n        function getFullStateName(state) {\r\n            return 'settings.' + state;\r\n        }\r\n\r\n        function getPages() {\r\n            return _.clone(pages, true);\r\n        }\r\n\r\n        function getDefaultPage() {\r\n            var defaultPage = _.find(pages, function(p) { return p.state == defaultPage; })\r\n            return _.clone(defaultPage, true);\r\n        }\r\n\r\n        function addPage(pageObj) {\r\n            validatePage(pageObj);\r\n\r\n            var existingPage = _.find(pages, function (p) { return p.state == getFullStateName(pageObj.state); });\r\n            if (existingPage) {\r\n                throw new Error('Page with state name \"' + pageObj.state + '\" is already registered');\r\n            }\r\n\r\n            pages.push({\r\n                state: getFullStateName(pageObj.state),\r\n                title: pageObj.title,\r\n                index: pageObj.index || 100000,\r\n                access: pageObj.access,\r\n                visible: pageObj.visible !== false,\r\n                stateConfig: _.clone(pageObj.stateConfig, true)\r\n            });\r\n\r\n            pipAuthStateProvider.state(getFullStateName(pageObj.state), pageObj.stateConfig);\r\n\r\n            // if we just added first state and no default state is specified\r\n            if (typeof defaultPage === 'undefined' && pages.length === 1) {\r\n                setDefaultPage(pageObj.state);\r\n            }\r\n        }\r\n\r\n        function setDefaultPage(name) {\r\n            if (!_.find(pages, function(page) { return page.state == getFullStateName(name); })) {\r\n                throw new Error('Page with state name \"' + name + '\" is not registered');\r\n            }\r\n\r\n            defaultPage = getFullStateName(name);\r\n\r\n            pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n        }\r\n\r\n        function validatePage(pageObj) {\r\n            if (!pageObj || !_.isObject(pageObj)) {\r\n                throw new Error('Invalid object');\r\n            }\r\n\r\n            if (pageObj.state == null || pageObj.state == '') {\r\n                throw new Error('Page should have valid Angular UI router state name');\r\n            }\r\n\r\n            if (pageObj.access && !_.isFunction(pageObj.access)) {\r\n                throw new Error('\"access\" should be a function');\r\n            }\r\n\r\n            if (!pageObj.stateConfig || !_.isObject(pageObj.stateConfig)) {\r\n                throw new Error('Invalid state configuration object');\r\n            }\r\n        }\r\n    }]);\r\n\r\n})();","/**\r\n * @file Settings page logic\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings', [\r\n        'ngMaterial', 'pipData', 'pipSettings.Service', 'pipSettings.Page',\r\n        'pipUserSettings.Data', 'pipUserSettings.Strings',  //'pipUserSettings.Blacklist',\r\n        'pipUserSettings.BasicInfo',\r\n        //'pipUserSettings.ContactInfo',\r\n        'pipUserSettings.Sessions', 'pipSettings.Templates'\r\n\r\n    ]);\r\n\r\n})();","/**\r\n * @file Settings basic info controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.BasicInfo', ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail']);\r\n\r\n    thisModule.config(['pipSettingsProvider', 'pipUserSettingsPageDataProvider', 'pipAuthStateProvider', function (pipSettingsProvider, pipUserSettingsPageDataProvider, pipAuthStateProvider) {\r\n        pipSettingsProvider.addPage({\r\n            state: 'basic_info',\r\n            index: 1,\r\n            title: 'SETTINGS_BASIC_INFO_TITLE',\r\n            stateConfig: {\r\n                url: '/basic_info',\r\n                controller: 'pipUserSettingsBasicInfoController',\r\n                templateUrl: 'user_settings/user_settings_basic_info.html',\r\n                auth: true\r\n            }\r\n        });\r\n\r\n        pipSettingsProvider.setDefaultPage('basic_info');\r\n    }]);\r\n\r\n    thisModule.controller('pipUserSettingsBasicInfoController',\r\n        ['$scope', '$rootScope', '$mdDialog', '$state', 'pipTranslate', 'pipTransaction', 'pipFormErrors', 'pipUserSettingsPageData', 'pipToasts', '$window', 'pipTheme', '$mdTheming', function ($scope, $rootScope, $mdDialog, $state, pipTranslate, pipTransaction, pipFormErrors,\r\n                  pipUserSettingsPageData, pipToasts, $window, pipTheme, $mdTheming) {\r\n\r\n            $scope.originalParty = angular.toJson($rootScope.$party);\r\n\r\n            $scope.nameCopy = $rootScope.$party.name;\r\n            setTimeout(function () {\r\n                $scope.loc_pos = $rootScope.$party.loc_pos;\r\n                $scope.$apply();\r\n            });\r\n\r\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\r\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\r\n\r\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\r\n\r\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\r\n\r\n            $state.get('settings.basic_info').onExit = saveChanges;\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onChangePassword = onChangePassword;\r\n            $scope.onVerifyEmail = onVerifyEmail;\r\n            $scope.onPictureCreated = onPictureCreated;\r\n            $scope.onPictureChanged = onPictureChanged;\r\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\r\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\r\n\r\n            return;\r\n\r\n            //-----------------------------\r\n\r\n            function onPictureChanged($control) {\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n\r\n                    },\r\n                    function (error) {\r\n                        console.error(error);\r\n                    }\r\n                );\r\n            };\r\n\r\n            function onPictureCreated($event) {\r\n                $scope.picture = $event.sender;\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        console.error(error);\r\n                    }\r\n                );\r\n            };\r\n\r\n\r\n            function saveChanges() {\r\n                if ($scope.form)\r\n                    $scope.form.$setSubmitted();\r\n\r\n                if ($rootScope.$party) {\r\n\r\n                    if ($rootScope.$party.type == 'person')\r\n                        if ($scope.form.$invalid)\r\n                            return;\r\n\r\n                    // Check to avoid unnecessary savings\r\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\r\n                    var party = angular.toJson($rootScope.$party);\r\n\r\n                    if (party != $scope.originalParty) {\r\n                        pipUserSettingsPageData.updateParty($scope.transaction, $rootScope.$party,\r\n                            function (data) {\r\n                                $scope.originalParty = party;\r\n                                $scope.nameCopy = data.name;\r\n                            }, function (error) {\r\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                                //pipToasts.showNotification(pipTranslate.translate($scope.message), null, null, null);\r\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n\r\n            };\r\n\r\n            function updateUser() {\r\n\r\n                //if ($rootScope.$user.theme)\r\n                //pipTheme.setCurrentTheme($rootScope.$user.theme);\r\n\r\n                if ($rootScope.$user.id == $rootScope.$party.id) {\r\n                    pipUserSettingsPageData.updateUser($scope.transaction, $rootScope.$user,\r\n                        function (data) {\r\n                            pipTranslate.use(data.language);\r\n                            $rootScope.$user.language = data.language;\r\n                            $rootScope.$user.theme = data.theme;\r\n                            if ($rootScope.$user.theme)\r\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\r\n\r\n\r\n                            // $window.location.reload();\r\n\r\n                        }, function (error) {\r\n                            var message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                            //$scope.user.language =  angular.fromJson($scope.originalParty).language;\r\n                            //$scope.user.theme = angular.fromJson($scope.originalParty).theme;\r\n                        }\r\n                    );\r\n                }\r\n\r\n\r\n            };\r\n\r\n            function onChangePassword(event) {\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_change_password.html',\r\n                    controller: 'pipUserSettingsChangePasswordController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        if (answer) {\r\n                            var message = String() + 'RESET_PWD_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    });\r\n            };\r\n\r\n            function onVerifyEmail(event) {\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\r\n                    controller: 'pipUserSettingsVerifyEmailController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        $scope.user.email_ver = answer;\r\n                        if (answer) {\r\n                            var message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n\r\n                        }\r\n                    }\r\n                );\r\n            };\r\n        }]\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings change password controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\r\n\t\r\n    thisModule.controller('pipUserSettingsChangePasswordController',\r\n        ['$scope', '$rootScope', '$mdDialog', 'pipRest', 'pipTransaction', 'pipFormErrors', 'email', function($scope, $rootScope, $mdDialog, pipRest, pipTransaction, pipFormErrors, email) {\r\n        \r\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\r\n            $scope.errorsRepeatWithHint = function (form,formPart) {\r\n                if ($scope.showRepeatHint)  \r\n                    return pipFormErrors.errorsWithHint(form, formPart);\r\n                else return { };\r\n            };\r\n            $scope.showRepeatHint = true;\r\n            $scope.changePasData = {};\r\n            \r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onCancel = onCancel;\r\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\r\n            $scope.onApply = onApply;\r\n    \r\n            return;\r\n            \r\n            //-----------------------------\r\n            \r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            };\r\n    \r\n            function onCheckRepeatPassword() {\r\n                if ($scope.changePasData)\r\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat == \"\" || !$scope.repeat) {\r\n                        $scope.form.repeat.$setValidity('repeat', true);\r\n                        if ($scope.repeat === $scope.changePasData.new_password)\r\n                            $scope.showRepeatHint = false;\r\n                        else\r\n                            $scope.showRepeatHint = true;\r\n                    }\r\n                    else {\r\n                        $scope.showRepeatHint = true;\r\n                        $scope.form.repeat.$setValidity('repeat', false);\r\n                    }\r\n            };\r\n    \r\n            function onApply() {\r\n                $scope.onCheckRepeatPassword();\r\n    \r\n                if ($scope.form.$invalid) return;\r\n    \r\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) return;\r\n    \r\n                $scope.changePasData.email = email;\r\n    \r\n                pipRest.changePassword().call(\r\n                    $scope.changePasData,\r\n                    function (data) {\r\n                        $scope.transaction.end();\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n    \r\n                        //pipFormErrors.resetFormErrors($scope.form, true);\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            { \r\n                                1107 : 'oldPassword', \r\n                                1105 : 'newPassword' \r\n                            }\r\n                        );\r\n                    }\r\n                );\r\n            };\r\n        }]\r\n    );\r\n\t\r\n})();\r\n","/**\r\n * @file Settings data model\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Data', ['pipDataModel']);\r\n\r\n    thisModule.provider('pipUserSettingsPageData', function () {\r\n\r\n        this.readContactsResolver = /* @ngInject */\r\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\r\n                return pipRest.getOwnContacts().get({\r\n                    party_id: pipRest.partyId($stateParams),\r\n                    session_id: pipRest.sessionId()\r\n                }).$promise;\r\n            }];\r\n\r\n        this.readBlocksResolver = /* @ngInject */\r\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\r\n                return pipRest.connectionBlocks().query({\r\n                    party_id: pipRest.partyId($stateParams)\r\n                }).$promise;\r\n            }];\r\n\r\n        this.readSessionsResolver = /* @ngInject */\r\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\r\n                return pipRest.userSessions().query({\r\n                    party_id: pipRest.partyId($stateParams)\r\n                }).$promise;\r\n            }];\r\n\r\n        this.readActivitiesResolver = /* @ngInject */\r\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\r\n                return pipRest.partyActivities().page({\r\n                    party_id: pipRest.partyId($stateParams),\r\n                    paging: 1,\r\n                    skip: 0,\r\n                    take: 25\r\n                }).$promise;\r\n            }];\r\n\r\n        this.readSettingsResolver = /* @ngInject */\r\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\r\n                return pipRest.partySettings().get({\r\n                    party_id: pipRest.partyId($stateParams)\r\n                }).$promise;\r\n            }];\r\n\r\n        this.readSessionIdResolver = /* @ngInject */\r\n            ['$stateParams', 'pipRest', function ($stateParams, pipRest) {\r\n                return pipRest.sessionId();\r\n            }];\r\n\r\n        // CRUD operations and other business methods\r\n\r\n        this.$get = ['pipRest', '$stateParams', function (pipRest, $stateParams) {\r\n            return {\r\n                partyId: pipRest.partyId,\r\n\r\n                updateParty: function (transaction, party, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('UPDATING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.parties().update(\r\n                        party,\r\n                        function (updatedParty) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(updatedParty);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                saveContacts: function (transaction, contacts, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('SAVING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.contacts().save(\r\n                        contacts,\r\n                        function (savedContacts) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(savedContacts);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                updateContact: function (transaction, contact, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('UPDATING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.contacts().update(\r\n                        contact,\r\n                        function (updatedContact) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n                            if (successCallback) successCallback(updatedContact);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                updateUser: function (transaction, user, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('UPDATING');\r\n                    if (!tid) return;\r\n                    pipRest.users().update(\r\n                        user,\r\n                        function (updatedUser) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(updatedUser);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                removeBlock: function (transaction, block, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('REMOVING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.connectionBlocks().remove(\r\n                        block,\r\n                        function (removedBlock) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(removedBlock);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                removeSession: function (transaction, session, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('REMOVING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.userSessions().remove(\r\n                        {\r\n                            id: session.id,\r\n                            party_id: pipRest.partyId($stateParams)\r\n                        },\r\n                        function (removedSession) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(removedSession);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                requestEmailVerification: function (transaction) {\r\n                    var tid = transaction.begin('RequestEmailVerification');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.requestEmailVerification().get(\r\n                        {\r\n                            party_id: pipRest.partyId($stateParams)\r\n                        }, function () {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n                        }, function (error) {\r\n                            transaction.end(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                verifyEmail: function (transaction, verifyData, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('Verifying');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.verifyEmail().call(\r\n                        verifyData,\r\n                        function (verifyData) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(verifyData);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                saveSettings: function (transaction, settings, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('SAVING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.partySettings().save(\r\n                        settings,\r\n                        function (savedSettings) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(savedSettings);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                getPreviousActivities: function (transaction, start, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('SAVING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.partyActivities().page(\r\n                        {\r\n                            party_id: pipRest.partyId($stateParams),\r\n                            paging: 1,\r\n                            skip: start,\r\n                            take: 25\r\n                        },\r\n                        function (pagedActivities) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(pagedActivities);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                getRefPreviousEventsActivities: function (transaction, start, ref_type, item, successCallback, errorCallback) {\r\n                    var tid = transaction.begin('SAVING');\r\n                    if (!tid) return;\r\n\r\n                    pipRest.partyActivities().page(\r\n                        {\r\n                            party_id: pipRest.partyId($stateParams),\r\n                            paging: 1,\r\n                            skip: start,\r\n                            ref_type: ref_type,\r\n                            ref_id: item.id,\r\n                            take: 25\r\n                        },\r\n                        function (pagedActivities) {\r\n                            if (transaction.aborted(tid)) return;\r\n                            else transaction.end();\r\n\r\n                            if (successCallback) successCallback(pagedActivities);\r\n                        },\r\n                        function (error) {\r\n                            transaction.end(error);\r\n                            if (errorCallback) errorCallback(error);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        }];\r\n    });\r\n\r\n})();","/**\r\n * @file Settings sessions controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Sessions', []);\r\n\r\n    thisModule.config(['pipSettingsProvider', 'pipUserSettingsPageDataProvider', 'pipAuthStateProvider', function (pipSettingsProvider, pipUserSettingsPageDataProvider,  pipAuthStateProvider) {\r\n        pipSettingsProvider.addPage({\r\n            state: 'sessions',\r\n            index: 3,\r\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\r\n            stateConfig: {\r\n                url: '/sessions',\r\n                controller: 'pipUserSettingsSessionsController',\r\n                templateUrl: 'user_settings/user_settings_sessions.html',\r\n                auth: true,\r\n                resolve: {\r\n                    sessions: pipUserSettingsPageDataProvider.readSessionsResolver,\r\n                    sessionId: pipUserSettingsPageDataProvider.readSessionIdResolver\r\n                }\r\n            }\r\n        });\r\n    }]);\r\n\r\n    thisModule.controller('pipUserSettingsSessionsController',\r\n        ['$scope', 'pipTransaction', 'pipUserSettingsPageData', 'sessions', 'sessionId', function ($scope, pipTransaction, pipUserSettingsPageData, sessions, sessionId) {\r\n\r\n            $scope.sessionId = sessionId;\r\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\r\n            $scope.sessions = sessions;\r\n\r\n            $scope.onRemoveAll = onRemoveAll;\r\n            $scope.onRemove = onRemove;\r\n\r\n            return;\r\n            //-----------------------------\r\n\r\n            function onRemoveAll() {\r\n                async.each($scope.sessions, function (session) {\r\n                    if (session.id != $scope.sessionId)\r\n                        $scope.onRemove(session);\r\n                });\r\n            }\r\n\r\n            function onRemove(session) {\r\n                if (session.id == $scope.sessionId) return;\r\n\r\n                pipUserSettingsPageData.removeSession($scope.transaction, session,\r\n                    function () {\r\n                        $scope.sessions = _.without($scope.sessions, session);\r\n                    }, \r\n                    function (error) {\r\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\r\n\r\n                        //$scope.onShowToast(message, 'error');\r\n                    }\r\n                );\r\n            }\r\n        }]\r\n    );\r\n\t\r\n})();\r\n","/**\r\n * @file Settings string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\r\n\r\n    thisModule.config(['pipTranslateProvider', function(pipTranslateProvider) {\r\n\r\n        // Set translation strings for the module\r\n        pipTranslateProvider.translations('en', {\r\n            'SETTINGS_TITLE': 'Settings',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\r\n\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender', \r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location', \r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL':'Primary email',\r\n            'SETTINGS_BASIC_INFO_FROM':'User since ',\r\n            'SETTINGS_BASIC_INFO_USER_ID':'User ID',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE':'Change password',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD':'New password',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD':'Repeat password',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD':'Current password',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE':\" If you notice any unfamiliar devices or locations, click 'Close Session' to end the session.\",\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION':'Close session',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS':'Close active sessions',\r\n            'SETTINGS_ACTIVE_SESSION_OS' : 'OS: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP' : 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE':'active',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and private messages.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\r\n            'SETTINGS_BLACKLIST_EMPTY':'You have no blocked parties',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\r\n            'SETTINGS_CONTACT_INFO_EMAIL':'Email',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL':'Add email',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE' : 'Add phone',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS' : 'Add address',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT' : 'Add account',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL' : 'Add URL',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS':'Address',\r\n            'SETTINGS_CONTACT_INFO_PHONE':'Phone',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME':'Account name',\r\n            'SETTINGS_CONTACT_INFO_URL':'URL',\r\n\r\n            'THEME':'Theme',\r\n                        \r\n            //Hints\r\n// определено в entry           'HINT_PASSWORD' : 'Minimum 6 characters',\r\n            'HINT_REPEAT_PASSWORD' : 'Repeat password',\r\n\r\n            //Errors\r\n            'ERROR_WRONG_PASSWORD' : 'Wrong password',\r\n            'ERROR_IDENTICAL_PASSWORDS' : 'Old and new passwords are identical',\r\n            'REPEAT_PASSWORD_INVALID' : 'Password does not match',\r\n            'ERROR_EMAIL_INVALID' : 'Please, enter a valid email'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'SETTINGS_TITLE': 'Настройки',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\r\n\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL':'Основной адрес эл. почты',\r\n            'SETTINGS_BASIC_INFO_FROM':'Начиная с',\r\n            'SETTINGS_BASIC_INFO_USER_ID':'Личный код',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE':'Изменить пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD':'Новый пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD':'Повтор',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD':'Текущий пароль',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE':'Если вы заметили какие-либо незнакомые устройства или месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION':'Закрыть сессию',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS':'Закрыть активные сессии',\r\n            'SETTINGS_ACTIVE_SESSION_OS' : 'ОС: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP' : 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут посылать вам приглашения и личные сообщения.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\r\n            'SETTINGS_BLACKLIST_EMPTY':'У вас нет заблокированных участников',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\r\n            'SETTINGS_CONTACT_INFO_EMAIL':'Адрес электронной почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL':'Добавить адрес эл. почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE' : 'Добавить телефон',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS' : 'Добавить адрес',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT' : 'Добавить аккаунт',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL' : 'Добавить веб-сайт',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\r\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\r\n\r\n            'THEME':'Тема',\r\n\r\n            //Hints\r\n// определено в entry               'HINT_PASSWORD' : 'Минимум 6 знаков',\r\n            'HINT_REPEAT_PASSWORD' : 'Повторите пароль',\r\n            \r\n            //Errors\r\n            'ERROR_WRONG_PASSWORD' : 'Неправильный пароль',\r\n            'ERROR_IDENTICAL_PASSWORDS' : 'Старый и новый пароли идентичны',\r\n            'REPEAT_PASSWORD_INVALID' : 'Пароль не совпадает',\r\n            'ERROR_EMAIL_INVALID' : 'Пожалуйста, введите правильный почт.адрес'\r\n        });\r\n    }]);\r\n\r\n})();","/**\r\n * @file Settings verify email controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\r\n\r\n    thisModule.controller('pipUserSettingsVerifyEmailController',\r\n        ['$scope', '$rootScope', '$mdDialog', 'pipTransaction', 'pipFormErrors', 'pipUserSettingsPageData', 'email', function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipUserSettingsPageData, email) {\r\n\r\n            $scope.emailVerified = false;\r\n            $scope.data = {\r\n                email: email,\r\n                code: ''\r\n            };\r\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\r\n\r\n            $scope.onAbort = onAbort;\r\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onVerify = onVerify;\r\n            $scope.onCancel = onCancel;\r\n\r\n            return;\r\n            //-----------------------------\r\n\r\n            function onAbort() {\r\n                $scope.transaction.abort();\r\n            };\r\n\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            function onRequestVerificationClick() {\r\n                pipUserSettingsPageData.requestEmailVerification($scope.transaction);\r\n            };\r\n\r\n            function onVerify() {\r\n                $scope.form.$setSubmitted();\r\n\r\n                if ($scope.form.$invalid) return;\r\n\r\n                pipUserSettingsPageData.verifyEmail(\r\n                    $scope.transaction,\r\n                    $scope.data,\r\n                    function (verifyData) {\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        //pipFormErrors.resetFormErrors($scope.form, true);\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1106: 'email',\r\n                                1103: 'code'\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                )\r\n            };\r\n        }]\r\n    );\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}