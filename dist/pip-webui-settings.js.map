{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/index.ts","src/page/SettingsPage.ts","src/page/SettingsPageRoutes.ts","src/page/index.ts","src/service/SettingsConfig.ts","src/service/SettingsPageSelectedTab.ts","src/service/SettingsService.ts","src/service/SettingsStateConfig.ts","src/service/SettingsTab.ts","src/service/index.ts","temp/pip-webui-settings-html.js"],"names":[],"mappings":"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","file":"pip-webui-settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './service';\r\nimport './page';\r\n\r\nangular.module('pipSettings', [\r\n    'pipSettings.Service',\r\n    'pipSettings.Page'\r\n]);\r\n\r\nexport * from './service';","import { ISettingsService } from '../service/ISettingsService';\r\nimport { SettingsTab } from '../service/SettingsTab';\r\nimport { SettingsPageSelectedTab } from '../service/SettingsPageSelectedTab';\r\n\r\ninterface ISettingsPageController {\r\n    tabs: SettingsTab[];\r\n    selected: SettingsPageSelectedTab;\r\n    // onDropdownSelect: Function;\r\n    onNavigationSelect(state: string): void;\r\n}\r\n\r\nclass SettingsPageController implements ISettingsPageController {\r\n    private _pipTranslate: pip.services.ITranslateService\r\n\r\n    public tabs: SettingsTab[];\r\n    public selected: SettingsPageSelectedTab;\r\n    // public onDropdownSelect: Function;\r\n    private cleanUpFunc: Function;\r\n    private cleanUpSelectFunc: Function;\r\n    private mediaSizeGtSm: boolean;\r\n    public details: boolean;\r\n\r\n    constructor(\r\n        private $state: ng.ui.IStateService,\r\n        private $rootScope: ng.IRootScopeService,\r\n        $scope: ng.IScope,\r\n        private $injector: ng.auto.IInjectorService,\r\n        private $timeout: angular.ITimeoutService,\r\n        private $location: ng.ILocationService,\r\n        private pipNavService: pip.nav.INavService,\r\n        private pipSettings: ISettingsService,\r\n        public pipMedia: pip.layouts.IMediaService,\r\n    ) {\r\n\r\n        this.translateInit();\r\n\r\n        this.mediaSizeGtSm = this.pipMedia('gt-sm');\r\n\r\n        this.initTabs();\r\n\r\n        if (!this.pipMedia('gt-sm')) {\r\n            this.details = $location.search().details == 'details' ? true : false;\r\n        } else {\r\n            this.details = false;\r\n            this.$location.search('details', 'main');\r\n        }\r\n            \r\n        this.cleanUpSelectFunc = $rootScope.$on('$stateChangeSuccess', () => {\r\n            let state = this.$state.current.name;\r\n            this.initSelect(state, false);\r\n        });\r\n\r\n        this.cleanUpFunc = $rootScope.$on('pipMainResized', () => {\r\n            if (this.mediaSizeGtSm !== this.pipMedia('gt-sm')) {\r\n                this.mediaSizeGtSm = this.pipMedia('gt-sm');\r\n\r\n                if (this.pipMedia('gt-sm')) {\r\n                    this.details = false;\r\n                }\r\n                this.appHeader();\r\n            }\r\n        });\r\n        this.appHeader();\r\n\r\n        $scope.$on('$destroy', () => {\r\n            if (angular.isFunction(this.cleanUpFunc)) {\r\n                this.cleanUpFunc();\r\n            }\r\n            \r\n            if (angular.isFunction(this.cleanUpSelectFunc)) {\r\n                this.cleanUpSelectFunc();\r\n            }\r\n        });\r\n    }\r\n\r\n    private initTabs(): void {\r\n        this.tabs = _.filter(this.pipSettings.getTabs(), (tab: SettingsTab) => {\r\n            if (tab.visible === true && (tab.access ? tab.access(this.$rootScope['$user'], tab) : true)) {\r\n                return tab;\r\n            }\r\n        });\r\n\r\n        this.tabs = _.sortBy(this.tabs, 'index');\r\n\r\n        this.selected = new SettingsPageSelectedTab();\r\n        if (this.$state.current.name !== 'settings') {\r\n            this.initSelect(this.$state.current.name);\r\n        } else if (this.$state.current.name === 'settings' && this.pipSettings.getDefaultTab()) {\r\n            this.initSelect(this.pipSettings.getDefaultTab().state);\r\n        } else {\r\n            this.$timeout(() => {\r\n                if (this.pipSettings.getDefaultTab()) {\r\n                    this.initSelect(this.pipSettings.getDefaultTab().state);\r\n                }\r\n                if (!this.pipSettings.getDefaultTab() && this.tabs.length > 0) {\r\n                    this.initSelect(this.tabs[0].state);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private translateInit() {\r\n        this._pipTranslate = this.$injector.has('pipTranslate') ? <pip.services.ITranslateService>this.$injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\r\n            this._pipTranslate.setTranslations('en', {\r\n                PIP_SETTINGS: 'Settings',\r\n                PIP_SETTINGS_DETAILS: 'Settings details'\r\n            });\r\n            this._pipTranslate.setTranslations('ru', {\r\n                PIP_SETTINGS: 'Настройки',\r\n                PIP_SETTINGS_DETAILS: 'Подробно'\r\n            });\r\n        }\r\n    }\r\n    private toMainFromDetails(): void {\r\n        this.$location.search('details', 'main');\r\n        this.details = false;\r\n        this.appHeader();\r\n    }\r\n\r\n    public appHeader(): void {\r\n        this.pipNavService.breadcrumb.breakpoint = 'gt-sm';\r\n        if (!this.pipMedia('gt-sm')) {\r\n            let detailsTitle: string = this.selected && this.selected.tab ? this.selected.tab.title : 'PIP_SETTINGS_DETAILS';\r\n            if (this.details) {\r\n                this.pipNavService.icon.showBack(() => {\r\n                    this.toMainFromDetails();\r\n                });\r\n                this.pipNavService.breadcrumb.items = [\r\n                    <pip.nav.BreadcrumbItem>{\r\n                        title: \"PIP_SETTINGS\", click: () => {\r\n                            this.toMainFromDetails();\r\n                        }\r\n                    },\r\n                    <pip.nav.BreadcrumbItem>{\r\n                        title: detailsTitle, click: () => { }, subActions: []\r\n                    }\r\n                ];\r\n            } else {\r\n                this.pipNavService.icon.showMenu();\r\n                this.pipNavService.breadcrumb.text = \"PIP_SETTINGS\";\r\n            }\r\n        } else {\r\n            this.pipNavService.icon.showMenu();\r\n            this.pipNavService.breadcrumb.text = \"PIP_SETTINGS\";\r\n        }\r\n\r\n\r\n        this.pipNavService.actions.hide();\r\n        this.pipNavService.appbar.removeShadow();\r\n    }\r\n\r\n    private initSelect(state: string, updateState: boolean = true): void {\r\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\r\n            return tab.state === state;\r\n        });\r\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\r\n        this.selected.tabId = state;\r\n        if (updateState === true) this.$state.go(this.selected.tabId);\r\n    }\r\n\r\n    public onNavigationSelect(state: string): void {\r\n        this.initSelect(state);\r\n\r\n        if (!this.pipMedia('gt-sm')) {\r\n            this.details = true;\r\n            this.$location.search('details', 'details');\r\n            this.appHeader();\r\n        }\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipSettings.Page')\r\n    .controller('pipSettingsPageController', SettingsPageController);\r\n","{\r\n    function configureSettingsPageRoutes($stateProvider) {\r\n        $stateProvider\r\n            .state('settings', {\r\n                url: '/settings?user_id&details',\r\n                auth: true,\r\n                controllerAs: 'vm',\r\n                controller: 'pipSettingsPageController',\r\n                templateUrl: 'page/SettingsPage.html'\r\n            });\r\n\r\n    }\r\n\r\n    angular.module('pipSettings.Page')\r\n        .config(configureSettingsPageRoutes);\r\n}\r\n","angular.module('pipSettings.Page', [\r\n    'ui.router', \r\n    'pipSettings.Service',\r\n    'pipNav', \r\n    'pipSelected',\r\n    'pipTranslate',\r\n    'pipSettings.Templates'\r\n    ]);\r\n\r\n\r\nimport './SettingsPage';\r\nimport './SettingsPageRoutes';","import { SettingsTab } from './SettingsTab';\r\n\r\nexport class SettingsConfig {\r\n    public defaultTab: string;\r\n    public tabs: SettingsTab[] = [];\r\n    public titleText: string = 'SETTINGS_TITLE';\r\n    public titleLogo: boolean = null;\r\n    public isNavIcon: boolean = true;\r\n}\r\n","import { SettingsTab } from './SettingsTab';\r\n\r\nexport class SettingsPageSelectedTab {\r\n    public tab: SettingsTab;\r\n    public tabIndex: number = 0;\r\n    public tabId: string;\r\n}","import { SettingsTab } from './SettingsTab';\r\nimport { SettingsConfig } from './SettingsConfig';\r\nimport { ISettingsService } from './ISettingsService';\r\nimport { ISettingsProvider } from './ISettingsService';\r\n\r\nclass SettingsService implements ISettingsService {\r\n    private _config: SettingsConfig;\r\n\r\n    public constructor(config: SettingsConfig) {\r\n        \"ngInject\";\r\n        this._config = config;\r\n    }\r\n\r\n    private getFullStateName(state: string): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public setDefaultTab(name: string): void {\r\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        let defaultTab: SettingsTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === this._config.defaultTab;\r\n        });\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean): boolean {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public getTabs(): SettingsTab[] {\r\n        return _.cloneDeep(this._config.tabs);\r\n    }\r\n\r\n}\r\n\r\nclass SettingsProvider implements ISettingsProvider {\r\n    private _service: SettingsService;\r\n    private _config: SettingsConfig = new SettingsConfig();\r\n\r\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\r\n\r\n    public getFullStateName(state: string): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        let defaultTab: SettingsTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === defaultTab.state;\r\n        });\r\n\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public addTab(tabObj: SettingsTab): void {\r\n        let existingTab: SettingsTab;\r\n\r\n        this.validateTab(tabObj);\r\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + tabObj.state;\r\n        });\r\n        if (existingTab) {\r\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\r\n        }\r\n\r\n        this._config.tabs.push({\r\n            state: this.getFullStateName(tabObj.state),\r\n            title: tabObj.title,\r\n            icon: tabObj.icon,\r\n            iconClass: tabObj.iconClass,\r\n            index: tabObj.index || 100000,\r\n            access: tabObj.access,\r\n            visible: tabObj.visible !== false,\r\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\r\n        });\r\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\r\n\r\n        // if we just added first state and no default state is specified\r\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\r\n            this.setDefaultTab(tabObj.state);\r\n        }\r\n    }\r\n\r\n    public setDefaultTab(name: string): void {\r\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\r\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n        //console.log(this.$stateProvider);\r\n        //this.$stateProvider.go(this._config.defaultTab);\r\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n    }\r\n\r\n    /**\r\n     * Validates passed tab config object\r\n     * If passed tab is not valid it will throw an error\r\n     */\r\n    private validateTab(tabObj: SettingsTab): void {\r\n        if (!tabObj || !_.isObject(tabObj)) {\r\n            throw new Error('Invalid object');\r\n        }\r\n\r\n        if (tabObj.state === null || tabObj.state === '') {\r\n            throw new Error('Tab should have valid Angular UI router state name');\r\n        }\r\n\r\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\r\n            throw new Error('\"access\" should be a function');\r\n        }\r\n\r\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\r\n            throw new Error('Invalid state configuration object');\r\n        }\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean): boolean {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public $get(): ISettingsService {\r\n        \"ngInject\";\r\n\r\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\r\n            this._service = new SettingsService(this._config);\r\n        }\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipSettings.Service')\r\n    .provider('pipSettings', SettingsProvider);\r\n\r\n","export class SettingsStateConfig {\r\n    public url: string;\r\n    public auth: boolean = false;\r\n    public templateUrl?: string;\r\n    public template?: string;\r\n}","import { SettingsStateConfig } from './SettingsStateConfig';\r\n\r\nexport class SettingsTab {\r\n    public state: string;\r\n    public title: string;\r\n    public icon?: string;\r\n    public iconClass?: string;\r\n    public index: number;\r\n    public access: Function;\r\n    public visible: boolean;\r\n    public stateConfig: SettingsStateConfig;\r\n}\r\n","angular.module('pipSettings.Service', []);\r\n\r\nimport './SettingsConfig';\r\nimport './SettingsPageSelectedTab';\r\nimport './SettingsStateConfig';\r\nimport './SettingsTab';\r\nimport './SettingsService';\r\n\r\nexport * from './SettingsConfig';\r\nexport * from './SettingsPageSelectedTab';\r\nexport * from './SettingsStateConfig';\r\nexport * from './SettingsTab';\r\nexport * from './SettingsService';\r\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('page/SettingsPage.html',\n    '\\n' +\n    '<div class=\"pip-main-menu pip-settings\" ng-class=\"{\\'pip-single-content\\': vm.details}\">\\n' +\n    '\t<div class=\"pip-menu\">\\n' +\n    '        <div class=\"pip-list-container pip-scroll divider-top\">\\n' +\n    '\\n' +\n    '\t\t\t<md-list class=\"pip-ref-list tp0 pip-settings-list\"                 \\n' +\n    '                pip-selected=\"vm.selected.tabIndex\"\\n' +\n    '                pip-selected-watch=\"vm.selected.navId\"\\n' +\n    '                pip-select=\"vm.onNavigationSelect($event.id)\">\\n' +\n    '\\n' +\n    '\t\t\t\t<md-list-item  class=\"pip-ref-list-item pointer divider-bottom pip-selectable\" \\n' +\n    '                        ng-repeat=\"tab in vm.tabs track by tab.state\" \\n' +\n    '                        pip-id=\"{{:: tab.state }}\" md-ink-ripple>\\n' +\n    '\\n' +\n    '\t\t\t\t\t<div ng-click=\"vm.onNavigationSelect(tab.state)\" class=\"layout-row layout-align-start-center flex\">\\n' +\n    '\t\t\t\t\t\t<div class=\"pip-settings-icon layout-row layout-align-start-center {{ tab.iconClass ? tab.iconClass : \\'pip-settings-icon-color\\'}}\" \\n' +\n    '                            ng-if=\"tab.icon\">\\n' +\n    '\t\t\t\t\t\t\t<md-icon class=\"\" md-svg-icon=\"{{ tab.icon }}\"></md-icon>\\n' +\n    '\t\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t\t\t<div class=\"pip-content {{ tab.icon ? \\'\\' : \\'pip-settings-without-icon\\' }}\">\\n' +\n    '\t\t\t\t\t\t\t<p class=\"pip-title text-overflow flex\">\\n' +\n    '\t\t\t\t\t\t\t\t{{ ::tab.title | translate }}\\n' +\n    '\t\t\t\t\t\t\t</p>\\n' +\n    '\t\t\t\t\t\t</div>\\n' +\n    '                        <div class=\"pip-ref-list-item-end-icon\">\\n' +\n    '                            <md-icon class=\"\" md-svg-icon=\"icons:chevron-right\"></md-icon>\\n' +\n    '                        </div>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t</md-list-item>\\n' +\n    '\t\t\t</md-list>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '    <div class=\"pip-content-container\">\\n' +\n    '        <pip-document>\\n' +\n    '            <div class=\"pip-body tp24-flex layout-column flex\" ui-view></div>\\n' +\n    '        </pip-document>\\n' +\n    '\t</div>\\n' +\n    '</div>        \\n' +\n    '<!--    \\n' +\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar>\\n' +\n    '<pip-document width=\"800\" min-height=\"400\"\\n' +\n    '              class=\"pip-settings\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-menu-container\"\\n' +\n    '         ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">\\n' +\n    '        <md-list class=\"pip-menu pip-simple-list\"\\n' +\n    '                 pip-selected=\"vm.selected.tabIndex\"\\n' +\n    '                 pip-selected-watch=\"vm.selected.navId\"\\n' +\n    '                 pip-select=\"vm.onNavigationSelect($event.id)\">\\n' +\n    '            <md-list-item class=\"pip-simple-list-item pip-selectable flex\"\\n' +\n    '                          ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id ||\\n' +\n    '                          tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\'\\n' +\n    '                          || tab.state ==\\'settings.blacklist\\'\"\\n' +\n    '                          md-ink-ripple\\n' +\n    '                          pip-id=\"{{:: tab.state }}\">\\n' +\n    '                <p>{{::tab.title | translate}}</p>\\n' +\n    '            </md-list-item>\\n' +\n    '        </md-list>\\n' +\n    '\\n' +\n    '        <div class=\"pip-content-container\">\\n' +\n    '            <pip-dropdown pip-actions=\"vm.tabs\"\\n' +\n    '                          pip-dropdown-select=\"vm.onDropdownSelect\"\\n' +\n    '                          pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown>\\n' +\n    '\\n' +\n    '            <div class=\"pip-body tp24-flex layout-column\" ui-view></div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"layout-column layout-align-center-center flex\"\\n' +\n    '         ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">\\n' +\n    '        {{::\\'ERROR_400\\' | translate}}\\n' +\n    '    </div>\\n' +\n    '</pip-document>-->');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}