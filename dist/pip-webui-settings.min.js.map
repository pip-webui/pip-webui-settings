<<<<<<< HEAD
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","src/user_settings/user_settings.ts","src/user_settings/user_settings_basic_info.ts","src/user_settings/user_settings_change_password.ts","src/user_settings/user_settings_sessions.ts","src/user_settings/user_settings_strings.ts","src/user_settings/user_settings_verify_email.ts","temp/pip-webui-settings-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","settings","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","./settings_page/index","./settings_service/index","2","SettingsPageController","$log","$q","$state","pipNavService","pipSettings","$rootScope","$timeout","_this","_log","_q","_state","tabs","_","filter","getTabs","tab","visible","access","$user","sortBy","selected","current","name","initSelect","getDefaultTab","state","icon","showMenu","breadcrumb","text","actions","hide","appbar","removeShadow","onDropdownSelect","onNavigationSelect","$inject","prototype","find","tabIndex","indexOf","tabId","go","controller","4","configureSettingsPageRoutes","$stateProvider","url","auth","controllerAs","templateUrl","config","5","7","SettingsTab","SettingsConfig","titleText","titleLogo","isNavIcon","SettingsService","_rootScope","_config","defaultTab","p","cloneDeep","showTitleText","newTitleText","showTitleLogo","newTitleLogo","showNavIcon","value","undefined","SettingsProvider","_stateProvider","getFullStateName","addTab","tabObj","existingTab","validateTab","push","title","index","stateConfig","setDefaultTab","isObject","isFunction","$get","_service","provider","9","pipSettingsProvider","$scope","$mdDialog","$window","$mdTheming","pipTranslate","pipTransaction","pipTheme","pipToasts","pipDataUser","pipDataParty","pipFormErrors","onPictureChanged","picture","save","$broadcast","error","onPictureCreated","$event","sender","saveChanges","form","$setSubmitted","$party","type","$invalid","loc_pos","party","toJson","err","originalParty","tid","transaction","begin","updateParty","data","aborted","end","nameCopy","message","String","status","status_code","fromJson","id","updateUser","item","use","language","theme","setCurrentTheme","showNotification","translate","onChangePassword","event","show","email","answer","onVerifyEmail","targetEvent","user","email_ver","genders","translateSet","languages","themes","keys","omit","THEMES","get","onExit","errorsWithHint","debounce","onChangeBasicInfo","11","onCancel","cancel","repeat","changePasData","new_password","showRepeatHint","$setValidity","onApply","onCheckRepeatPassword","changePassword","setFormError","1107","1105","errorsRepeatWithHint","formPart","pipDataSessionProvider","resolve","sessions","readSessionsResolver","sessionId","readSessionIdResolver","pipDataSession","eachSeries","session","callback","removeSession","without","onRemove","onRemoveAll","13","pipTranslateProvider","translations","SETTINGS_TITLE","SETTINGS_BASIC_INFO_TITLE","SETTINGS_ACTIVE_SESSIONS_TITLE","SETTINGS_BASIC_INFO_FULL_NAME","SETTINGS_BASIC_INFO_VERIFY_HINT","SETTINGS_BASIC_INFO_VERIFY_CODE","SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_NAME_HINT","SETTINGS_BASIC_INFO_WORDS_ABOUT_ME","SETTINGS_BASIC_INFO_GENDER","SETTINGS_BASIC_INFO_BIRTHDAY","SETTINGS_BASIC_INFO_LOCATION","SETTINGS_BASIC_INFO_PRIMARY_EMAIL","SETTINGS_BASIC_INFO_FROM","SETTINGS_BASIC_INFO_USER_ID","SETTINGS_CHANGE_PASSWORD_TITLE","SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD","SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD","SETTINGS_ACTIVE_SESSIONS_SUBTITLE","SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION","SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS","SETTINGS_ACTIVE_SESSION_OS","SETTINGS_ACTIVE_SESSION_ACTIVE","SETTINGS_BLACKLIST_TITLE","SETTINGS_BLACKLIST_SUBTITLE","SETTINGS_BLACKLIST_UNBLOCK","SETTINGS_BLACKLIST_EMPTY","SETTINGS_CONTACT_INFO_TITLE","SETTINGS_CONTACT_INFO_EMAIL","SETTINGS_CONTACT_INFO_ADD_EMAIL","SETTINGS_CONTACT_INFO_ADD_PHONE","SETTINGS_CONTACT_INFO_ADD_ADDRESS","SETTINGS_CONTACT_INFO_ADD_ACCOUNT","SETTINGS_CONTACT_INFO_ADD_URL","SETTINGS_CONTACT_INFO_ADDRESS","SETTINGS_CONTACT_INFO_PHONE","SETTINGS_CONTACT_INFO_ACCOUNT_NAME","SETTINGS_CONTACT_INFO_URL","THEME","HINT_PASSWORD","HINT_REPEAT_PASSWORD","ERROR_WRONG_PASSWORD","ERROR_IDENTICAL_PASSWORDS","REPEAT_PASSWORD_INVALID","ERROR_EMAIL_INVALID","14","onAbort","abort","requestEmailVerification","result","onVerify","verifyEmail","verifyData","1106","1103","emailVerified","onRequestVerificationClick","15","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,MAAAL,EAAAK,SAAAC,SAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,GCAA,YAEAmB,GAAO,4BACPA,EAAO,yBAEPQ,QAAQ1B,OAAO,eACX,sBACA,uBAI4B2B,wBAAA,EAAAC,2BAAA,IAAAC,GAAA,SAAAX,EAAAlB,EAAAD,ICNhC,WACI,YAEA2B,SAAQ1B,OAAO,eACX,sBACA,iDCTR,WAEA,GAAA8B,GAAA,mBAAAA,GAsECC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GApDO,GAAIC,GAAQ/B,IACZA,MAAKgC,KAAOR,EACZxB,KAAKiC,GAAAR,EAELzB,KAAKkC,OAASR,OACNS,KAAQC,EAAAC,OAAOT,EAAcU,UAAU,SAAOC,MAC1CA,EAAAC,WAAW,KAAAD,EAAAE,QAAAF,EAAAE,OAAAZ,EAAAa,MAAAH,IACd,MAAAA,KAKTvC,KAAKmC,KAAAC,EAAQO,OAAM3C,KAAAmC,KAAA,SACnBnC,KAAI4C,YAC4B,aAA5B5C,KAAKkC,OAAAW,QAAeC,KACvB9C,KAAA+C,WAAA/C,KAAAkC,OAAAW,QAAAC,MAC+B,aAAvB9C,KAAAkC,OAAWW,QAAAC,MAA4BlB,EAAOoB,gBACtDhD,KAAA+C,WAAAnB,EAAAoB,gBAAAC,SAEW,WACArB,EAAKoB,iBACRhD,KAAA+C,WAAAnB,EAAAoB,gBAAAC,QAEIrB,EAAKoB,iBAAwBhD,KAAOmC,KAAAlB,OAAA,GACxCjB,KAAA+C,WAAA/C,KAAAmC,KAAA,GAAAc,SAKTtB,EAAcuB,KAAAC,WACdxB,EAAcyB,WAAQC,KAAO,WAC7B1B,EAAc2B,QAAOC,OACrB5B,EAAK6B,OAAgBC,oBACjBC,iBAAK,SAAwBT,GAChClB,EAAA4B,mBAAAV,EAAAA,QApDT,MASI1B,GAAAqC,SACI,OAEA,KAA2B,SAC3B,gBACA,cAEA,aAAQ,cAwCSC,UAAUd,WAAW,SAAkBE,QAC5CL,SAAUL,IAAMH,EAAA0B,KAAK9D,KAAMmC,KAAA,SAAAI,GAC5B,MAAAA,GAAAU,QAAAA,IAEXjD,KAAK4C,SAASmB,SAAQ3B,EAAK4B,QAAChE,KAAAmC,KAAAnC,KAAA4C,SAAAL,KAC/BvC,KAAA4C,SAAAqB,MAAAhB,KAGmBY,UAAOF,mBAAA,SAAAV,GAEvBjD,KAAI+C,WAAKE,GACLjD,KAAK4C,SAASL,KACjBvC,KAAAkC,OAAAgC,GAAAjB,IAER1B,aAGI9B,OAAU,oBACV0E,WAAA,4BAAA5C,WC7EL6C,GAAA,SAAazD,EAAAlB,EAAAD,GAEb,qBAES6E,GAAkBC,KAEfrB,MAAM,YACNsB,IAAA,qBACAC,MAAA,EACAC,aAAa,KACdN,WAAA,4BAEVO,YAAA,sCATiBd,SAAA,qDCHlBe,OAAYN,QAEZO,GAAQ,SAAOjE,EAAAlB,EAAkBD,wBAE7BC,OAAA,oBACA,YACA,sBACA,SACA,cACG,eAGP,qKCVAoF,GAAA,SAAAlE,EAAAlB,EAAAD,mBAOAsF,GAAC,WAAD,QAAAA,MAPa,MAAAA,QAsBbA,YAAAA,QAGmC,mBACxBC,KACA/E,KAAAmC,QACAnC,KAAAgF,UAAqB,iBAE/BhF,KAAAiF,UAAA,KAADjF,KAAAkF,WAAC,EARY,MAAAH,QAcTA,eAAAA,QAEe,mBAENI,GAAgBtD,EAAC8C,GACzB,UAEM3E,MAAAoF,WAAAvD,EACH7B,KAAIqF,QAAWV,EA2CnB,SAhDSf,SAAa,aAAW,YAOjBC,UAAMb,cAAgB,WAClC,GAAGsC,EAKH,OAJAA,GAASlD,EAAA0B,KAAU9D,KAAAqF,QAAYlD,KAAA,SAAAoD,GAClC,MAAAA,GAAAtC,QAAAqC,IAGOlD,EAAAoD,UAAeF,MAEVzB,UAAQ4B,cAAiB,SAAAC,GAOlC,MANCA,KAED1F,KAAOqF,QAAKL,UAAiBU,EAChC1F,KAAAqF,QAAAJ,UAAA,MAGOjF,KAAAqF,QAAeL,aAEVnB,UAAQ8B,cAAiB,SAAAC,GAOlC,MANCA,KAED5F,KAAOqF,QAAKJ,UAAiBW,EAChC5F,KAAAqF,QAAAL,UAAA,MAGOhF,KAAKqF,QAASJ,aAEjBpB,UAAAgC,YAAA,SAAAC,GAKD,MAHY,QAAZA,GAA8BC,SAAVD,IACvB9F,KAAAqF,QAAAH,YAAAY,GAEU9F,KAAEqF,QAAUH,WAG3BC,EAAAtB,UAACvB,QAAA,WAAA,MAAAF,GAAAoD,UAAAxF,KAAAqF,QAAAlD,OAOGgD,OACS,WAGF,QAAAa,GAAA1B,GACHtE,KAAAqF,QAAO,GAAWN,GACrB/E,KAAAiG,eAAA3B,QAJD0B,GAACpC,SAAA,oBAOOC,UAAWqC,iBAAA,SAAAjD,GAEf,MAAA,YAAoBA,KAEjBY,UAAAb,cAAA,WAEH,GAAAsC,EAMA,OALHA,GAAAlD,EAAA0B,KAAA9D,KAAAqF,QAAAlD,KAAA,SAAAoD,GAEM,MAAAA,GAAAtC,QAAAqC,IAGElD,EAAAoD,UAAYF,MAEJzB,UAAUsC,OAAA,SAAcC,GACrC,GAAGC,MACHrG,KAAIsG,YAAaF,KACHhE,EAAA0B,KAAM9D,KAAAqF,QAAAlD,KAAA,SAA0BoD,GAC7C,MAAAA,GAAAtC,QAAA,YAAAmD,EAAAnD,QAIG,KAAK,IAAEpC,OAAO,wBAAKuF,EAAAnD,MAAA,gCAEnBoC,QAAQlD,KAAMoE,MACdtD,MAAOjD,KAAEkG,iBAAmBE,EAAKnD,OACjCuD,MAAAJ,EAAcI,MACfC,MAAAL,EAAAK,OAAA,IACChE,OAAC2D,EAAc3D,OAGfD,QAAO4D,EAAK5D,WAAQ,EACpBkE,YAAKtE,EAAAoD,UAAoBY,EAAOM,eAEvC1G,KAAAiG,eAAAhD,MAAAjD,KAAAkG,iBAAAE,EAAAnD,OAAAmD,EAAAM,aAED,mBAAO1G,MAAAqF,QAAAC,YAA0B,IAAAtF,KAAAqF,QAAAlD,KAAAlB,QAEzBjB,KAAG2G,cAAUP,EAAYnD,UAGnBY,UAAU8C,cAAA,SAA0B7D,GAC9C,IAACV,EAAA0B,KAAA9D,KAAAqF,QAAAlD,KAAA,SAAAI,GAEG,MAACA,GAAQU,QAAU,YAAQH,IAU3B,KAAA,IAAAjC,OAAA,wBAARiC,EAAuC,4BAE/BuC,QAAMC,WAAUtF,KAAAkG,iBAAkBpD,MAG3Be,UAAUyC,YAAe,SAAUF,OAC1CA,IAAUhE,EAAAwE,SAAMR,GACnB,KAAA,IAAAvF,OAAA,qBAGmB,OAAhBuF,EAAMnD,OAAU,KAAAmD,EAAAnD,MACnB,KAAA,IAAApC,OAAA,yDAGGuF,EAAM3D,SAAUL,EAAAyE,WAAAT,EAAA3D,QACnB,KAAA,IAAA5B,OAAA,gCAGE,KAAAuF,EAAAM,cAAAtE,EAAAwE,SAAPR,EAAAM,aACQ,KAAA,IAAA7F,OAAe,yCAGlBgD,UAAA4B,cAAA,SAAAC,SAEDA,KACH1F,KAAAqF,QAAAL,UAAAU,EAEM1F,KAAAqF,QAAAJ,UAAA,MAECjF,KAAKqF,QAAQL,aAEhBnB,UAAA8B,cAAA,SAAAC,SAEDA,KACH5F,KAAAqF,QAAAJ,UAAAW,EAEM5F,KAAAqF,QAAAL,UAAA,MAEChF,KAAKqF,QAAQJ,aAGLpB,UAAQgC,YAAU,SAAAC,GAM9B,MALH,QAAAA,GAAAC,SAAAD,IAEM9F,KAAAqF,QAAAH,YAAPY,GAGQ9F,KAAKqF,QAAQH,aAGLrB,UAASiD,MAAA,aAAA,SAAA,SAAAjF,EAAAH,GACxB,UAGE,OAFN,OAAD1B,KAAA+G,WAAC/G,KAAA+G,SAAA,GAAA5B,GAAAtD,EAAA7B,KAAAqF,UAEMrF,KAAA+G,WAEFf,IChNL7E,SAEA1B,OAAQ,uBAERuH,SAAO,cAAoBhB,2BCC3B,qBACIvG,OAAA,4BAEA,2CACkB,IAAAwH,GAAA,SAAStG,EAAAlB,EAAAD,oCAIvBC,OAAA,mBACA,aAAA,UACA,sBACA,mBACD,0BAEF,uDCdJ,sCAKW,SAAAkB,EAAAlB,EAAuBD,kCAIhB2B,QAAA1B,OAAY,6BAAA,iCAAA,oDACX,uBACRkF,QAAO,sBAA2B,SAAAuC,KACrBf,cACN,mBACH,QACA,yCAEH5B,IAAA,cACFJ,WAAA,qCAEHO,YAAoB,8CACrBF,MAAA,OAiBgBmC,cAAuB,mBACzBxC,WAAM,sCAAA,SAAA,aAAA,YAAA,SAAA,UAAA,WAAA,aAAA,eAAA,iBAAA,WAAA,YAAA,cAAA,eAAA,gBAAA,SAAAgD,EAAAtF,EAAAuF,EAAA1F,EAAA2F,EAAAvF,EAAAwF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,WAuCHC,KACJX,EACFY,QAAAC,KAAA,WACLnG,EAAAoG,WAAA,0BAED,SAAAC,GACI,MAAO,IAAOrH,OAAGqH,aAKbC,GAAeC,KACXL,QAAWK,EAAMC,OACrBlB,EACFY,QAAAC,KAAA,WACLnG,EAAAoG,WAAA,0BAYD,SAAAC,GACQ,MAAO,IAAIrH,OAAGqH,aAIdI,QAEAnB,EAAIoB,QACAA,KAAOC,gBAIX3G,EAAW4G,OAAO,CAClB,GAAK,WAAD5G,EAAC4G,OAAAC,MAAAvB,EAAAoB,KAAAI,SACD,MACF9G,GAAW4G,OAAEG,QAAAzB,EAAAyB,YAEd,GAAAC,GAAA1H,QAAA2H,OAAAjH,EAAA4G,cAGGM,GAEA,KAAAA,UAGY5B,EAAO6B,cAAA,IACXC,GAAC9B,EAAA+B,YAAAC,MAAA,cACMC,YAAYvH,EAAM4G,OAAA,SAAAY,GAEzBlC,EAAO+B,YAAgBI,QAAML,KAG7B9B,EAAO+B,YAAYK,MACnBpC,EAAO6B,cAAgBH,EACvB1B,EAAAqC,SAAiBH,EAAGvG,OAE1B,SAAAoF,GACLf,EAAA+B,YAAAK,IAAArB,GACJf,EAAAsC,QAAAC,SAAA,SAAAxB,EAAAyB,QAAAzB,EAAAmB,KAAAO,YAEJ/H,EAAA4G,OAAAtH,QAAA0I,SAAA1C,EAAA6B,sCAoBW7B,EAAU+B,YAAIC,MAAA,8BACNzG,MAAOoH,KAAAjI,EAAoB4G,OAAOqB,MAClCC,YACJC,KAACnI,EAAAa,gBACM2G,GAEPlC,EAAA+B,YAAsBI,QAASL,KAG/B9B,EAAI+B,YAAWK,QACFU,IAAAZ,EAAAa,UACbrI,EAACa,MAAAwH,SAAAb,EAAAa,SAEFrI,EAAUa,MAAKyH,MAAAd,EAAAc,MACVtI,EAAQa,MAAAyH,OAEZ1C,EAAO2C,gBAAsBvI,EAACa,MAAAyH,OAAA,cAErBjC,GAEf,GAAAuB,EACLtC,GAAA+B,YAAAK,IAAArB,GACJuB,EAAAC,SAAA,SAAAxB,EAAAyB,QAAAzB,EAAAmB,KAAAO,YAYDlC,EAAA2C,iBAA+B9C,EAAA+C,UAAAb,GAAA,KAAA,KAAA,gBAKvBc,GAAYC,MACZf,KACMgB,MACP/F,YACC,mDACIP,WAAY,sDACDqG,UACPE,MAAU7I,EAAA4G,OAAiBiC,cAC9B,SAAAC,GACFA,IACVlB,EAAAC,SAAA,yBAYDhC,EAAA2C,iBAA4B9C,EAAA+C,UAAAb,GAAA,KAAA,KAAA,iBAKpBmB,GAAYJ,MACZf,KACMgB,MACP/F,YACC,gDACIP,WAAY,uCACZ0G,YAAaL,UACTE,MAAU7I,EAAW4G,OAAAiC,cACrB,SAAUC,GACdxD,EAAC2D,KAAAC,UAAAJ,EAEPA,IACLlB,EAAAC,SAAA,4BAEPhC,EAAA2C,iBAAA9C,EAAA+C,UAAAb,GAAA,KAAA,KAAA,aA5MOtC,EAAA6B,cAAA7H,QAAA2H,OAAAjH,EAAA4G,QAID,MAAAM,GACI,KAAMA,GAGV5B,EAAOqC,SAAU3H,EAAY4G,OAAC3F,KAC9BhB,EAAO,WAEPqF,EAAOyB,QAAc/G,EAAA4G,OAAeG,UAIpCzB,EAAO6D,QAAIzD,EAAA0D,cAAgC,OAAA,SAAY,QAEvD9D,EAAO+D,UAAA3D,EAAiB0D,cAAc,KAAc,OAEpD9D,EAAO+B,YAAA1B,EAAmB,sBAAiBL,GAE3CA,EAAOgE,OAAA/I,EAAAgJ,KAAgBhJ,EAAAiJ,KAAA/D,EAAcgE,OAAA,YAErC5J,EAAO6J,IAAA,uBAAmBC,OAAiBlD,EAE3CnB,EAAOsE,eAAgB5D,EAAG4D,eAE1BtE,EAAOoD,iBAAiBA,EAExBpD,EAAOyD,cAAAA,EAEPzD,EAAAgB,iBAAAA,IACIL,iBACIA,iBACe1F,EAAAsJ,SAAW3B,EAAA,OAE1B4B,kBAAevJ,EAAAsJ,SAAApD,EAAA,gBCjE/BsD,IAAA,SAAWjL,EAAWlB,EAAAD,kCAKN2B,QAAO1B,OAAA,kDACA,2CAA6C,SAAA,aAAA,YAAA,QAAA,cAAA,iBAAA,gBAAA,SAAA0H,EAAAtF,EAAAuF,EAAAsD,EAAA/C,EAAAH,EAAAK,WAkCpDgE,OACIC,wCAIA3E,EAAC4E,SAAA5E,EAAA6E,cAAAC,cAAA,KAAA9E,EAAA4E,QAAA5E,EAAA4E,QAQZ5E,EAAA+E,gBAAA,EAUD/E,EAAAoB,KAAAwD,OAAAI,aAAA,UAAA,KAlBchF,EAAMoB,KAAAwD,OAAAI,aAAA,UAAA,GACJhF,EAAO4E,SAAA5E,EAAiB6E,cAAKC,aAChC9E,EAAA+E,gBAAA,EAED/E,EAAO+E,gBAAqB,YAmBnCE,KAEDjF,EAAKkF,wBACDlF,EAAOoB,KAAAI,UAKXxB,EAAY+B,YAAAC,MACR,qBAIAhC,EACA6E,cAAetB,MAAAA,IACJ4B,eAAgBnF,EAAO6E,cAAA,WAC9B7E,EAAA+B,YAAcK,QAGAhG,MAAA,aACF2E,KAEVgB,YAAAK,IAAArB,GAERL,EAAA0E,aAAApF,EAAAoB,KAAAL,GACLsE,KAAA,cAEPC,KAAA,qBAxFWvD,YAAA1B,EAAA,2BAAAL,KAEDuF,qBAAU,SAAAnE,EAAAoE,GACZ,MAAAxF,GAAA+E,eACKrE,EAAsB4D,eAAAlD,EAAAoE,OAK7BxF,EAAO+E,gBAAA,EACP/E,EAAO6E,iBAUP7E,EAAAsE,eAAA5D,EAAA4D,iBACII,SAAUA,EACd1E,EAACkF,sBAAAA,EAUDlF,EAAAiF,QAAAA,iBC/CJ,SAAAzL,EAAAlB,EAAuBD,kCAIZ2B,QAAU1B,OAAA,kDACT,uBACRkF,QAAO,sBAAA,yBAAgC,SAAAuC,EAAA0F,KAC1BzG,cACN,iBACH,QACA,8CAEA5B,IAAA,uBACY,gDACC,kDACZ,EACJsI,SACFC,SAAAF,EAAAG,qBACJC,UAAAJ,EAAAK,+BAgBY9I,WAAW,qCAAe,SAAA,iBAAA,iBAAA,WAAA,YAAA,SAAAgD,EAAAK,EAAA0F,EAAAJ,EAAAE,mBAmBrB/D,GAAC9B,EAAA+B,YAAAC,MAAA,kBAACgE,WAAMhG,EAAA2F,SAAA,SAAAM,EAAAC,GACJD,EAAAtD,IAAc3C,EAAC6F,gBAMIM,eAEfF,QAAUA,cAGZjG,EAAA2F,SAAA1K,EAAAmL,QAAApG,EAAA2F,SAAAM,GACLC,KAEL,SAAanF,gBAILa,GACAA,GACH5B,EAAA+B,YAAAK,IAAAR,GAEF5B,EAAA+B,YAAAI,QAAAL,IAcH9B,EAAO+B,YAAQK,gBAGfiE,GAAMJ,EAAOC,GACjB,GAAAD,EAAAtD,KAAe3C,EAAA6F,UAAf,IAKQ/D,GAAI9B,EAAO+B,YAAYC,MAAQ,cACpBmE,eACXF,QAACA,cAGDjG,EAAO+B,YAAaI,QAAQL,KAG5B9B,EAAC+B,YAAAK,MAELpC,EAAA2F,SAAe1K,EAAAmL,QAAApG,EAAA2F,SAAAM,GACXC,GACAA,MAGX,SAAAnF,GAEPf,EAAA+B,YAAAK,IAAArB,GAEDf,EAAAsC,QAAA,SAAAvB,EAAAyB,QAAAzB,EAAAmB,KAAAO,eAnFOzC,EAAO6F,UAAWA,EAUlB7F,EAAA+B,YAAA1B,EAAA,oBAAAL,KACI2F,SAAUA,IAEVW,YACIA,aAEQD,aChDxBE,IAAA,SAAW/M,EAAOlB,EAAUD,kCAKpB2B,QAAA1B,OAAA,2BAAyC,mBACzCkF,QAAA,uBAAkC,SAAAgJ,KAElCC,aAAA,MACAC,eAAA,WACAC,0BAAA,aACAC,+BAAA,kBACAC,8BAAA,YACAC,gCAAiC,qCACjCC,gCAAA,uBAEAC,yCAAsC,gCACtCC,oCAAgC,uBAChCC,8BAAgC,mEAChCC,mCAAqC,2BACrCC,2BAA4B,SAC5BC,6BAA+B,WAE/BC,6BAAgC,mBAChCC,kCAAA,gBACAC,yBAAA,cACAC,4BAAA,UAEAC,+BAAA,wDACqC,eACrCC,yCAA0C,kBAC1CC,0CAAA,mBACAC,kCAAoC,+FAEpCC,uCAA0C,gBAE1CC,+CAAuC,wBACvCC,2BAA6B,kCACV,OACnBC,+BAA8B,SAC9BC,yBAA4B,YAE5BC,4BAA+B,wFAE/BC,2BAAA,UACAC,yBAAA,8BACAC,4BAAA,eACAC,4BAAA,QACAC,gCAAiC,YACjCC,gCAAiC,YACjCC,kCAA+B,cAC/BC,kCAAoC,cACpCC,8BAA6B,UAE7BC,8BAAgB,UAEhBC,4BAAiB,QACjBC,mCAAwB,eAExBC,0BAAwB,MACxBC,MAAA,QACAC,cAAA,uBACAC,qBAAuB,kBACxBC,qBAAA,iBAEHC,0BAAiC,sCAC7BC,wBAAkB,0BAClBC,oBAAA,kCAGA9C,aAAA,MACAC,eAAA,YACAC,0BAAA,kBACAC,+BAAiC,kBACjCC,8BAAA,aACAK,8BAAA,mEAEAJ,gCAAA,wDACAC,gCAAmC,6BACnCC,yCAAgC,0BAChCC,oCAAgC,kBAChCE,mCAAqC,wBACrCC,2BAA4B,MAC5BC,6BAA+B,gBAE/BC,6BAAgC,0BAChCC,kCAAA,2BACAC,yBAAA,YACAC,4BAAA,aAEAC,+BAAA,wDACA,eACAC,yCAA0C,SAC1CC,0CAAA,iBACAC,kCAAoC,oIAEpCC,uCAAkC,iBAElCC,+CAAwC,0BACxCC,2BAA6B,kCAC7B,OACAC,+BAA8B,UAC9BC,yBAA4B,aAE5BC,4BAA+B,qFAE/BC,2BAAA,iBACAC,yBAAA,uCACAC,4BAAA,WACAC,4BAAA,0BACAC,gCAAiC,2BACjCC,gCAAiC,mBACjCC,kCAA+B,iBAC/BC,kCAAoC,mBACpCC,8BAA6B,oBAE7BC,8BAAe,QAEfC,4BAAiB,UACjBC,mCAAwB,uBAExBC,0BAAwB,WACxBC,MAAA,OACAC,cAAA,mBACAC,qBAAuB,mBACxBC,qBAAA,sBACJC,0BAAA,kCAEFC,wBAAA,mGC3HDE,IAAA,SAAWhQ,EAAWlB,EAAAD,kCAKH2B,QAAK1B,OAAA,oCACZ0E,WAAQ,wCAAA,SAAA,aAAA,YAAA,iBAAA,gBAAA,cAAA,QAAA,SAAAgD,EAAAtF,EAAAuF,EAAAI,EAAAK,EAAAF,EAAA+C,WAmCRkG,KACHzJ,EAAA+B,YAAA2H,gBAWWhF,KAERzE,EAAA0E,yBAKY7C,GAAC9B,EAAA+B,YAAAC,MAAA,8BACM2H,4BAAkB,SAAAC,GAE7B5J,EAAU+B,YAAKI,QAAAL,IAI1B9B,EAAA+B,YAAAK,OAUD,SAAArB,GACIf,EAAW+B,YAACK,IAAerB,aAI1B8I,KAGD,GAFA7J,EAAOoB,KAAGC,iBAEVrB,EAAWoB,KAACI,SAAZ,IAKIM,GAAA9B,EAAU+B,YAAUC,MAAA,eACR8H,mBACA9J,EAAOkC,KAAAqB,MACX5J,KAACqG,EAAAkC,KAAAvI,eACMoQ,GAEX/J,EAAU+B,YAAWI,QAAAL,KAKrB9B,EAAA+B,YAAcK,QAGAhG,MAAA,cACF2E,KAEVgB,YAAAK,IAAArB,GAGRL,EAAA0E,aAAApF,EAAAoB,KAAAL,GACLiJ,KAAA,QAEPC,KAAA,cA1GQC,eAAA,EACFlK,EAAOkC,MAGPqB,MAAOA,EAEP5J,KAAO,IAGPqG,EAAO+B,YAAW1B,EAAS,wBAAAL,GAE3BA,EAAOyJ,QAAQA,EAUfzJ,EAAAmK,2BAAAA,IACI7F,eAAmB5D,EAAQ4D,eAC/BtE,EAAC6J,SAAAA,EAUD7J,EAAA0E,SAAAA,aCtDZ0F,IAAA,SAAA5Q,EAAAlB,EAAAD,IACA,SAAAC,GACA,IACAA,EAAA0B,QAAA1B,OAAA,yBACA,MAAAU,GACAV,EAAA0B,QAAA1B,OAAA,4BAEAA,EAAA+R,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,kCACA,+oCAIA,SAAAjS,GACA,IACAA,EAAA0B,QAAA1B,OAAA,yBACA,MAAAU,GACAV,EAAA0B,QAAA1B,OAAA,4BAEAA,EAAA+R,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,8CACA,mwHAIA,SAAAjS,GACA,IACAA,EAAA0B,QAAA1B,OAAA,yBACA,MAAAU,GACAV,EAAA0B,QAAA1B,OAAA,4BAEAA,EAAA+R,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,mDACA,ihFAIA,SAAAjS,GACA,IACAA,EAAA0B,QAAA1B,OAAA,yBACA,MAAAU,GACAV,EAAA0B,QAAA1B,OAAA,4BAEAA,EAAA+R,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,4CACA,w9DAIA,SAAAjS,GACA,IACAA,EAAA0B,QAAA1B,OAAA,yBACA,MAAAU,GACAV,EAAA0B,QAAA1B,OAAA,4BAEAA,EAAA+R,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,gDACA","file":"pip-webui-settings.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nimport './settings_service/index';\r\nimport './settings_page/index';\r\n\r\nangular.module('pipSettings', [\r\n    'pipSettings.Service',\r\n    'pipSettings.Page'\r\n]);\r\n\r\nexport * from './settings_service';\r\nexport * from './settings_page';","﻿/**\r\n * @file Registration of settings components\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipSettings', [\r\n        'pipSettings.Service',\r\n        'pipSettings.Page'\r\n    ]);\r\n\r\n})();\r\n","// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\nclass SettingsPageController {\r\n    private _log: ng.ILogService;\r\n    private _q: ng.IQService;\r\n    private _state: ng.ui.IStateService;\r\n\r\n    public tabs: any;\r\n    public selected: any;\r\n    public onDropdownSelect: any;\r\n\r\n    constructor(\r\n        $log: ng.ILogService,\r\n        $q: ng.IQService,\r\n        $state: ng.ui.IStateService,\r\n        pipNavService,\r\n        pipSettings,\r\n        $rootScope, \r\n        $timeout\r\n    ) {\r\n        this._log = $log;\r\n        this._q = $q;\r\n        this._state = $state;\r\n\r\n        this.tabs = _.filter(pipSettings.getTabs(), function (tab: any) {\r\n                if (tab.visible === true && (tab.access ? tab.access($rootScope.$user, tab) : true)) {\r\n                    return tab;\r\n                }\r\n            });\r\n\r\n        this.tabs = _.sortBy(this.tabs, 'index');\r\n\r\n        this.selected = {};\r\n        if (this._state.current.name !== 'settings') {\r\n            this.initSelect(this._state.current.name);\r\n        } else if (this._state.current.name === 'settings' && pipSettings.getDefaultTab()) {\r\n            this.initSelect(pipSettings.getDefaultTab().state);\r\n        } else {\r\n            $timeout(function () {\r\n                if (pipSettings.getDefaultTab()) {\r\n                    this.initSelect(pipSettings.getDefaultTab().state);\r\n                }\r\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\r\n                     this.initSelect(this.tabs[0].state);\r\n                }\r\n            });\r\n        }\r\n\r\n        pipNavService.icon.showMenu();\r\n        pipNavService.breadcrumb.text = \"Settings\";\r\n        pipNavService.actions.hide();\r\n        pipNavService.appbar.removeShadow();\r\n        this.onDropdownSelect = (state) => {\r\n            this.onNavigationSelect(state.state);\r\n        }\r\n    }\r\n\r\n    private initSelect(state: string) {\r\n        this.selected.tab = _.find(this.tabs, function (tab: any) {\r\n                    return tab.state === state;\r\n                });\r\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\r\n        this.selected.tabId = state;\r\n    }\r\n\r\n    public onNavigationSelect(state: string) {\r\n        this.initSelect(state);\r\n\r\n        if (this.selected.tab) {\r\n            this._state.go(state);\r\n        }\r\n    }\r\n}\r\n\r\nangular.module('pipSettings.Page')\r\n    .controller('pipSettingsPageController', SettingsPageController);\r\n})();","'use strict';\r\n\r\nfunction configureSettingsPageRoutes($stateProvider) {\r\n    $stateProvider\r\n        .state('settings', {\r\n            url: '/settings?party_id',\r\n            auth: true,\r\n            controllerAs: 'vm',\r\n            controller: 'pipSettingsPageController',\r\n            templateUrl: 'settings_page/SettingsPage.html'\r\n        });\r\n       \r\n}\r\n\r\nangular.module('pipSettings.Page')\r\n    .config(configureSettingsPageRoutes);\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Page', [\r\n    'ui.router', \r\n    'pipSettings.Service',\r\n    'pipNav', \r\n    'pipSelected',\r\n    'pipTranslate',\r\n    'pipSettings.Templates'\r\n    ]);\r\n\r\n\r\nimport './SettingsPageController';\r\nimport './SettingsPageRoutes';","'use strict';\r\n\r\nexport class SettingsTab {\r\n    public state: string;\r\n    public title: string;\r\n    public index: string;\r\n    public access: boolean;\r\n    public visible: boolean;\r\n    public stateConfig: any;\r\n}\r\n\r\nexport interface ISettingsService {\r\n    getDefaultTab();\r\n    showTitleText (newTitleText);\r\n    showTitleLogo(newTitleLogo);\r\n    showNavIcon(value);\r\n    getTabs();\r\n}\r\n\r\nexport interface ISettingsProvider extends ng.IServiceProvider {\r\n    getDefaultTab();\r\n    addTab(tabObj);\r\n}\r\n\r\nexport class SettingsConfig {\r\n\r\n    public defaultTab: string;\r\n    public tabs: SettingsTab[] = [];\r\n    public titleText: string = 'SETTINGS_TITLE';\r\n    public titleLogo: boolean = null;\r\n    public isNavIcon: boolean = true;\r\n\r\n}\r\n\r\nclass SettingsService implements ISettingsService {\r\n    private _config: SettingsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor($rootScope: ng.IRootScopeService, \r\n                       config: SettingsConfig) {\r\n        \"ngInject\";\r\n        this._rootScope = $rootScope;\r\n        this._config = config;\r\n    }\r\n\r\n    public getDefaultTab() {\r\n        var defaultTab;\r\n        defaultTab = _.find(this._config.tabs, function (p) {\r\n            return p.state === defaultTab;\r\n        });\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public showTitleText (newTitleText: string) {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean) {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n    public getTabs() {\r\n        return _.cloneDeep(this._config.tabs);\r\n    }\r\n\r\n}\r\n\r\nclass SettingsProvider implements ISettingsProvider {\r\n    private _service: SettingsService;\r\n    private _config: SettingsConfig = new SettingsConfig();\r\n    private _stateProvider: ng.ui.IStateProvider;\r\n\r\n    constructor($stateProvider: ng.ui.IStateProvider) {\r\n        this._stateProvider = $stateProvider;\r\n    }\r\n\r\n    public getFullStateName(state): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        var defaultTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, function (p) {\r\n            return p.state === defaultTab;\r\n        });\r\n\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public addTab(tabObj) {\r\n        var existingTab: SettingsTab;\r\n\r\n        this.validateTab(tabObj);\r\n        existingTab = _.find(this._config.tabs, function (p) {\r\n            return p.state === 'settings.' + tabObj.state;\r\n        });\r\n        if (existingTab) {\r\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\r\n        }\r\n\r\n        this._config.tabs.push({\r\n            state: this.getFullStateName(tabObj.state),\r\n            title: tabObj.title,\r\n            index: tabObj.index || 100000,\r\n            access: tabObj.access,\r\n            visible: tabObj.visible !== false,\r\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\r\n        });\r\n        this._stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\r\n\r\n        // if we just added first state and no default state is specified\r\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\r\n            this.setDefaultTab(tabObj.state);\r\n        }\r\n    }\r\n\r\n    public setDefaultTab(name: string) {\r\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\r\n        if (!_.find(this._config.tabs, function (tab) {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n        //this._stateProvider.go(this._config.defaultTab);\r\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n    }\r\n\r\n    /**\r\n     * Validates passed tab config object\r\n     * If passed tab is not valid it will throw an error\r\n     */\r\n\r\n    private validateTab(tabObj: SettingsTab) {\r\n        if (!tabObj || !_.isObject(tabObj)) {\r\n            throw new Error('Invalid object');\r\n        }\r\n\r\n        if (tabObj.state === null || tabObj.state === '') {\r\n            throw new Error('Tab should have valid Angular UI router state name');\r\n        }\r\n\r\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\r\n            throw new Error('\"access\" should be a function');\r\n        }\r\n\r\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\r\n            throw new Error('Invalid state configuration object');\r\n        }\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value) {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public $get($rootScope, $state) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SettingsService($rootScope, this._config);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipSettings.Service')\r\n    .provider('pipSettings', SettingsProvider);\r\n\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Service', []);\r\n\r\nimport './SettingsService';","/**\r\n * @file Settings tab logic\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipUserSettings', [\r\n        'ngMaterial', 'pipData',\r\n        'pipSettings.Service',\r\n        'pipSettings.Page',\r\n\r\n        'pipUserSettings.Strings',\r\n        'pipUserSettings.Sessions',\r\n        'pipUserSettings.BasicInfo',\r\n        'pipSettings.Templates'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * @file Settings basic info controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\r\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail', \r\n            'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'basic_info',\r\n            index: 1,\r\n            title: 'SETTINGS_BASIC_INFO_TITLE',\r\n            stateConfig: {\r\n                url: '/basic_info',\r\n                controller: 'pipUserSettingsBasicInfoController',\r\n                templateUrl: 'user_settings/user_settings_basic_info.html',\r\n                auth: true\r\n            }\r\n        });\r\n\r\n        pipSettingsProvider.setDefaultTab('basic_info');\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n     *\r\n     * @description\r\n     * Controller for the predefined 'basic_info' state.\r\n     * Provides sync changes user's profile with remote profile.\r\n     * On state exit everything is saved on the server.\r\n     */\r\n    thisModule.controller('pipUserSettingsBasicInfoController',\r\n        function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\r\n                  pipTranslate, pipTransaction, pipTheme,\r\n                  pipToasts, pipDataUser, pipDataParty, pipFormErrors) {\r\n\r\n            try {\r\n                $scope.originalParty = angular.toJson($rootScope.$party);\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n\r\n            $scope.nameCopy = $rootScope.$party.name;\r\n\r\n            $timeout(function () {\r\n                $scope.loc_pos = $rootScope.$party.loc_pos;\r\n            });\r\n\r\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\r\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\r\n\r\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\r\n\r\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\r\n\r\n            $state.get('settings.basic_info').onExit = saveChanges;\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onChangePassword */\r\n            $scope.onChangePassword = onChangePassword;\r\n            /** @see onVerifyEmail */\r\n            $scope.onVerifyEmail = onVerifyEmail;\r\n            /** @see onPictureCreated */\r\n            $scope.onPictureCreated = onPictureCreated;\r\n            /** @see onPictureChanged */\r\n            $scope.onPictureChanged = onPictureChanged;\r\n            /** @see updateUser */\r\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\r\n            /** @see saveChanges */\r\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\r\n\r\n            function onPictureChanged() {\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            function onPictureCreated($event) {\r\n                $scope.picture = $event.sender;\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeBasicInfo\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the input information.\r\n             * It is updated user's party profile. Also it updates user's profile in $rootScope.\r\n             */\r\n            function saveChanges() {\r\n                if ($scope.form) {\r\n                    $scope.form.$setSubmitted();\r\n                }\r\n\r\n                if ($rootScope.$party) {\r\n\r\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\r\n                        return;\r\n                    }\r\n\r\n                    // Check to avoid unnecessary savings\r\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\r\n                    try {\r\n                        var party = angular.toJson($rootScope.$party);\r\n                    } catch (err) {\r\n                        throw err;\r\n                    }\r\n\r\n                    if (party !== $scope.originalParty) {\r\n                        var tid = $scope.transaction.begin('UPDATING');\r\n\r\n                        pipDataParty.updateParty($rootScope.$party,\r\n                            function (data) {\r\n                                if ($scope.transaction.aborted(tid)) {\r\n                                    return;\r\n                                }\r\n                                $scope.transaction.end();\r\n\r\n                                $scope.originalParty = party;\r\n                                $scope.nameCopy = data.name;\r\n                            }, function (error) {\r\n                                $scope.transaction.end(error);\r\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeUser\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the user's profile information.\r\n             * Also it updates user's profile in $rootScope.\r\n             */\r\n            function updateUser() {\r\n                var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                if ($rootScope.$user.id === $rootScope.$party.id) {\r\n                    pipDataUser.updateUser(\r\n                        {\r\n                            item: $rootScope.$user\r\n                        },\r\n                        function (data) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                            pipTranslate.use(data.language);\r\n                            $rootScope.$user.language = data.language;\r\n                            $rootScope.$user.theme = data.theme;\r\n                            if ($rootScope.$user.theme) {\r\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\r\n                            }\r\n\r\n                        }, function (error) {\r\n                            var message;\r\n                            \r\n                            $scope.transaction.end(error);\r\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangePassword\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onChangePassword(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_change_password.html',\r\n                    controller: 'pipUserSettingsChangePasswordController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        if (answer) {\r\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onVerifyEmail\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onVerifyEmail(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\r\n                    controller: 'pipUserSettingsVerifyEmailController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        $scope.user.email_ver = answer;\r\n                        if (answer) {\r\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings change password controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n     *\r\n     * @description\r\n     * Controller for dialog panel of password change.\r\n     */\r\n    thisModule.controller('pipUserSettingsChangePasswordController',\r\n        function ($scope, $rootScope, $mdDialog, email, pipDataUser, pipTransaction, pipFormErrors) {\r\n\r\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\r\n            $scope.errorsRepeatWithHint = function (form, formPart) {\r\n                if ($scope.showRepeatHint) {\r\n                    return pipFormErrors.errorsWithHint(form, formPart);\r\n                }\r\n\r\n                return {};\r\n            };\r\n            $scope.showRepeatHint = true;\r\n            $scope.changePasData = {};\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onCancel = onCancel;\r\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\r\n            $scope.onApply = onApply;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCheckRepeatPassword\r\n             *\r\n             * @description\r\n             * Validates a password typed into password fields.\r\n             */\r\n            function onCheckRepeatPassword() {\r\n                if ($scope.changePasData) {\r\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\r\n                        $scope.form.repeat.$setValidity('repeat', true);\r\n                        if ($scope.repeat === $scope.changePasData.new_password) {\r\n                            $scope.showRepeatHint = false;\r\n                        } else {\r\n                            $scope.showRepeatHint = true;\r\n                        }\r\n                    } else {\r\n                        $scope.showRepeatHint = true;\r\n                        $scope.form.repeat.$setValidity('repeat', false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onApply\r\n             *\r\n             * @description\r\n             * Approves password change and sends request to the server on password change.\r\n             */\r\n            function onApply() {\r\n                $scope.onCheckRepeatPassword();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\r\n                    return;\r\n                }\r\n\r\n                $scope.changePasData.email = email;\r\n\r\n                pipDataUser.changePassword(\r\n                    $scope.changePasData,\r\n                    function () {\r\n                        $scope.transaction.end();\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1107: 'oldPassword',\r\n                                1105: 'newPassword'\r\n                            }\r\n                        );\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings sessions controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Sessions', [\r\n        'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider, pipDataSessionProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'sessions',\r\n            index: 3,\r\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\r\n            stateConfig: {\r\n                url: '/sessions',\r\n                controller: 'pipUserSettingsSessionsController',\r\n                templateUrl: 'user_settings/user_settings_sessions.html',\r\n                auth: true,\r\n                resolve: {\r\n                    sessions: pipDataSessionProvider.readSessionsResolver,\r\n                    sessionId: pipDataSessionProvider.readSessionIdResolver\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n     *\r\n     * @description\r\n     * Controller provides an interface for managing active sessions.\r\n     */\r\n    thisModule.controller('pipUserSettingsSessionsController',\r\n        function ($scope, pipTransaction, pipDataSession, sessions, sessionId) {\r\n\r\n            $scope.sessionId = sessionId;\r\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\r\n            $scope.sessions = sessions;\r\n\r\n            $scope.onRemoveAll = onRemoveAll;\r\n            $scope.onRemove = onRemove;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemoveAll\r\n             *\r\n             * @description\r\n             * Closes all active session.\r\n             */\r\n            function onRemoveAll() {\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n\r\n                async.eachSeries(\r\n                    $scope.sessions,\r\n                    function (session: any, callback) {\r\n                        if (session.id == $scope.sessionId) {\r\n                            callback();\r\n                        } else {\r\n                            pipDataSession.removeSession(\r\n                                {\r\n                                    session: session\r\n                                },\r\n                                function () {\r\n                                    $scope.sessions = _.without($scope.sessions, session);\r\n                                    callback();\r\n                                },\r\n                                function (error) {\r\n                                    callback;\r\n                                }\r\n                            );\r\n                        }\r\n                    },\r\n                    function (err) {\r\n                        if (err) {\r\n                            $scope.transaction.end(err);\r\n                        }\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n                    });                \r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemove\r\n             *\r\n             * @description\r\n             * Closes passed session.\r\n             *\r\n             * @param {Object} session  Session configuration object\r\n             */\r\n            function onRemove(session, callback) {\r\n                if (session.id === $scope.sessionId) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n                pipDataSession.removeSession(\r\n                    {\r\n                        session: session\r\n                    },\r\n                    function () {\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n\r\n                        $scope.sessions = _.without($scope.sessions, session);\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* eslint-disable quote-props */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\r\n\r\n    thisModule.config(function (pipTranslateProvider) {\r\n\r\n        // Set translation strings for the module\r\n        pipTranslateProvider.translations('en', {\r\n            'SETTINGS_TITLE': 'Settings',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\r\n\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\r\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\r\n            '\"Close Session\" to end the session.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\r\n            'private messages.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\r\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\r\n\r\n            'THEME': 'Theme',\r\n\r\n            'HINT_PASSWORD': 'Minimum 6 characters',\r\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\r\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\r\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'SETTINGS_TITLE': 'Настройки',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\r\n\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\r\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\r\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\r\n            ' посылать вам приглашения и личные сообщения.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\r\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\r\n\r\n            'THEME': 'Тема',\r\n\r\n            'HINT_PASSWORD': 'Минимум 6 знаков',\r\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\r\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\r\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\r\n        });\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Settings verify email controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n     *\r\n     * @description\r\n     * Controller for verify email dialog panel.\r\n     */\r\n    thisModule.controller('pipUserSettingsVerifyEmailController',\r\n        function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipDataUser, email) {\r\n\r\n            $scope.emailVerified = false;\r\n            $scope.data = {\r\n                email: email,\r\n                code: ''\r\n            };\r\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\r\n\r\n            /** @see onAbort */\r\n            $scope.onAbort = onAbort;\r\n            /** @see onRequestVerificationClick*/\r\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onVerify */\r\n            $scope.onVerify = onVerify;\r\n            /** @see onCancel */\r\n            $scope.onCancel = onCancel;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onAbort\r\n             *\r\n             * @description\r\n             * Aborts a verify request.\r\n             */\r\n            function onAbort() {\r\n                $scope.transaction.abort();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onRequestVerificationClick\r\n             *\r\n             * @description\r\n             * Sends request to verify entered email.\r\n             */\r\n            function onRequestVerificationClick() {\r\n                    var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                pipDataUser.requestEmailVerification(\r\n                    {},                         \r\n                    function (result) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n                        }, \r\n                        function (error) {\r\n                            $scope.transaction.end(error);\r\n                        }\r\n                    );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onVerify\r\n             *\r\n             * @description\r\n             * Initiates request on verify email on the server.\r\n             */\r\n            function onVerify() {\r\n                $scope.form.$setSubmitted();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('Verifying');\r\n\r\n                pipDataUser.verifyEmail(\r\n                    {\r\n                        email: $scope.data.email,\r\n                        code: $scope.data.code\r\n                    }, \r\n                    function (verifyData) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1106: 'email',\r\n                                1103: 'code'\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" class=\"w-stretch\" novalidate=\"\"><md-progress-linear class=\"pip-progress-top\" ng-show=\"transaction.busy()\" md-mode=\"indeterminate\"></md-progress-linear><div class=\"layout-row bm12\"><div class=\"md-tile-left\"><pip-avatar-edit pip-party-id=\"$party.id\" pip-created=\"onPictureCreated($event)\" pip-changed=\"onPictureChanged($control, $event)\"></pip-avatar-edit></div><div class=\"md-tile-content tp0 layout-align-center\"><h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3><p class=\"text-primary text-overflow m0\">{{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}} {{$user.signup | formatLongDate }}</p></div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label> <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required=\"\" ng-model=\"$party.name\" ng-disabled=\"transaction.busy()\" ng-change=\"onChangeBasicInfo()\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.fullName).hint\">{{::\\'ERROR_FULLNAME_INVALID\\' | translate}}</div></md-input-container><md-input-container class=\"md-block bm0\"><label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" required=\"\" ng-model=\"$party.email\" ng-change=\"onChangeBasicInfo()\" pip-email-unique=\"{{$party.email}}\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' | translate}}</div><div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\"$party.type ==\\'team\\'\"><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div><div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div></div></md-input-container><md-button class=\"md-raised bm16 tm8 rm8\" ng-click=\"onVerifyEmail($event)\" ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}</md-button><md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}</md-button><md-input-container class=\"md-block flex\"><label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label> <textarea ng-model=\"$party.about\" columns=\"1\" ng-change=\"onChangeBasicInfo()\"></textarea></md-input-container><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'GENDER\\' | translate}}</label><md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\" placeholder=\"{{\\'GENDER\\' | translate}}\"><md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option></md-select></md-input-container><div ng-hide=\"$party.type ==\\'team\\'\"><p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p><pip-date ng-model=\"$party.birthday\" ng-change=\"onChangeBasicInfo()\" pip-time-mode=\"past time-mode=\" past\"=\"\"></pip-date></div><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'LANGUAGE\\' | translate}}</label><md-select placeholder=\"{{\\'LANGUAGE\\' | translate}}\" ng-model=\"$user.language\" ng-change=\"onChangeUser()\"><md-option ng-value=\"language.id\" ng-repeat=\"language in languages\">{{language.name}}</md-option></md-select></md-input-container><md-input-container class=\"md-block\" ng-if=\"$party.type !=\\'team\\'\"><label>{{::\\'THEME\\' | translate}}</label><md-select class=\"w-stretch theme-text-primary\" ng-model=\"$user.theme\" ng-change=\"onChangeUser()\" ng-disabled=\"transaction.busy()\"><md-option ng-value=\"theme\" ng-repeat=\"theme in themes\" ng-selected=\"$theme == theme ? true : false\">{{ theme | translate }}</md-option></md-select></md-input-container><pip-location-edit class=\"map-edit bm24-flex\" ng-hide=\"$party.type ==\\'team\\'\" pip-changed=\"onChangeBasicInfo()\" pip-location-name=\"$party.loc_name\" pip-location-pos=\"loc_pos\"></pip-location-edit></form>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><form name=\"form\" ng-submit=\"onApply()\"><div class=\"pip-header\"><h3 class=\"m0\">{{::\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}</h3></div><div class=\"pip-body\"><div class=\"pip-content\"><div class=\"text-error bm8\" ng-messages=\"form.$serverError\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label> <input name=\"oldPassword\" type=\"password\" ng-model=\"changePasData.old_password\" ng-required=\"change_password.$submitted\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.oldPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"ERROR_1107\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{\\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label> <input name=\"newPassword\" type=\"password\" ng-model=\"changePasData.new_password\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\" pip-clear-errors=\"\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.newPassword).hint\">{{ \\'HINT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsWithHint(form, form.newPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"ERROR_1105\">{{::\\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label> <input name=\"repeat\" type=\"password\" ng-model=\"repeat\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\"><div class=\"hint\" ng-if=\"errorsRepeatWithHint(form.repeat).hint\">{{::\\'HINT_REPEAT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsRepeatWithHint(form.repeat)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"repeat\">{{::\\'REPEAT_PASSWORD_INVALID\\' | translate }}</div></div></md-input-container></div></div><div class=\"pip-footer\"><div><md-button aria-label=\"xxx\" ng-click=\"onCancel()\">{{::\\'CANCEL\\' | translate }}</md-button><md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">{{::\\'APPLY\\' | translate : module}}</md-button></div></div></form></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '<md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><div class=\"pip-details-title pip-sessions\"><p class=\"pip-title bm16\">{{::\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}</p><p class=\"pip-subtitle\">{{::\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}</p></div><md-list class=\"w-stretch\"><div ng-repeat=\"session in sessions\"><div class=\"layout-row\" ng-init=\"showBlock = session.id != sessionId\" ng-click=\"showBlock = !showBlock\"><p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">{{::session.client}}</p><p class=\"m0 lp4 text-body1 color-secondary-text flex\">{{::\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}}</p><p class=\"m0 text-body1 color-secondary-text\">{{::country}}<md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon><md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon></p></div><div class=\"layout-row bm8 bp8\" ng-class=\"{\\'divider-bottom\\':!$last}\"><div class=\"flex-50\"><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\">{{session.last_req | date : \\'medium\\'}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{::session.platform}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{::session.address}}</p><md-button class=\"md-raised\" ng-show=\"showBlock && session.id != sessionId\" ng-click=\"onRemove(session)\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}</md-button></div><pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\" pip-ipaddress=\"session.address\" pip-extra-info=\"country = extraInfo.country\"></pip-location-ip></div></div></md-list><div class=\"layout-row layout-align-end-center\"><md-button class=\"md-raised\" ng-show=\"sessions.length > 1\" ng-click=\"onRemoveAll()\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2>{{::\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{::\\'VERIFY_EMAIL_TEXT_1\\' | translate}}</p><form name=\"form\" novalidate=\"\"><div ng-messages=\"form.$serverError\" class=\"text-error bm8\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"display bp4 md-block\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" ng-model=\"data.email\" required=\"\" step=\"any\" pip-clear-errors=\"\" tabindex=\"1\" ng-disabled=\"transaction.busy()\" pip-test=\"input-email\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"errorsWithHint(form, form.email)\" xng-if=\"!form.email.$pristine\"><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label> <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\" ng-model=\"data.code\" required=\"\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.code)\"><div ng-message=\"required\">{{::\\'ERROR_CODE_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1103\">{{::\\'ERROR_CODE_WRONG\\' | translate }}</div></div></md-input-container><p>{{::\\'VERIFY_EMAIL_TEXT_21\\' | translate}} <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::\\'VERIFY_EMAIL_RESEND\\' | translate}}</a> {{::\\'VERIFY_EMAIL_TEXT_22\\' | translate}}</p></form></div></div><div class=\"pip-footer\"><md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\" ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">{{::\\'VERIFY\\' | translate}}</md-button><md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"]}
=======
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","src/user_settings/user_settings.ts","src/user_settings/user_settings_basic_info.ts","src/user_settings/user_settings_change_password.ts","src/user_settings/user_settings_sessions.ts","src/user_settings/user_settings_strings.ts","src/user_settings/user_settings_verify_email.ts","temp/pip-webui-settings-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","settings","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","SettingsPageController","$log","$q","$state","pipNavService","pipSettings","$rootScope","$timeout","_log","_q","_state","tabs","_","filter","getTabs","tab","visible","access","$user","sortBy","selected","current","name","initSelect","getDefaultTab","state","icon","showMenu","breadcrumb","text","actions","hide","appbar","removeShadow","$inject","prototype","find","tabIndex","indexOf","tabId","onDropdownSelect","onNavigationSelect","go","controller","4","configureSettingsPageRoutes","$stateProvider","url","auth","controllerAs","templateUrl","config","5","7","SettingsTab","SettingsConfig","titleText","titleLogo","isNavIcon","SettingsService","_rootScope","_config","defaultTab","p","cloneDeep","showTitleText","newTitleText","showTitleLogo","newTitleLogo","showNavIcon","value","undefined","SettingsProvider","_stateProvider","getFullStateName","addTab","tabObj","existingTab","validateTab","push","title","index","stateConfig","setDefaultTab","isObject","isFunction","$get","_service","provider","9","pipSettingsProvider","$scope","$mdDialog","$window","$mdTheming","pipTranslate","pipTransaction","pipTheme","pipToasts","pipDataUser","pipDataParty","pipFormErrors","onPictureChanged","picture","save","$broadcast","error","onPictureCreated","$event","sender","saveChanges","form","$setSubmitted","$party","type","$invalid","loc_pos","party","toJson","err","originalParty","tid","transaction","begin","updateParty","data","aborted","end","nameCopy","message","String","status","status_code","fromJson","id","updateUser","item","use","language","theme","setCurrentTheme","showNotification","translate","onChangePassword","event","show","email","answer","onVerifyEmail","targetEvent","user","email_ver","genders","translateSet","languages","themes","keys","omit","THEMES","get","onExit","errorsWithHint","debounce","onChangeBasicInfo","11","onCancel","cancel","repeat","changePasData","new_password","showRepeatHint","$setValidity","onApply","onCheckRepeatPassword","changePassword","setFormError","1107","1105","errorsRepeatWithHint","formPart","thisModule","pipDataSessionProvider","resolve","sessions","readSessionsResolver","sessionId","readSessionIdResolver","pipDataSession","eachSeries","session","callback","removeSession","without","onRemove","onRemoveAll","13","pipTranslateProvider","translations","SETTINGS_TITLE","SETTINGS_BASIC_INFO_TITLE","SETTINGS_ACTIVE_SESSIONS_TITLE","SETTINGS_BASIC_INFO_FULL_NAME","SETTINGS_BASIC_INFO_VERIFY_HINT","SETTINGS_BASIC_INFO_VERIFY_CODE","SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_NAME_HINT","SETTINGS_BASIC_INFO_WORDS_ABOUT_ME","SETTINGS_BASIC_INFO_GENDER","SETTINGS_BASIC_INFO_BIRTHDAY","SETTINGS_BASIC_INFO_LOCATION","SETTINGS_BASIC_INFO_PRIMARY_EMAIL","SETTINGS_BASIC_INFO_FROM","SETTINGS_BASIC_INFO_USER_ID","SETTINGS_CHANGE_PASSWORD_TITLE","SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD","SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD","SETTINGS_ACTIVE_SESSIONS_SUBTITLE","SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION","SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS","SETTINGS_ACTIVE_SESSION_OS","SETTINGS_ACTIVE_SESSION_ACTIVE","SETTINGS_BLACKLIST_TITLE","SETTINGS_BLACKLIST_SUBTITLE","SETTINGS_BLACKLIST_UNBLOCK","SETTINGS_BLACKLIST_EMPTY","SETTINGS_CONTACT_INFO_TITLE","SETTINGS_CONTACT_INFO_EMAIL","SETTINGS_CONTACT_INFO_ADD_EMAIL","SETTINGS_CONTACT_INFO_ADD_PHONE","SETTINGS_CONTACT_INFO_ADD_ADDRESS","SETTINGS_CONTACT_INFO_ADD_ACCOUNT","SETTINGS_CONTACT_INFO_ADD_URL","SETTINGS_CONTACT_INFO_ADDRESS","SETTINGS_CONTACT_INFO_PHONE","SETTINGS_CONTACT_INFO_ACCOUNT_NAME","SETTINGS_CONTACT_INFO_URL","THEME","HINT_PASSWORD","HINT_REPEAT_PASSWORD","ERROR_WRONG_PASSWORD","ERROR_IDENTICAL_PASSWORDS","REPEAT_PASSWORD_INVALID","ERROR_EMAIL_INVALID","14","onAbort","abort","requestEmailVerification","result","onVerify","verifyEmail","verifyData","1106","1103","emailVerified","onRequestVerificationClick","15","run","$templateCache","put"],"mappings":"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","file":"pip-webui-settings.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nimport './settings_service/index';\r\nimport './settings_page/index';\r\n\r\nangular.module('pipSettings', [\r\n    'pipSettings.Service',\r\n    'pipSettings.Page'\r\n]);\r\n\r\nexport * from './settings_service';\r\nexport * from './settings_page';","﻿/**\r\n * @file Registration of settings components\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipSettings', [\r\n        'pipSettings.Service',\r\n        'pipSettings.Page'\r\n    ]);\r\n\r\n})();\r\n","// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\nclass SettingsPageController {\r\n    private _log: ng.ILogService;\r\n    private _q: ng.IQService;\r\n    private _state: ng.ui.IStateService;\r\n\r\n    public tabs: any;\r\n    public selected: any;\r\n\r\n    constructor(\r\n        $log: ng.ILogService,\r\n        $q: ng.IQService,\r\n        $state: ng.ui.IStateService,\r\n        pipNavService,\r\n        pipSettings,\r\n        $rootScope, \r\n        $timeout\r\n    ) {\r\n        this._log = $log;\r\n        this._q = $q;\r\n        this._state = $state;\r\n\r\n        this.tabs = _.filter(pipSettings.getTabs(), function (tab: any) {\r\n                if (tab.visible === true && (tab.access ? tab.access($rootScope.$user, tab) : true)) {\r\n                    return tab;\r\n                }\r\n            });\r\n\r\n        this.tabs = _.sortBy(this.tabs, 'index');\r\n\r\n        this.selected = {};\r\n        if (this._state.current.name !== 'settings') {\r\n            this.initSelect(this._state.current.name);\r\n        } else if (this._state.current.name === 'settings' && pipSettings.getDefaultTab()) {\r\n            this.initSelect(pipSettings.getDefaultTab().state);\r\n        } else {\r\n            $timeout(function () {\r\n                if (pipSettings.getDefaultTab()) {\r\n                    this.initSelect(pipSettings.getDefaultTab().state);\r\n                }\r\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\r\n                     this.initSelect(this.tabs[0].state);\r\n                }\r\n            });\r\n        }\r\n\r\n        pipNavService.icon.showMenu();\r\n        pipNavService.breadcrumb.text = \"Settings\";\r\n        pipNavService.actions.hide();\r\n        pipNavService.appbar.removeShadow();\r\n\r\n    }\r\n\r\n    private initSelect(state: string) {\r\n        this.selected.tab = _.find(this.tabs, function (tab: any) {\r\n                    return tab.state === state;\r\n                });\r\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\r\n        this.selected.tabId = state;\r\n    }\r\n\r\n    public onDropdownSelect(state) {\r\n        this.onNavigationSelect(state.state);\r\n    }\r\n\r\n    public onNavigationSelect(state: string) {\r\n        this.initSelect(state);\r\n\r\n        if (this.selected.tab) {\r\n            this._state.go(state);\r\n            }\r\n        }\r\n}\r\n\r\nangular.module('pipSettings.Page')\r\n    .controller('pipSettingsPageController', SettingsPageController);\r\n})();","'use strict';\r\n\r\nfunction configureSettingsPageRoutes($stateProvider) {\r\n    $stateProvider\r\n        .state('settings', {\r\n            url: '/settings?party_id',\r\n            auth: true,\r\n            controllerAs: 'vm',\r\n            controller: 'pipSettingsPageController',\r\n            templateUrl: 'settings_page/SettingsPage.html'\r\n        });\r\n       \r\n}\r\n\r\nangular.module('pipSettings.Page')\r\n    .config(configureSettingsPageRoutes);\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Page', [\r\n    'ui.router', \r\n    'pipSettings.Service',\r\n    'pipNav', \r\n    'pipSelected',\r\n    'pipTranslate',\r\n    'pipSettings.Templates'\r\n    ]);\r\n\r\n\r\nimport './SettingsPageController';\r\nimport './SettingsPageRoutes';","'use strict';\r\n\r\nexport class SettingsTab {\r\n    public state: string;\r\n    public title: string;\r\n    public index: string;\r\n    public access: boolean;\r\n    public visible: boolean;\r\n    public stateConfig: any;\r\n}\r\n\r\nexport interface ISettingsService {\r\n    getDefaultTab();\r\n    showTitleText (newTitleText);\r\n    showTitleLogo(newTitleLogo);\r\n    showNavIcon(value);\r\n    getTabs();\r\n}\r\n\r\nexport interface ISettingsProvider extends ng.IServiceProvider {\r\n    getDefaultTab();\r\n    addTab(tabObj);\r\n}\r\n\r\nexport class SettingsConfig {\r\n\r\n    public defaultTab: string;\r\n    public tabs: SettingsTab[] = [];\r\n    public titleText: string = 'SETTINGS_TITLE';\r\n    public titleLogo: boolean = null;\r\n    public isNavIcon: boolean = true;\r\n\r\n}\r\n\r\nclass SettingsService implements ISettingsService {\r\n    private _config: SettingsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor($rootScope: ng.IRootScopeService, \r\n                       config: SettingsConfig) {\r\n        \"ngInject\";\r\n        this._rootScope = $rootScope;\r\n        this._config = config;\r\n    }\r\n\r\n    public getDefaultTab() {\r\n        var defaultTab;\r\n        defaultTab = _.find(this._config.tabs, function (p) {\r\n            return p.state === defaultTab;\r\n        });\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public showTitleText (newTitleText: string) {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean) {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n    public getTabs() {\r\n        return _.cloneDeep(this._config.tabs);\r\n    }\r\n\r\n}\r\n\r\nclass SettingsProvider implements ISettingsProvider {\r\n    private _service: SettingsService;\r\n    private _config: SettingsConfig = new SettingsConfig();\r\n    private _stateProvider: ng.ui.IStateProvider;\r\n\r\n    constructor($stateProvider: ng.ui.IStateProvider) {\r\n        this._stateProvider = $stateProvider;\r\n    }\r\n\r\n    public getFullStateName(state): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        var defaultTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, function (p) {\r\n            return p.state === defaultTab;\r\n        });\r\n\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public addTab(tabObj) {\r\n        var existingTab: SettingsTab;\r\n\r\n        this.validateTab(tabObj);\r\n        existingTab = _.find(this._config.tabs, function (p) {\r\n            return p.state === 'settings.' + tabObj.state;\r\n        });\r\n        if (existingTab) {\r\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\r\n        }\r\n\r\n        this._config.tabs.push({\r\n            state: this.getFullStateName(tabObj.state),\r\n            title: tabObj.title,\r\n            index: tabObj.index || 100000,\r\n            access: tabObj.access,\r\n            visible: tabObj.visible !== false,\r\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\r\n        });\r\n        this._stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\r\n\r\n        // if we just added first state and no default state is specified\r\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\r\n            this.setDefaultTab(tabObj.state);\r\n        }\r\n    }\r\n\r\n    public setDefaultTab(name: string) {\r\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\r\n        if (!_.find(this._config.tabs, function (tab) {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n        //this._stateProvider.go(this._config.defaultTab);\r\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n    }\r\n\r\n    /**\r\n     * Validates passed tab config object\r\n     * If passed tab is not valid it will throw an error\r\n     */\r\n\r\n    private validateTab(tabObj: SettingsTab) {\r\n        if (!tabObj || !_.isObject(tabObj)) {\r\n            throw new Error('Invalid object');\r\n        }\r\n\r\n        if (tabObj.state === null || tabObj.state === '') {\r\n            throw new Error('Tab should have valid Angular UI router state name');\r\n        }\r\n\r\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\r\n            throw new Error('\"access\" should be a function');\r\n        }\r\n\r\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\r\n            throw new Error('Invalid state configuration object');\r\n        }\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value) {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public $get($rootScope, $state) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SettingsService($rootScope, this._config);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipSettings.Service')\r\n    .provider('pipSettings', SettingsProvider);\r\n\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Service', []);\r\n\r\nimport './SettingsService';","/**\r\n * @file Settings tab logic\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipUserSettings', [\r\n        'ngMaterial', 'pipData',\r\n        'pipSettings.Service',\r\n        'pipSettings.Page',\r\n\r\n        'pipUserSettings.Strings',\r\n        'pipUserSettings.Sessions',\r\n        'pipUserSettings.BasicInfo',\r\n        'pipSettings.Templates'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * @file Settings basic info controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\r\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail', \r\n            'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'basic_info',\r\n            index: 1,\r\n            title: 'SETTINGS_BASIC_INFO_TITLE',\r\n            stateConfig: {\r\n                url: '/basic_info',\r\n                controller: 'pipUserSettingsBasicInfoController',\r\n                templateUrl: 'user_settings/user_settings_basic_info.html',\r\n                auth: true\r\n            }\r\n        });\r\n\r\n        pipSettingsProvider.setDefaultTab('basic_info');\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n     *\r\n     * @description\r\n     * Controller for the predefined 'basic_info' state.\r\n     * Provides sync changes user's profile with remote profile.\r\n     * On state exit everything is saved on the server.\r\n     */\r\n    thisModule.controller('pipUserSettingsBasicInfoController',\r\n        function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\r\n                  pipTranslate, pipTransaction, pipTheme,\r\n                  pipToasts, pipDataUser, pipDataParty, pipFormErrors) {\r\n\r\n            try {\r\n                $scope.originalParty = angular.toJson($rootScope.$party);\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n\r\n            $scope.nameCopy = $rootScope.$party.name;\r\n\r\n            $timeout(function () {\r\n                $scope.loc_pos = $rootScope.$party.loc_pos;\r\n            });\r\n\r\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\r\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\r\n\r\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\r\n\r\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\r\n\r\n            $state.get('settings.basic_info').onExit = saveChanges;\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onChangePassword */\r\n            $scope.onChangePassword = onChangePassword;\r\n            /** @see onVerifyEmail */\r\n            $scope.onVerifyEmail = onVerifyEmail;\r\n            /** @see onPictureCreated */\r\n            $scope.onPictureCreated = onPictureCreated;\r\n            /** @see onPictureChanged */\r\n            $scope.onPictureChanged = onPictureChanged;\r\n            /** @see updateUser */\r\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\r\n            /** @see saveChanges */\r\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\r\n\r\n            function onPictureChanged() {\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            function onPictureCreated($event) {\r\n                $scope.picture = $event.sender;\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeBasicInfo\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the input information.\r\n             * It is updated user's party profile. Also it updates user's profile in $rootScope.\r\n             */\r\n            function saveChanges() {\r\n                if ($scope.form) {\r\n                    $scope.form.$setSubmitted();\r\n                }\r\n\r\n                if ($rootScope.$party) {\r\n\r\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\r\n                        return;\r\n                    }\r\n\r\n                    // Check to avoid unnecessary savings\r\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\r\n                    try {\r\n                        var party = angular.toJson($rootScope.$party);\r\n                    } catch (err) {\r\n                        throw err;\r\n                    }\r\n\r\n                    if (party !== $scope.originalParty) {\r\n                        var tid = $scope.transaction.begin('UPDATING');\r\n\r\n                        pipDataParty.updateParty($rootScope.$party,\r\n                            function (data) {\r\n                                if ($scope.transaction.aborted(tid)) {\r\n                                    return;\r\n                                }\r\n                                $scope.transaction.end();\r\n\r\n                                $scope.originalParty = party;\r\n                                $scope.nameCopy = data.name;\r\n                            }, function (error) {\r\n                                $scope.transaction.end(error);\r\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeUser\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the user's profile information.\r\n             * Also it updates user's profile in $rootScope.\r\n             */\r\n            function updateUser() {\r\n                var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                if ($rootScope.$user.id === $rootScope.$party.id) {\r\n                    pipDataUser.updateUser(\r\n                        {\r\n                            item: $rootScope.$user\r\n                        },\r\n                        function (data) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                            pipTranslate.use(data.language);\r\n                            $rootScope.$user.language = data.language;\r\n                            $rootScope.$user.theme = data.theme;\r\n                            if ($rootScope.$user.theme) {\r\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\r\n                            }\r\n\r\n                        }, function (error) {\r\n                            var message;\r\n                            \r\n                            $scope.transaction.end(error);\r\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangePassword\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onChangePassword(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_change_password.html',\r\n                    controller: 'pipUserSettingsChangePasswordController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        if (answer) {\r\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onVerifyEmail\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onVerifyEmail(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\r\n                    controller: 'pipUserSettingsVerifyEmailController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        $scope.user.email_ver = answer;\r\n                        if (answer) {\r\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings change password controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n     *\r\n     * @description\r\n     * Controller for dialog panel of password change.\r\n     */\r\n    thisModule.controller('pipUserSettingsChangePasswordController',\r\n        function ($scope, $rootScope, $mdDialog, email, pipDataUser, pipTransaction, pipFormErrors) {\r\n\r\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\r\n            $scope.errorsRepeatWithHint = function (form, formPart) {\r\n                if ($scope.showRepeatHint) {\r\n                    return pipFormErrors.errorsWithHint(form, formPart);\r\n                }\r\n\r\n                return {};\r\n            };\r\n            $scope.showRepeatHint = true;\r\n            $scope.changePasData = {};\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onCancel = onCancel;\r\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\r\n            $scope.onApply = onApply;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCheckRepeatPassword\r\n             *\r\n             * @description\r\n             * Validates a password typed into password fields.\r\n             */\r\n            function onCheckRepeatPassword() {\r\n                if ($scope.changePasData) {\r\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\r\n                        $scope.form.repeat.$setValidity('repeat', true);\r\n                        if ($scope.repeat === $scope.changePasData.new_password) {\r\n                            $scope.showRepeatHint = false;\r\n                        } else {\r\n                            $scope.showRepeatHint = true;\r\n                        }\r\n                    } else {\r\n                        $scope.showRepeatHint = true;\r\n                        $scope.form.repeat.$setValidity('repeat', false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onApply\r\n             *\r\n             * @description\r\n             * Approves password change and sends request to the server on password change.\r\n             */\r\n            function onApply() {\r\n                $scope.onCheckRepeatPassword();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\r\n                    return;\r\n                }\r\n\r\n                $scope.changePasData.email = email;\r\n\r\n                pipDataUser.changePassword(\r\n                    $scope.changePasData,\r\n                    function () {\r\n                        $scope.transaction.end();\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1107: 'oldPassword',\r\n                                1105: 'newPassword'\r\n                            }\r\n                        );\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings sessions controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Sessions', [\r\n        'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider, pipDataSessionProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'sessions',\r\n            index: 3,\r\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\r\n            stateConfig: {\r\n                url: '/sessions',\r\n                controller: 'pipUserSettingsSessionsController',\r\n                templateUrl: 'user_settings/user_settings_sessions.html',\r\n                auth: true,\r\n                resolve: {\r\n                    sessions: pipDataSessionProvider.readSessionsResolver,\r\n                    sessionId: pipDataSessionProvider.readSessionIdResolver\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n     *\r\n     * @description\r\n     * Controller provides an interface for managing active sessions.\r\n     */\r\n    thisModule.controller('pipUserSettingsSessionsController',\r\n        function ($scope, pipTransaction, pipDataSession, sessions, sessionId) {\r\n\r\n            $scope.sessionId = sessionId;\r\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\r\n            $scope.sessions = sessions;\r\n\r\n            $scope.onRemoveAll = onRemoveAll;\r\n            $scope.onRemove = onRemove;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemoveAll\r\n             *\r\n             * @description\r\n             * Closes all active session.\r\n             */\r\n            function onRemoveAll() {\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n\r\n                async.eachSeries(\r\n                    $scope.sessions,\r\n                    function (session: any, callback) {\r\n                        if (session.id == $scope.sessionId) {\r\n                            callback();\r\n                        } else {\r\n                            pipDataSession.removeSession(\r\n                                {\r\n                                    session: session\r\n                                },\r\n                                function () {\r\n                                    $scope.sessions = _.without($scope.sessions, session);\r\n                                    callback();\r\n                                },\r\n                                function (error) {\r\n                                    callback;\r\n                                }\r\n                            );\r\n                        }\r\n                    },\r\n                    function (err) {\r\n                        if (err) {\r\n                            $scope.transaction.end(err);\r\n                        }\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n                    });                \r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemove\r\n             *\r\n             * @description\r\n             * Closes passed session.\r\n             *\r\n             * @param {Object} session  Session configuration object\r\n             */\r\n            function onRemove(session, callback) {\r\n                if (session.id === $scope.sessionId) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n                pipDataSession.removeSession(\r\n                    {\r\n                        session: session\r\n                    },\r\n                    function () {\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n\r\n                        $scope.sessions = _.without($scope.sessions, session);\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* eslint-disable quote-props */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\r\n\r\n    thisModule.config(function (pipTranslateProvider) {\r\n\r\n        // Set translation strings for the module\r\n        pipTranslateProvider.translations('en', {\r\n            'SETTINGS_TITLE': 'Settings',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\r\n\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\r\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\r\n            '\"Close Session\" to end the session.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\r\n            'private messages.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\r\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\r\n\r\n            'THEME': 'Theme',\r\n\r\n            'HINT_PASSWORD': 'Minimum 6 characters',\r\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\r\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\r\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'SETTINGS_TITLE': 'Настройки',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\r\n\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\r\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\r\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\r\n            ' посылать вам приглашения и личные сообщения.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\r\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\r\n\r\n            'THEME': 'Тема',\r\n\r\n            'HINT_PASSWORD': 'Минимум 6 знаков',\r\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\r\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\r\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\r\n        });\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Settings verify email controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n     *\r\n     * @description\r\n     * Controller for verify email dialog panel.\r\n     */\r\n    thisModule.controller('pipUserSettingsVerifyEmailController',\r\n        function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipDataUser, email) {\r\n\r\n            $scope.emailVerified = false;\r\n            $scope.data = {\r\n                email: email,\r\n                code: ''\r\n            };\r\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\r\n\r\n            /** @see onAbort */\r\n            $scope.onAbort = onAbort;\r\n            /** @see onRequestVerificationClick*/\r\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onVerify */\r\n            $scope.onVerify = onVerify;\r\n            /** @see onCancel */\r\n            $scope.onCancel = onCancel;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onAbort\r\n             *\r\n             * @description\r\n             * Aborts a verify request.\r\n             */\r\n            function onAbort() {\r\n                $scope.transaction.abort();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onRequestVerificationClick\r\n             *\r\n             * @description\r\n             * Sends request to verify entered email.\r\n             */\r\n            function onRequestVerificationClick() {\r\n                    var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                pipDataUser.requestEmailVerification(\r\n                    {},                         \r\n                    function (result) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n                        }, \r\n                        function (error) {\r\n                            $scope.transaction.end(error);\r\n                        }\r\n                    );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onVerify\r\n             *\r\n             * @description\r\n             * Initiates request on verify email on the server.\r\n             */\r\n            function onVerify() {\r\n                $scope.form.$setSubmitted();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('Verifying');\r\n\r\n                pipDataUser.verifyEmail(\r\n                    {\r\n                        email: $scope.data.email,\r\n                        code: $scope.data.code\r\n                    }, \r\n                    function (verifyData) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1106: 'email',\r\n                                1103: 'code'\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"onDropdownSelect\" pip-active-index=\"selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" class=\"w-stretch\" novalidate=\"\"><md-progress-linear class=\"pip-progress-top\" ng-show=\"transaction.busy()\" md-mode=\"indeterminate\"></md-progress-linear><div class=\"layout-row bm12\"><div class=\"md-tile-left\"><pip-avatar-edit pip-party-id=\"$party.id\" pip-created=\"onPictureCreated($event)\" pip-changed=\"onPictureChanged($control, $event)\"></pip-avatar-edit></div><div class=\"md-tile-content tp0 layout-align-center\"><h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3><p class=\"text-primary text-overflow m0\">{{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}} {{$user.signup | formatLongDate }}</p></div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label> <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required=\"\" ng-model=\"$party.name\" ng-disabled=\"transaction.busy()\" ng-change=\"onChangeBasicInfo()\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.fullName).hint\">{{::\\'ERROR_FULLNAME_INVALID\\' | translate}}</div></md-input-container><md-input-container class=\"md-block bm0\"><label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" required=\"\" ng-model=\"$party.email\" ng-change=\"onChangeBasicInfo()\" pip-email-unique=\"{{$party.email}}\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' | translate}}</div><div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\"$party.type ==\\'team\\'\"><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div><div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div></div></md-input-container><md-button class=\"md-raised bm16 tm8 rm8\" ng-click=\"onVerifyEmail($event)\" ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}</md-button><md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}</md-button><md-input-container class=\"md-block flex\"><label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label> <textarea ng-model=\"$party.about\" columns=\"1\" ng-change=\"onChangeBasicInfo()\"></textarea></md-input-container><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'GENDER\\' | translate}}</label><md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\" placeholder=\"{{\\'GENDER\\' | translate}}\"><md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option></md-select></md-input-container><div ng-hide=\"$party.type ==\\'team\\'\"><p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p><pip-date ng-model=\"$party.birthday\" ng-change=\"onChangeBasicInfo()\" pip-time-mode=\"past time-mode=\" past\"=\"\"></pip-date></div><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'LANGUAGE\\' | translate}}</label><md-select placeholder=\"{{\\'LANGUAGE\\' | translate}}\" ng-model=\"$user.language\" ng-change=\"onChangeUser()\"><md-option ng-value=\"language.id\" ng-repeat=\"language in languages\">{{language.name}}</md-option></md-select></md-input-container><md-input-container class=\"md-block\" ng-if=\"$party.type !=\\'team\\'\"><label>{{::\\'THEME\\' | translate}}</label><md-select class=\"w-stretch theme-text-primary\" ng-model=\"$user.theme\" ng-change=\"onChangeUser()\" ng-disabled=\"transaction.busy()\"><md-option ng-value=\"theme\" ng-repeat=\"theme in themes\" ng-selected=\"$theme == theme ? true : false\">{{ theme | translate }}</md-option></md-select></md-input-container><pip-location-edit class=\"map-edit bm24-flex\" ng-hide=\"$party.type ==\\'team\\'\" pip-changed=\"onChangeBasicInfo()\" pip-location-name=\"$party.loc_name\" pip-location-pos=\"loc_pos\"></pip-location-edit></form>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><form name=\"form\" ng-submit=\"onApply()\"><div class=\"pip-header\"><h3 class=\"m0\">{{::\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}</h3></div><div class=\"pip-body\"><div class=\"pip-content\"><div class=\"text-error bm8\" ng-messages=\"form.$serverError\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label> <input name=\"oldPassword\" type=\"password\" ng-model=\"changePasData.old_password\" ng-required=\"change_password.$submitted\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.oldPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"ERROR_1107\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{\\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label> <input name=\"newPassword\" type=\"password\" ng-model=\"changePasData.new_password\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\" pip-clear-errors=\"\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.newPassword).hint\">{{ \\'HINT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsWithHint(form, form.newPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"ERROR_1105\">{{::\\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label> <input name=\"repeat\" type=\"password\" ng-model=\"repeat\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\"><div class=\"hint\" ng-if=\"errorsRepeatWithHint(form.repeat).hint\">{{::\\'HINT_REPEAT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsRepeatWithHint(form.repeat)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"repeat\">{{::\\'REPEAT_PASSWORD_INVALID\\' | translate }}</div></div></md-input-container></div></div><div class=\"pip-footer\"><div><md-button aria-label=\"xxx\" ng-click=\"onCancel()\">{{::\\'CANCEL\\' | translate }}</md-button><md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">{{::\\'APPLY\\' | translate : module}}</md-button></div></div></form></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '<md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><div class=\"pip-details-title pip-sessions\"><p class=\"pip-title bm16\">{{::\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}</p><p class=\"pip-subtitle\">{{::\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}</p></div><md-list class=\"w-stretch\"><div ng-repeat=\"session in sessions\"><div class=\"layout-row\" ng-init=\"showBlock = session.id != sessionId\" ng-click=\"showBlock = !showBlock\"><p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">{{::session.client}}</p><p class=\"m0 lp4 text-body1 color-secondary-text flex\">{{::\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}}</p><p class=\"m0 text-body1 color-secondary-text\">{{::country}}<md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon><md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon></p></div><div class=\"layout-row bm8 bp8\" ng-class=\"{\\'divider-bottom\\':!$last}\"><div class=\"flex-50\"><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\">{{session.last_req | date : \\'medium\\'}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{::session.platform}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{::session.address}}</p><md-button class=\"md-raised\" ng-show=\"showBlock && session.id != sessionId\" ng-click=\"onRemove(session)\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}</md-button></div><pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\" pip-ipaddress=\"session.address\" pip-extra-info=\"country = extraInfo.country\"></pip-location-ip></div></div></md-list><div class=\"layout-row layout-align-end-center\"><md-button class=\"md-raised\" ng-show=\"sessions.length > 1\" ng-click=\"onRemoveAll()\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2>{{::\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{::\\'VERIFY_EMAIL_TEXT_1\\' | translate}}</p><form name=\"form\" novalidate=\"\"><div ng-messages=\"form.$serverError\" class=\"text-error bm8\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"display bp4 md-block\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" ng-model=\"data.email\" required=\"\" step=\"any\" pip-clear-errors=\"\" tabindex=\"1\" ng-disabled=\"transaction.busy()\" pip-test=\"input-email\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"errorsWithHint(form, form.email)\" xng-if=\"!form.email.$pristine\"><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label> <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\" ng-model=\"data.code\" required=\"\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.code)\"><div ng-message=\"required\">{{::\\'ERROR_CODE_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1103\">{{::\\'ERROR_CODE_WRONG\\' | translate }}</div></div></md-input-container><p>{{::\\'VERIFY_EMAIL_TEXT_21\\' | translate}} <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::\\'VERIFY_EMAIL_RESEND\\' | translate}}</a> {{::\\'VERIFY_EMAIL_TEXT_22\\' | translate}}</p></form></div></div><div class=\"pip-footer\"><md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\" ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">{{::\\'VERIFY\\' | translate}}</md-button><md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"]}
>>>>>>> e27a5d8ac4d9d6a08584c29598143a0fe114a9f2
