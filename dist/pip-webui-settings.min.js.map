{"version":3,"sources":["settings_page/settings_page.html","user_settings/user_settings_basic_info.html","user_settings/user_settings_change_password.html","user_settings/user_settings_sessions.html","user_settings/user_settings_verify_email.html","settings.ts","settings_service/settings_service.ts","settings_page/settings_page.ts","user_settings/user_settings.ts","user_settings/user_settings_basic_info.ts","user_settings/user_settings_change_password.ts","user_settings/user_settings_sessions.ts","user_settings/user_settings_strings.ts","user_settings/user_settings_verify_email.ts"],"names":["module","angular","e","run","$templateCache","put","thisModule","provider","$stateProvider","getFullStateName","state","getTabs","_","cloneDeep","tabs","getDefaultTab","defaultTab","find","p","addTab","tabObj","existingTab","validateTab","Error","push","title","index","access","visible","stateConfig","length","setDefaultTab","name","tab","isObject","isFunction","showTitleText","newTitleText","titleText","titleLogo","showTitleLogo","newTitleLogo","showNavIcon","value","undefined","isNavIcon","this","$get","config","url","auth","controller","templateUrl","$scope","$state","$rootScope","$timeout","pipAppBar","pipSettings","pipActions","pipBreadcrumb","pipNavIcon","appHeader","hide","part","hideShadow","text","menu","onDropdownSelect","onNavigationSelect","initSelect","selected","go","tabIndex","indexOf","tabId","filter","$user","sortBy","current","pipSettingsProvider","$mdDialog","$window","$mdTheming","pipTranslate","pipTransaction","pipTheme","pipToasts","pipDataUser","pipDataParty","pipFormErrors","onPictureChanged","picture","save","$broadcast","error","onPictureCreated","$event","sender","saveChanges","form","$setSubmitted","$party","type","$invalid","loc_pos","party","toJson","err","originalParty","tid","transaction","begin","updateParty","data","aborted","end","nameCopy","message","String","status","status_code","fromJson","updateUser","id","item","use","language","theme","setCurrentTheme","showNotification","translate","onChangePassword","event","show","targetEvent","locals","email","then","answer","onVerifyEmail","user","email_ver","genders","translateSet","languages","themes","keys","omit","THEMES","get","onExit","errorsWithHint","onChangeUser","debounce","onChangeBasicInfo","onCancel","cancel","onCheckRepeatPassword","changePasData","repeat","new_password","showRepeatHint","$setValidity","onApply","changePassword","setFormError","1107","1105","errorsRepeatWithHint","formPart","pipDataSessionProvider","resolve","sessions","readSessionsResolver","sessionId","readSessionIdResolver","pipDataSession","onRemoveAll","async","eachSeries","session","callback","removeSession","without","onRemove","pipTranslateProvider","translations","SETTINGS_TITLE","SETTINGS_BASIC_INFO_TITLE","SETTINGS_ACTIVE_SESSIONS_TITLE","SETTINGS_BASIC_INFO_FULL_NAME","SETTINGS_BASIC_INFO_VERIFY_HINT","SETTINGS_BASIC_INFO_VERIFY_CODE","SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_NAME_HINT","SETTINGS_BASIC_INFO_WORDS_ABOUT_ME","SETTINGS_BASIC_INFO_GENDER","SETTINGS_BASIC_INFO_BIRTHDAY","SETTINGS_BASIC_INFO_LOCATION","SETTINGS_BASIC_INFO_PRIMARY_EMAIL","SETTINGS_BASIC_INFO_FROM","SETTINGS_BASIC_INFO_USER_ID","SETTINGS_CHANGE_PASSWORD_TITLE","SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD","SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD","SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD","SETTINGS_ACTIVE_SESSIONS_SUBTITLE","SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION","SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS","SETTINGS_ACTIVE_SESSION_OS","SETTINGS_ACTIVE_SESSION_IP","SETTINGS_ACTIVE_SESSION_ACTIVE","SETTINGS_BLACKLIST_TITLE","SETTINGS_BLACKLIST_SUBTITLE","SETTINGS_BLACKLIST_UNBLOCK","SETTINGS_BLACKLIST_EMPTY","SETTINGS_CONTACT_INFO_TITLE","SETTINGS_CONTACT_INFO_EMAIL","SETTINGS_CONTACT_INFO_ADD_EMAIL","SETTINGS_CONTACT_INFO_ADD_PHONE","SETTINGS_CONTACT_INFO_ADD_ADDRESS","SETTINGS_CONTACT_INFO_ADD_ACCOUNT","SETTINGS_CONTACT_INFO_ADD_URL","SETTINGS_CONTACT_INFO_ADDRESS","SETTINGS_CONTACT_INFO_PHONE","SETTINGS_CONTACT_INFO_ACCOUNT_NAME","SETTINGS_CONTACT_INFO_URL","THEME","HINT_PASSWORD","HINT_REPEAT_PASSWORD","ERROR_WRONG_PASSWORD","ERROR_IDENTICAL_PASSWORDS","REPEAT_PASSWORD_INVALID","ERROR_EMAIL_INVALID","onAbort","abort","onRequestVerificationClick","requestEmailVerification","result","onVerify","verifyEmail","code","verifyData","1106","1103","emailVerified"],"mappings":"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","file":"pip-webui-settings.min.js","sourcesContent":["<md-toolbar class=\"pip-appbar-ext\"></md-toolbar>\r\n<pip-document width=\"800\" min-height=\"400\"\r\n              class=\"pip-settings\">\r\n\r\n    <div class=\"pip-menu-container\"\r\n         ng-hide=\"manager === false || !tabs || tabs.length < 1\">\r\n        <md-list class=\"pip-menu pip-simple-list hide-xs\"\r\n                 pip-selected=\"selected.tabIndex\"\r\n                 pip-selected-watch=\"selected.navId\"\r\n                 pip-select=\"onNavigationSelect($event.id)\">\r\n            <md-list-item class=\"pip-simple-list-item pip-selectable flex\"\r\n                          ng-repeat=\"tab in tabs track by tab.state\" ng-if=\"$party.id == $user.id ||\r\n                          tab.state == 'settings.basic_info'|| tab.state =='settings.contact_info'\r\n                          || tab.state =='settings.blacklist'\"\r\n                          md-ink-ripple\r\n                          pip-id=\"{{:: tab.state }}\">\r\n                <p>{{::tab.title | translate}}</p>\r\n            </md-list-item>\r\n        </md-list>\r\n\r\n        <div class=\"pip-content-container\" ng-if=\"selected.tab\">\r\n            <pip-dropdown class=\"hide-gt-xs\"\r\n                          pip-actions=\"tabs\"\r\n                          pip-dropdown-select=\"onDropdownSelect\"\r\n                          pip-active-index=\"selected.tabIndex\"></pip-dropdown>\r\n\r\n            <div class=\"pip-body tp24-flex layout-column\" ui-view></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"layout-column layout-align-center-center flex\"\r\n         ng-show=\"manager === false || !tabs || tabs.length < 1\">\r\n        {{::'ERROR_400' | translate}}\r\n    </div>\r\n</pip-document>","<form name=\"form\" class=\"w-stretch\" novalidate>\r\n    <md-progress-linear class=\"pip-progress-top\"\r\n                        ng-show=\"transaction.busy()\"\r\n                        md-mode=\"indeterminate\"></md-progress-linear>\r\n    <div class=\"layout-row bm12\">\r\n        <div class=\"md-tile-left\">\r\n            <pip-avatar-edit pip-party-id=\"$party.id\"\r\n                             pip-created=\"onPictureCreated($event)\"\r\n                             pip-changed=\"onPictureChanged($control, $event)\">\r\n            </pip-avatar-edit>\r\n        </div>\r\n        <div class=\"md-tile-content tp0 layout-align-center\">\r\n            <h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3>\r\n\r\n            <p class=\"text-primary text-overflow m0\">\r\n                {{::'SETTINGS_BASIC_INFO_FROM' | translate}}\r\n                {{$user.signup | formatLongDate }}\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <md-input-container class=\"md-block\">\r\n        <label>{{::'SETTINGS_BASIC_INFO_FULL_NAME' | translate}}</label>\r\n        <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required\r\n               ng-model=\"$party.name\"\r\n               ng-disabled=\"transaction.busy()\"\r\n               ng-change=\"onChangeBasicInfo()\"/>\r\n\r\n        <div class=\"hint\"\r\n             ng-if=\"errorsWithHint(form, form.fullName).hint\">\r\n            {{::'ERROR_FULLNAME_INVALID' | translate}}\r\n        </div>\r\n    </md-input-container>\r\n\r\n    <md-input-container class=\"md-block bm0\">\r\n        <label>{{::'SETTINGS_BASIC_INFO_PRIMARY_EMAIL' | translate}}</label>\r\n        <input name=\"email\" type=\"email\" required\r\n               ng-model=\"$party.email\"\r\n               ng-change=\"onChangeBasicInfo()\"\r\n               pip-email-unique=\"{{$party.email}}\"/>\r\n\r\n        <div class=\"hint\"\r\n             ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">\r\n            {{::'SETTINGS_BASIC_INFO_VERIFY_HINT' | translate}}\r\n        </div>\r\n        <div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\" $party.type =='team'\">\r\n            <div ng-message=\"email\">{{::'ERROR_EMAIL_INVALID' | translate}}</div>\r\n            <div ng-message=\"emailUnique\">{{::'ERROR_EMAIL_INVALID' | translate}}</div>\r\n        </div>\r\n    </md-input-container>\r\n\r\n    <md-button class=\"md-raised bm16 tm8 rm8\"\r\n               ng-click=\"onVerifyEmail($event)\"\r\n               ng-hide=\"$user.email_ver || $party.type =='team'\">\r\n        {{::'SETTINGS_BASIC_INFO_VERIFY_CODE' | translate}}\r\n    </md-button>\r\n\r\n    <md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type =='team'\">\r\n        {{::'SETTINGS_BASIC_INFO_CHANGE_PASSWORD' | translate}}\r\n    </md-button>\r\n\r\n    <md-input-container class=\"md-block flex\">\r\n        <label>{{::'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME' | translate }}</label>\r\n        <textarea ng-model=\"$party.about\" columns=\"1\"\r\n                  ng-change=\"onChangeBasicInfo()\"></textarea>\r\n    </md-input-container>\r\n\r\n    <md-input-container class=\"md-block\" ng-hide=\"$party.type =='team'\">\r\n        <label>{{::'GENDER' | translate}}</label>\r\n        <md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\"\r\n                   placeholder=\"{{'GENDER' | translate}}\">\r\n            <md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n\r\n    <div ng-hide=\"$party.type =='team'\">\r\n        <p class=\"text-caption text-grey tm0 bm0\">{{::'SETTINGS_BASIC_INFO_BIRTHDAY' | translate}}</p>\r\n        <pip-date ng-model=\"$party.birthday\"\r\n                  ng-change=\"onChangeBasicInfo()\"\r\n                  pip-time-mode=\"past\r\n                  time-mode=\"past\"></pip-date>\r\n    </div>\r\n\r\n    <md-input-container class=\"md-block\"\r\n                        ng-hide=\"$party.type =='team'\">\r\n        <label>{{::'LANGUAGE' | translate}}</label>\r\n        <md-select placeholder=\"{{'LANGUAGE' | translate}}\"\r\n                   ng-model=\"$user.language\"\r\n                   ng-change=\"onChangeUser()\">\r\n            <md-option ng-value=\"language.id\"\r\n                       ng-repeat=\"language in languages\">\r\n                {{language.name}}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n\r\n    <md-input-container class=\"md-block\"\r\n                        ng-if=\"$party.type !='team'\">\r\n        <label>{{::'THEME' | translate}}</label>\r\n        <md-select class=\"w-stretch theme-text-primary\"\r\n                   ng-model=\"$user.theme\"\r\n                   ng-change=\"onChangeUser()\"\r\n                   ng-disabled=\"transaction.busy()\">\r\n            <md-option ng-value=\"theme\"\r\n                       ng-repeat=\"theme in themes\"\r\n                       ng-selected=\"$theme == theme ? true : false\">\r\n                {{ theme | translate }}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n    <pip-location-edit class=\"map-edit bm24-flex\"\r\n                       ng-hide=\"$party.type =='team'\"\r\n                       pip-changed=\"onChangeBasicInfo()\"\r\n                       pip-location-name=\"$party.loc_name\"\r\n                       pip-location-pos=\"loc_pos\">\r\n    </pip-location-edit>\r\n</form>\r\n","<md-dialog class=\"pip-dialog layout-column\"  width=\"440\">\r\n    <form name=\"form\" ng-submit=\"onApply()\" >\r\n    <div class=\"pip-header\">\r\n        <h3 class=\"m0\">\r\n            {{::'SETTINGS_CHANGE_PASSWORD_TITLE' | translate : module}}\r\n        </h3>\r\n    </div>\r\n    <div class=\"pip-body\">\r\n        <div class=\"pip-content\">\r\n            <div class=\"text-error bm8\"\r\n                 ng-messages=\"form.$serverError\">\r\n                <div ng-message=\"ERROR_UNKNOWN\">\r\n                    {{ form.$serverError.ERROR_UNKNOWN | translate }}\r\n                </div>\r\n            </div>\r\n\r\n            <md-input-container class=\"md-block\">\r\n                <label>{{::'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD' | translate }}</label>\r\n                <input name=\"oldPassword\" type=\"password\"\r\n                       ng-model=\"changePasData.old_password\"\r\n                       ng-required=\"change_password.$submitted\"\r\n                       pip-clear-errors/>\r\n\r\n                <div ng-messages=\"errorsWithHint(form, form.oldPassword)\">\r\n                    <div ng-message=\"required\">\r\n                        {{::'ERROR_REQUIRED' | translate }}\r\n                    </div>\r\n                    <div ng-message=\"ERROR_1107\">\r\n                        {{::'ERROR_WRONG_PASSWORD' | translate }}\r\n                    </div>\r\n                </div>\r\n\r\n            </md-input-container>\r\n\r\n            <md-input-container class=\"md-block\">\r\n                <label>{{'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD' | translate }}</label>\r\n                <input name=\"newPassword\" type=\"password\"\r\n                       ng-model=\"changePasData.new_password\"\r\n                       ng-change=\"onCheckRepeatPassword()\"\r\n                       ng-required=\"change_password.$submitted\"\r\n                       ng-minlength=\"6\"\r\n                       pip-clear-errors/>\r\n                <div class=\"hint\"\r\n                     ng-if=\"errorsWithHint(form, form.newPassword).hint\">\r\n                    {{ 'HINT_PASSWORD' | translate }}\r\n                </div>\r\n                <div ng-messages=\"errorsWithHint(form, form.newPassword)\">\r\n                    <div ng-message=\"required\">\r\n                        {{::'ERROR_REQUIRED' | translate}}\r\n                    </div>\r\n                    <div ng-message=\"minlength\">\r\n                        {{::'HINT_PASSWORD' | translate }}\r\n                    </div>\r\n                    <div ng-message=\"ERROR_1105\">\r\n                        {{::'ERROR_IDENTICAL_PASSWORDS' | translate }}\r\n                    </div>\r\n                </div>\r\n            </md-input-container>\r\n\r\n            <md-input-container class=\"md-block\">\r\n                <label>{{ 'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD' | translate }}</label>\r\n                <input name=\"repeat\"  type=\"password\"\r\n                       ng-model=\"repeat\"\r\n                       ng-change=\"onCheckRepeatPassword()\"\r\n                       ng-required=\"change_password.$submitted\"\r\n                       ng-minlength=\"6\" />\r\n\r\n                <div class=\"hint\"\r\n                     ng-if=\"errorsRepeatWithHint(form.repeat).hint\">\r\n                    {{::'HINT_REPEAT_PASSWORD' | translate }}\r\n                </div>\r\n\r\n                <div ng-messages=\"errorsRepeatWithHint(form.repeat)\">\r\n                    <div ng-message=\"required\">{{::'ERROR_REQUIRED' | translate }}</div>\r\n                    <div ng-message=\"minlength\">{{::'HINT_PASSWORD' | translate }}</div>\r\n                    <div ng-message=\"repeat\">{{::'REPEAT_PASSWORD_INVALID' | translate }}</div>\r\n                </div>\r\n\r\n            </md-input-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"pip-footer\">\r\n        <div>\r\n            <md-button aria-label=\"xxx\"\r\n                       ng-click=\"onCancel()\">\r\n                {{::'CANCEL' | translate }}\r\n            </md-button>\r\n            <md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">\r\n                {{::'APPLY' | translate : module}}\r\n            </md-button>\r\n        </div>\r\n    </div>\r\n    </form>\r\n</md-dialog>\r\n\r\n\r\n\r\n\r\n","\r\n    <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\">\r\n    </md-progress-linear>\r\n    <div class=\"pip-details-title pip-sessions\">\r\n        <p class=\"pip-title bm16\">\r\n            {{::'SETTINGS_ACTIVE_SESSIONS_TITLE' | translate}}\r\n        </p>\r\n\r\n        <p class=\"pip-subtitle\">\r\n            {{::'SETTINGS_ACTIVE_SESSIONS_SUBTITLE' | translate}}\r\n        </p>\r\n    </div>\r\n\r\n\r\n<md-list class=\"w-stretch\">\r\n    <div ng-repeat=\"session in sessions\" >\r\n        <div class=\"layout-row\"\r\n             ng-init=\"showBlock = session.id != sessionId\"\r\n             ng-click=\"showBlock = !showBlock\" >\r\n            <p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">\r\n                {{::session.client}}\r\n            </p>\r\n            <p class=\"m0 lp4 text-body1 color-secondary-text flex\">\r\n                {{::'SETTINGS_ACTIVE_SESSION_ACTIVE' | translate}}\r\n            </p>\r\n            <p class=\"m0 text-body1 color-secondary-text\">\r\n                {{::country}}\r\n                <md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon>\r\n                <md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon>\r\n            </p>\r\n        </div>\r\n        <div class=\"layout-row bm8 bp8\" ng-class=\"{'divider-bottom':!$last}\" >\r\n            <div class=\"flex-50\">\r\n                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text \">\r\n                    {{session.last_req | date : 'medium'}}\r\n                </p>\r\n                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\"\r\n                   ng-show=\"showBlock\">\r\n                    {{::'SETTINGS_ACTIVE_SESSION_OS' | translate}}{{::session.platform}}</p>\r\n                <p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\"\r\n                   ng-show=\"showBlock\">\r\n                    {{::'SETTINGS_ACTIVE_SESSION_IP' | translate}}{{::session.address}}\r\n                </p>\r\n                <md-button class=\"md-raised\"\r\n                           ng-show=\"showBlock && session.id != sessionId\"\r\n                           ng-click=\"onRemove(session)\">\r\n                    {{::'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION' | translate}}\r\n                </md-button>\r\n            </div>\r\n\r\n            <pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\"\r\n                             pip-ipaddress=\"session.address\"\r\n                             pip-extra-info=\"country = extraInfo.country\">\r\n            </pip-location-ip>\r\n        </div>\r\n\r\n    </div>\r\n</md-list>\r\n<div class=\"layout-row layout-align-end-center\">\r\n    <md-button class=\"md-raised\"\r\n               ng-show=\"sessions.length > 1\"\r\n               ng-click=\"onRemoveAll()\">\r\n        {{::'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS' | translate}}\r\n    </md-button>\r\n</div>\r\n","<md-dialog class=\"pip-dialog layout-column\"  width=\"440\">\r\n    <div class=\"pip-body\">\r\n        <div class=\"pip-content\">\r\n                <md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\" >\r\n                </md-progress-linear>\r\n\r\n                <h2>{{::'VERIFY_EMAIL_TITLE' | translate}}</h2>\r\n\r\n                <p class=\"title-padding\">{{::'VERIFY_EMAIL_TEXT_1' | translate}} </p>\r\n\r\n                <form name='form' novalidate>\r\n                    <div ng-messages=\"form.$serverError\" class=\"text-error bm8\">\r\n                        <div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div>\r\n                    </div>\r\n\r\n                    <md-input-container class=\"display  bp4 md-block\" >\r\n                        <label>{{::'EMAIL' | translate}}</label>\r\n                        <input name=\"email\" type=\"email\" ng-model=\"data.email\" required step=\"any\"\r\n                               pip-clear-errors  tabindex=\"1\"\r\n                               ng-disabled=\"transaction.busy()\"\r\n                               pip-test=\"input-email\"/>\r\n                        <div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::'HINT_EMAIL' | translate}}</div>\r\n                        <div ng-messages=\"errorsWithHint(form, form.email)\"\r\n                             xng-if=\"!form.email.$pristine\">\r\n                            <div ng-message=\"required\">{{::'ERROR_EMAIL_INVALID' | translate }}</div>\r\n                            <div ng-message=\"ERROR_1106\">{{::'ERROR_USER_NOT_FOUND' | translate}}</div>\r\n                        </div>\r\n                    </md-input-container>\r\n\r\n                    <md-input-container class=\"md-block\">\r\n                        <label>{{::'ENTRY_VERIFICATION_CODE' | translate}}</label>\r\n                        <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\"\r\n                               ng-model=\"data.code\" required pip-clear-errors/>\r\n                        <div ng-messages=\"errorsWithHint(form, form.code)\">\r\n                            <div ng-message=\"required\"> {{::'ERROR_CODE_INVALID' | translate }}</div>\r\n                            <div ng-message=\"ERROR_1103\"> {{::'ERROR_CODE_WRONG' | translate }}</div>\r\n                        </div>\r\n                    </md-input-container>\r\n\r\n                    <p>\r\n                        {{::'VERIFY_EMAIL_TEXT_21' | translate}}\r\n                        <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::'VERIFY_EMAIL_RESEND' | translate}}</a>\r\n                        {{::'VERIFY_EMAIL_TEXT_22' | translate}}\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"pip-footer\">\r\n            <md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">\r\n                {{::'CANCEL' | translate}}\r\n            </md-button>\r\n            <md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\"\r\n                ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">\r\n                {{::'VERIFY' | translate}}\r\n            </md-button>\r\n            <md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">\r\n                {{::'CANCEL' | translate}}\r\n            </md-button>\r\n\r\n        </div>\r\n</md-dialog>","/**\r\n * @file Registration of settings components\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipSettings', [\r\n        'pipSettings.Service',\r\n        'pipSettings.Page'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * @file Service for settings component\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSettings.Service', []);\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name pipSettings.Service:pipSettingsProvider\r\n     *\r\n     * @description\r\n     * Service provides an interface to manage 'Settings' component behaviour.\r\n     * It is available on config and run phases.\r\n     */\r\n    thisModule.provider('pipSettings', function ($stateProvider) { // pipAuthStateProvider\r\n\r\n        var defaultTab,\r\n            tabs = [],\r\n            titleText = 'SETTINGS_TITLE',\r\n            titleLogo = null,\r\n            isNavIcon = true;\r\n\r\n        // Configure global parameters\r\n        this.showTitleText = showTitleText;\r\n        this.showTitleLogo = showTitleLogo;\r\n        this.showNavIcon = showNavIcon;\r\n\r\n        return {\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipSettings.Service:pipSettingsProvider\r\n             * @name pipSettings.Service.pipSettingsProvider:addTab\r\n             *\r\n             * @description\r\n             * Register new tab in 'Settings' component. Before adding a tab this method validates passed object.\r\n             *\r\n             * @param {Object} tabObj  Configuration object for new tab.\r\n             */\r\n            addTab: addTab,\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipSettings.Service:pipSettingsProvider\r\n             * @name pipSettings.Service.pipSettingsProvider:getTabs\r\n             *\r\n             * @description\r\n             * Method returns collection of registered tabs.\r\n             *\r\n             * @returns {Array<Object>} Collection of tabs.\r\n             */\r\n            getTabs: getTabs,\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipSettings.Service:pipSettingsProvider\r\n             * @name pipSettings.Service.pipSettingsProvider:setDefaultTab\r\n             *\r\n             * @description\r\n             * Establish a tab which is available by default (after chose this component in menu).\r\n             *\r\n             * @param {string} name     Name of the default state for this component.\r\n             */\r\n            setDefaultTab: setDefaultTab,\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipSettings.Service:pipSettingsProvider\r\n             * @name pipSettings.Service.pipSettingsProvider:getDefaultTab\r\n             *\r\n             * @description\r\n             * Method returns an config object for tabs established as default (it will be opened when app transeferred to\r\n             * abstract state 'settings').\r\n             *\r\n             * @returns {Array<Object>} Collection of tabs.\r\n             */\r\n            getDefaultTab: getDefaultTab,\r\n                    \r\n            showTitleText: showTitleText,\r\n            showTitleLogo: showTitleLogo,\r\n            showNavIcon: showNavIcon,\r\n\r\n            $get: function () {\r\n                /**\r\n                 * @ngdoc service\r\n                 * @name pipSettings.Service:pipSettings\r\n                 *\r\n                 * @description\r\n                 * Service provides an interface to manage 'Settings' component behaviour.\r\n                 * It is available on config and run phases.\r\n                 */\r\n                return {\r\n                    /**\r\n                     * @ngdoc method\r\n                     * @methodOf pipSettings.Service:pipSettings\r\n                     * @name pipSettings.Service.pipSettings:getTabs\r\n                     *\r\n                     * @description\r\n                     * Method returns collection of registered tabs.\r\n                     *\r\n                     * @returns {Array<Object>} Collection of tabs.\r\n                     */\r\n                    getTabs: getTabs,\r\n\r\n                    /**\r\n                     * @ngdoc method\r\n                     * @methodOf pipSettings.Service:pipSettings\r\n                     * @name pipSettings.Service.pipSettings:addTab\r\n                     *\r\n                     * @description\r\n                     * Register new tab in 'Settings' component. Before adding a tab this method validates passed object.\r\n                     *\r\n                     * @param {Object} tabObj  Configuration object for new tab.\r\n                     */\r\n                    addTab: addTab,\r\n\r\n                    /**\r\n                     * @ngdoc method\r\n                     * @methodOf pipSettings.Service:pipSettings\r\n                     * @name pipSettings.Service.pipSettings:getDefaultTab\r\n                     *\r\n                     * @description\r\n                     * Method returns an config object for tabs established as default (it will be opened when app transeferred to\r\n                     * abstract state 'settings').\r\n                     *\r\n                     * @returns {Array<Object>} Collection of tabs.\r\n                     */\r\n                    getDefaultTab: getDefaultTab,\r\n\r\n                    /**\r\n                     * @ngdoc method\r\n                     * @methodOf pipSettings.Service:pipSettings\r\n                     * @name pipSettings.Service.pipSettings:setDefaultTab\r\n                     *\r\n                     * @description\r\n                     * Establish a tab which is available by default (after chose this component in menu).\r\n                     *\r\n                     * @param {string} name     Name of the default state for this component.\r\n                     */\r\n                    setDefaultTab: setDefaultTab,\r\n\r\n                    showTitleText: showTitleText,\r\n                    showTitleLogo: showTitleLogo,\r\n                    showNavIcon: showNavIcon\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Appends component abstract state prefix to passed state\r\n         */\r\n        function getFullStateName(state) {\r\n            return 'settings.' + state;\r\n        }\r\n\r\n        function getTabs() {\r\n            return _.cloneDeep(tabs);\r\n        }\r\n\r\n        function getDefaultTab() {\r\n            var defaultTab;\r\n\r\n            defaultTab = _.find(tabs, function (p) {\r\n                return p.state === defaultTab;\r\n            });\r\n\r\n            return _.cloneDeep(defaultTab);\r\n        }\r\n\r\n        function addTab(tabObj) {\r\n            var existingTab;\r\n\r\n            validateTab(tabObj);\r\n            existingTab = _.find(tabs, function (p) {\r\n                return p.state === getFullStateName(tabObj.state);\r\n            });\r\n            if (existingTab) {\r\n                throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\r\n            }\r\n\r\n            tabs.push({\r\n                state: getFullStateName(tabObj.state),\r\n                title: tabObj.title,\r\n                index: tabObj.index || 100000,\r\n                access: tabObj.access,\r\n                visible: tabObj.visible !== false,\r\n                stateConfig: _.cloneDeep(tabObj.stateConfig)\r\n            });\r\n\r\n            $stateProvider.state(getFullStateName(tabObj.state), tabObj.stateConfig);\r\n\r\n            // if we just added first state and no default state is specified\r\n            if (typeof defaultTab === 'undefined' && tabs.length === 1) {\r\n                setDefaultTab(tabObj.state);\r\n            }\r\n        }\r\n\r\n        function setDefaultTab(name) {\r\n            // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\r\n            if (!_.find(tabs, function (tab) {\r\n                return tab.state === getFullStateName(name);\r\n            })) {\r\n                throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n            }\r\n\r\n            defaultTab = getFullStateName(name);\r\n            \r\n            //$stateProvider.go(defaultTab);\r\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n        }\r\n\r\n        /**\r\n         * Validates passed tab config object\r\n         * If passed tab is not valid it will throw an error\r\n         */\r\n        function validateTab(tabObj) {\r\n            if (!tabObj || !_.isObject(tabObj)) {\r\n                throw new Error('Invalid object');\r\n            }\r\n\r\n            if (tabObj.state === null || tabObj.state === '') {\r\n                throw new Error('Tab should have valid Angular UI router state name');\r\n            }\r\n\r\n            if (tabObj.access && !_.isFunction(tabObj.access)) {\r\n                throw new Error('\"access\" should be a function');\r\n            }\r\n\r\n            if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\r\n                throw new Error('Invalid state configuration object');\r\n            }\r\n        }\r\n\r\n        function showTitleText (newTitleText) {\r\n            if (newTitleText) {\r\n                titleText = newTitleText;\r\n                titleLogo = null;\r\n            }\r\n\r\n            return titleText;\r\n        }\r\n\r\n        function showTitleLogo(newTitleLogo) {\r\n            if (newTitleLogo) {\r\n                titleLogo = newTitleLogo;\r\n                titleText = null;\r\n            }\r\n\r\n            return titleLogo;\r\n        }\r\n\r\n        function showNavIcon(value) {\r\n            if (value !== null && value !== undefined) {\r\n                isNavIcon = !!value;\r\n            }\r\n\r\n            return isNavIcon;\r\n        }\r\n\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Define controller for a settings tab\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSettings.Page', [\r\n        'pipSettings.Service', 'pipAppBar', 'pipSelected', 'pipTranslate',\r\n        'pipSettings.Templates', 'pipNavIcon', 'pipActions.Service'\r\n    ]);\r\n\r\n    thisModule.config(function ($stateProvider) {\r\n        $stateProvider.state('settings', {\r\n            url: '/settings?party_id',\r\n            auth: true,\r\n            controller: 'pipSettingsPageController',\r\n            templateUrl: 'settings_page/settings_page.html'\r\n        });\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipSettings.Page:pipSettingsPageController\r\n     *\r\n     * @description\r\n     * The controller is used for the whole settings tabs and provides\r\n     * navigation menu on the left and load content into right panel.\r\n     * This component is integrated with `'pipAppBar'` component and adapt the tabs header.\r\n     * The component has predefined states `'settings.base_info'` and `'settings.active_sessions'`. Each of these states\r\n     * require user's authorization.\r\n     *\r\n     * @requires pipAppBar\r\n     */\r\n    thisModule.controller('pipSettingsPageController',\r\n        function ($scope, $state, $rootScope, $timeout, pipAppBar, pipSettings, pipActions,\r\n                  pipBreadcrumb, pipNavIcon) {\r\n\r\n            $scope.tabs = _.filter(pipSettings.getTabs(), function (tab: any) {\r\n                if (tab.visible === true && (tab.access ? tab.access($rootScope.$user, tab) : true)) {\r\n                    return tab;\r\n                }\r\n            });\r\n\r\n            $scope.tabs = _.sortBy($scope.tabs, 'index');\r\n\r\n            $scope.selected = {};\r\n            if ($state.current.name !== 'settings') {\r\n                initSelect($state.current.name);\r\n            } else if ($state.current.name === 'settings' && pipSettings.getDefaultTab()) {\r\n                initSelect(pipSettings.getDefaultTab().state);\r\n            } else {\r\n                $timeout(function () {\r\n                    if (pipSettings.getDefaultTab()) {\r\n                        initSelect(pipSettings.getDefaultTab().state);\r\n                    }\r\n                    if (!pipSettings.getDefaultTab() && $scope.tabs.length > 0) {\r\n                        initSelect($scope.tabs[0].state);\r\n                    }\r\n                });\r\n            }\r\n\r\n            appHeader();\r\n\r\n            /** @see onNavigationSelect */\r\n            $scope.onNavigationSelect = onNavigationSelect;\r\n            /** @see onDropdownSelect */\r\n            $scope.onDropdownSelect = onDropdownSelect;\r\n\r\n            /**\r\n             * Config header panel\r\n             */\r\n            function appHeader() {\r\n                pipActions.hide();\r\n                pipAppBar.part('menu', true);\r\n                pipAppBar.part('actions', 'primary');\r\n                pipAppBar.part('icon', true);\r\n                pipAppBar.part('title', 'breadcrumb');\r\n                pipAppBar.hideShadow();\r\n                pipBreadcrumb.text = 'Settings';\r\n                pipNavIcon.menu();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipSettings.Page:pipSettingsPageController\r\n             * @name pipSettings.Page:pipSettingsPageController:onDropdownSelect\r\n             *\r\n             * @description\r\n             * Method changes selected tab in the navigation menu and transfer to selected tab(state).\r\n             * It used on mobile screens.\r\n             *\r\n             * @param {Object} state    State configuration object\r\n             */\r\n            function onDropdownSelect(state) {\r\n                onNavigationSelect(state.state);\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipSettings.Page:pipSettingsPageController\r\n             * @name pipSettings.Page:pipSettingsPageController:onNavigationSelect\r\n             *\r\n             * @description\r\n             * Method changes selected tab in the navigation menu and transfer to selected tab(state).\r\n             * It uses on screens more than mobile.\r\n             *\r\n             * @param {string} state    Name of new state\r\n             */\r\n            function onNavigationSelect(state) {\r\n                initSelect(state);\r\n\r\n                if ($scope.selected.tab) {\r\n                    $state.go(state);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Establish selected tab\r\n             */\r\n            function initSelect(state) {\r\n                $scope.selected.tab = _.find($scope.tabs, function (tab: any) {\r\n                    return tab.state === state;\r\n                });\r\n                $scope.selected.tabIndex = _.indexOf($scope.tabs, $scope.selected.tab);\r\n                $scope.selected.tabId = state;\r\n            }\r\n        });\r\n\r\n})();\r\n","/**\r\n * @file Settings tab logic\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipUserSettings', [\r\n        'ngMaterial', 'pipData',\r\n        'pipSettings.Service',\r\n        'pipSettings.Page',\r\n\r\n        'pipUserSettings.Strings',\r\n        'pipUserSettings.Sessions',\r\n        'pipUserSettings.BasicInfo',\r\n        'pipSettings.Templates'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * @file Settings basic info controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\r\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail', \r\n            'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'basic_info',\r\n            index: 1,\r\n            title: 'SETTINGS_BASIC_INFO_TITLE',\r\n            stateConfig: {\r\n                url: '/basic_info',\r\n                controller: 'pipUserSettingsBasicInfoController',\r\n                templateUrl: 'user_settings/user_settings_basic_info.html',\r\n                auth: true\r\n            }\r\n        });\r\n\r\n        pipSettingsProvider.setDefaultTab('basic_info');\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n     *\r\n     * @description\r\n     * Controller for the predefined 'basic_info' state.\r\n     * Provides sync changes user's profile with remote profile.\r\n     * On state exit everything is saved on the server.\r\n     */\r\n    thisModule.controller('pipUserSettingsBasicInfoController',\r\n        function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\r\n                  pipTranslate, pipTransaction, pipTheme,\r\n                  pipToasts, pipDataUser, pipDataParty, pipFormErrors) {\r\n\r\n            try {\r\n                $scope.originalParty = angular.toJson($rootScope.$party);\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n\r\n            $scope.nameCopy = $rootScope.$party.name;\r\n\r\n            $timeout(function () {\r\n                $scope.loc_pos = $rootScope.$party.loc_pos;\r\n            });\r\n\r\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\r\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\r\n\r\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\r\n\r\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\r\n\r\n            $state.get('settings.basic_info').onExit = saveChanges;\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onChangePassword */\r\n            $scope.onChangePassword = onChangePassword;\r\n            /** @see onVerifyEmail */\r\n            $scope.onVerifyEmail = onVerifyEmail;\r\n            /** @see onPictureCreated */\r\n            $scope.onPictureCreated = onPictureCreated;\r\n            /** @see onPictureChanged */\r\n            $scope.onPictureChanged = onPictureChanged;\r\n            /** @see updateUser */\r\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\r\n            /** @see saveChanges */\r\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\r\n\r\n            function onPictureChanged() {\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            function onPictureCreated($event) {\r\n                $scope.picture = $event.sender;\r\n                $scope.picture.save(\r\n                    function () {\r\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\r\n                    },\r\n                    function (error) {\r\n                        return new Error(error);\r\n                    }\r\n                );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeBasicInfo\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the input information.\r\n             * It is updated user's party profile. Also it updates user's profile in $rootScope.\r\n             */\r\n            function saveChanges() {\r\n                if ($scope.form) {\r\n                    $scope.form.$setSubmitted();\r\n                }\r\n\r\n                if ($rootScope.$party) {\r\n\r\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\r\n                        return;\r\n                    }\r\n\r\n                    // Check to avoid unnecessary savings\r\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\r\n                    try {\r\n                        var party = angular.toJson($rootScope.$party);\r\n                    } catch (err) {\r\n                        throw err;\r\n                    }\r\n\r\n                    if (party !== $scope.originalParty) {\r\n                        var tid = $scope.transaction.begin('UPDATING');\r\n\r\n                        pipDataParty.updateParty($rootScope.$party,\r\n                            function (data) {\r\n                                if ($scope.transaction.aborted(tid)) {\r\n                                    return;\r\n                                }\r\n                                $scope.transaction.end();\r\n\r\n                                $scope.originalParty = party;\r\n                                $scope.nameCopy = data.name;\r\n                            }, function (error) {\r\n                                $scope.transaction.end(error);\r\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeUser\r\n             *\r\n             * @description\r\n             * Saves changes onto server.\r\n             * This method responses on change of the user's profile information.\r\n             * Also it updates user's profile in $rootScope.\r\n             */\r\n            function updateUser() {\r\n                var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                if ($rootScope.$user.id === $rootScope.$party.id) {\r\n                    pipDataUser.updateUser(\r\n                        {\r\n                            item: $rootScope.$user\r\n                        },\r\n                        function (data) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                            pipTranslate.use(data.language);\r\n                            $rootScope.$user.language = data.language;\r\n                            $rootScope.$user.theme = data.theme;\r\n                            if ($rootScope.$user.theme) {\r\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\r\n                            }\r\n\r\n                        }, function (error) {\r\n                            var message;\r\n                            \r\n                            $scope.transaction.end(error);\r\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangePassword\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onChangePassword(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_change_password.html',\r\n                    controller: 'pipUserSettingsChangePasswordController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        if (answer) {\r\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\r\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onVerifyEmail\r\n             *\r\n             * @description\r\n             * It opens a dialog panel to change password.\r\n             *\r\n             * @param {Object} event    Triggered event object\r\n             */\r\n            function onVerifyEmail(event) {\r\n                var message;\r\n\r\n                $mdDialog.show({\r\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\r\n                    controller: 'pipUserSettingsVerifyEmailController',\r\n                    targetEvent: event,\r\n                    locals: {email: $rootScope.$party.email}\r\n                }).then(\r\n                    function (answer) {\r\n                        $scope.user.email_ver = answer;\r\n                        if (answer) {\r\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\r\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings change password controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n     *\r\n     * @description\r\n     * Controller for dialog panel of password change.\r\n     */\r\n    thisModule.controller('pipUserSettingsChangePasswordController',\r\n        function ($scope, $rootScope, $mdDialog, email, pipDataUser, pipTransaction, pipFormErrors) {\r\n\r\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\r\n            $scope.errorsRepeatWithHint = function (form, formPart) {\r\n                if ($scope.showRepeatHint) {\r\n                    return pipFormErrors.errorsWithHint(form, formPart);\r\n                }\r\n\r\n                return {};\r\n            };\r\n            $scope.showRepeatHint = true;\r\n            $scope.changePasData = {};\r\n\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            $scope.onCancel = onCancel;\r\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\r\n            $scope.onApply = onApply;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCheckRepeatPassword\r\n             *\r\n             * @description\r\n             * Validates a password typed into password fields.\r\n             */\r\n            function onCheckRepeatPassword() {\r\n                if ($scope.changePasData) {\r\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\r\n                        $scope.form.repeat.$setValidity('repeat', true);\r\n                        if ($scope.repeat === $scope.changePasData.new_password) {\r\n                            $scope.showRepeatHint = false;\r\n                        } else {\r\n                            $scope.showRepeatHint = true;\r\n                        }\r\n                    } else {\r\n                        $scope.showRepeatHint = true;\r\n                        $scope.form.repeat.$setValidity('repeat', false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\r\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onApply\r\n             *\r\n             * @description\r\n             * Approves password change and sends request to the server on password change.\r\n             */\r\n            function onApply() {\r\n                $scope.onCheckRepeatPassword();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\r\n                    return;\r\n                }\r\n\r\n                $scope.changePasData.email = email;\r\n\r\n                pipDataUser.changePassword(\r\n                    $scope.changePasData,\r\n                    function () {\r\n                        $scope.transaction.end();\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1107: 'oldPassword',\r\n                                1105: 'newPassword'\r\n                            }\r\n                        );\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings sessions controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Sessions', [\r\n        'pipSettings.Service', 'pipSettings.Page',]);\r\n\r\n    thisModule.config(function (pipSettingsProvider, pipDataSessionProvider) {\r\n        pipSettingsProvider.addTab({\r\n            state: 'sessions',\r\n            index: 3,\r\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\r\n            stateConfig: {\r\n                url: '/sessions',\r\n                controller: 'pipUserSettingsSessionsController',\r\n                templateUrl: 'user_settings/user_settings_sessions.html',\r\n                auth: true,\r\n                resolve: {\r\n                    sessions: pipDataSessionProvider.readSessionsResolver,\r\n                    sessionId: pipDataSessionProvider.readSessionIdResolver\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n     *\r\n     * @description\r\n     * Controller provides an interface for managing active sessions.\r\n     */\r\n    thisModule.controller('pipUserSettingsSessionsController',\r\n        function ($scope, pipTransaction, pipDataSession, sessions, sessionId) {\r\n\r\n            $scope.sessionId = sessionId;\r\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\r\n            $scope.sessions = sessions;\r\n\r\n            $scope.onRemoveAll = onRemoveAll;\r\n            $scope.onRemove = onRemove;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemoveAll\r\n             *\r\n             * @description\r\n             * Closes all active session.\r\n             */\r\n            function onRemoveAll() {\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n\r\n                async.eachSeries(\r\n                    $scope.sessions,\r\n                    function (session: any, callback) {\r\n                        if (session.id == $scope.sessionId) {\r\n                            callback();\r\n                        } else {\r\n                            pipDataSession.removeSession(\r\n                                {\r\n                                    session: session\r\n                                },\r\n                                function () {\r\n                                    $scope.sessions = _.without($scope.sessions, session);\r\n                                    callback();\r\n                                },\r\n                                function (error) {\r\n                                    callback;\r\n                                }\r\n                            );\r\n                        }\r\n                    },\r\n                    function (err) {\r\n                        if (err) {\r\n                            $scope.transaction.end(err);\r\n                        }\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n                    });                \r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\r\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemove\r\n             *\r\n             * @description\r\n             * Closes passed session.\r\n             *\r\n             * @param {Object} session  Session configuration object\r\n             */\r\n            function onRemove(session, callback) {\r\n                if (session.id === $scope.sessionId) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('REMOVING');\r\n                pipDataSession.removeSession(\r\n                    {\r\n                        session: session\r\n                    },\r\n                    function () {\r\n                        if ($scope.transaction.aborted(tid)) {\r\n                            return;\r\n                        }\r\n                        $scope.transaction.end();\r\n\r\n                        $scope.sessions = _.without($scope.sessions, session);\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Settings string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* eslint-disable quote-props */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\r\n\r\n    thisModule.config(function (pipTranslateProvider) {\r\n\r\n        // Set translation strings for the module\r\n        pipTranslateProvider.translations('en', {\r\n            'SETTINGS_TITLE': 'Settings',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\r\n\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\r\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\r\n            '\"Close Session\" to end the session.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\r\n            'private messages.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\r\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\r\n\r\n            'THEME': 'Theme',\r\n\r\n            'HINT_PASSWORD': 'Minimum 6 characters',\r\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\r\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\r\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'SETTINGS_TITLE': 'Настройки',\r\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\r\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\r\n\r\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\r\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\r\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\r\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\r\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\r\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\r\n\r\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\r\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\r\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\r\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\r\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\r\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\r\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\r\n\r\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\r\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\r\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\r\n\r\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\r\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\r\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\r\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\r\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\r\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\r\n\r\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\r\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\r\n            ' посылать вам приглашения и личные сообщения.',\r\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\r\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\r\n\r\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\r\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\r\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\r\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\r\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\r\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\r\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\r\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\r\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\r\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\r\n\r\n            'THEME': 'Тема',\r\n\r\n            'HINT_PASSWORD': 'Минимум 6 знаков',\r\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\r\n\r\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\r\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\r\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\r\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\r\n        });\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Settings verify email controller\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\r\n\r\n    /**\r\n     * @ngdoc controller\r\n     * @name pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n     *\r\n     * @description\r\n     * Controller for verify email dialog panel.\r\n     */\r\n    thisModule.controller('pipUserSettingsVerifyEmailController',\r\n        function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipDataUser, email) {\r\n\r\n            $scope.emailVerified = false;\r\n            $scope.data = {\r\n                email: email,\r\n                code: ''\r\n            };\r\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\r\n\r\n            /** @see onAbort */\r\n            $scope.onAbort = onAbort;\r\n            /** @see onRequestVerificationClick*/\r\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\r\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\r\n            /** @see onVerify */\r\n            $scope.onVerify = onVerify;\r\n            /** @see onCancel */\r\n            $scope.onCancel = onCancel;\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onAbort\r\n             *\r\n             * @description\r\n             * Aborts a verify request.\r\n             */\r\n            function onAbort() {\r\n                $scope.transaction.abort();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onCancel\r\n             *\r\n             * @description\r\n             * Closes opened dialog panel.\r\n             */\r\n            function onCancel() {\r\n                $mdDialog.cancel();\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onRequestVerificationClick\r\n             *\r\n             * @description\r\n             * Sends request to verify entered email.\r\n             */\r\n            function onRequestVerificationClick() {\r\n                    var tid = $scope.transaction.begin('RequestEmailVerification');\r\n\r\n                pipDataUser.requestEmailVerification(\r\n                    {},                         \r\n                    function (result) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n                        }, \r\n                        function (error) {\r\n                            $scope.transaction.end(error);\r\n                        }\r\n                    );\r\n            }\r\n\r\n            /**\r\n             * @ngdoc method\r\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\r\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onVerify\r\n             *\r\n             * @description\r\n             * Initiates request on verify email on the server.\r\n             */\r\n            function onVerify() {\r\n                $scope.form.$setSubmitted();\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n                var tid = $scope.transaction.begin('Verifying');\r\n\r\n                pipDataUser.verifyEmail(\r\n                    {\r\n                        email: $scope.data.email,\r\n                        code: $scope.data.code\r\n                    }, \r\n                    function (verifyData) {\r\n                            if ($scope.transaction.aborted(tid)) {\r\n                                return;\r\n                            }\r\n                            $scope.transaction.end();\r\n\r\n                        $mdDialog.hide(true);\r\n                    },\r\n                    function (error) {\r\n                        $scope.transaction.end(error);\r\n\r\n                        pipFormErrors.setFormError(\r\n                            $scope.form, error,\r\n                            {\r\n                                1106: 'email',\r\n                                1103: 'code'\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n"]}