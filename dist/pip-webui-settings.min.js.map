{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/common/SettingsConfig.ts","src/common/SettingsService.ts","src/page/SettingsPageController.ts","src/page/SettingsPageRoutes.ts","src/page/index.ts","temp/pip-webui-settings-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","settings","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","SettingsTab","SettingsStateConfig","auth","SettingsPageSelectedTab","tabIndex","SettingsConfig","tabs","titleText","titleLogo","isNavIcon","SettingsConfig_1","SettingsService","config","_config","$inject","prototype","getFullStateName","state","setDefaultTab","name","_","find","tab","defaultTab","getDefaultTab","cloneDeep","showTitleText","newTitleText","showTitleLogo","newTitleLogo","showNavIcon","value","undefined","getTabs","SettingsProvider","$stateProvider","addTab","tabObj","existingTab","validateTab","push","title","index","access","visible","stateConfig","isObject","isFunction","$get","isNull","_service","isUndefined","Object","defineProperty","SettingsPageController","$state","pipNavService","pipSettings","$rootScope","$timeout","_this","filter","sortBy","selected","current","initSelect","icon","showMenu","breadcrumb","text","actions","hide","appbar","removeShadow","onDropdownSelect","onNavigationSelect","indexOf","tabId","go","controller","7","configureSettingsPageRoutes","url","controllerAs","templateUrl","8","./SettingsPageController","./SettingsPageRoutes","9","run","$templateCache","put"],"mappings":"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","file":"pip-webui-settings.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nimport './common/SettingsService';\r\nimport './page/index';\r\n\r\nangular.module('pipSettings', [\r\n    'pipSettings.Service',\r\n    'pipSettings.Page'\r\n]);\r\n\r\nexport * from './page';","\r\nexport class SettingsTab {\r\n    public state: string;\r\n    public title: string;\r\n    public index: number;\r\n    public access: Function;\r\n    public visible: boolean;\r\n    public stateConfig: SettingsStateConfig;\r\n}\r\n\r\nexport class SettingsStateConfig {\r\n    public url: string;\r\n    public auth: boolean = false;\r\n    public templateUrl?: string;\r\n    public template?: string;\r\n}\r\n\r\nexport class SettingsPageSelectedTab {\r\n    public tab: SettingsTab;\r\n    public tabIndex: number = 0;\r\n    public tabId: string;\r\n}\r\n\r\n\r\nexport class SettingsConfig {\r\n\r\n    public defaultTab: string;\r\n    public tabs: SettingsTab[] = [];\r\n    public titleText: string = 'SETTINGS_TITLE';\r\n    public titleLogo: boolean = null;\r\n    public isNavIcon: boolean = true;\r\n\r\n}","import {\r\n    SettingsTab,\r\n    SettingsConfig\r\n} from './SettingsConfig';\r\n\r\nimport {\r\n    ISettingsService\r\n} from './ISettingsService';\r\n\r\nimport {\r\n    ISettingsProvider\r\n} from './ISettingsProvider';\r\n\r\nclass SettingsService implements ISettingsService {\r\n    private _config: SettingsConfig;\r\n\r\n    public constructor(config: SettingsConfig) {\r\n        \"ngInject\";\r\n        this._config = config;\r\n    }\r\n\r\n    private getFullStateName(state: string): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public setDefaultTab(name: string): void {\r\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        let defaultTab: SettingsTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === defaultTab.state;\r\n        });\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean): boolean {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public getTabs(): SettingsTab[] {\r\n        return _.cloneDeep(this._config.tabs);\r\n    }\r\n\r\n}\r\n\r\nclass SettingsProvider implements ISettingsProvider {\r\n    private _service: SettingsService;\r\n    private _config: SettingsConfig = new SettingsConfig();\r\n\r\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\r\n\r\n    public getFullStateName(state: string): string {\r\n        return 'settings.' + state;\r\n    }\r\n\r\n    public getDefaultTab(): SettingsTab {\r\n        let defaultTab: SettingsTab;\r\n\r\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === defaultTab.state;\r\n        });\r\n\r\n        return _.cloneDeep(defaultTab);\r\n    }\r\n\r\n    public addTab(tabObj: SettingsTab): void {\r\n        let existingTab: SettingsTab;\r\n\r\n        this.validateTab(tabObj);\r\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + tabObj.state;\r\n        });\r\n        if (existingTab) {\r\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\r\n        }\r\n\r\n        this._config.tabs.push({\r\n            state: this.getFullStateName(tabObj.state),\r\n            title: tabObj.title,\r\n            index: tabObj.index || 100000,\r\n            access: tabObj.access,\r\n            visible: tabObj.visible !== false,\r\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\r\n        });\r\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\r\n\r\n        // if we just added first state and no default state is specified\r\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\r\n            this.setDefaultTab(tabObj.state);\r\n        }\r\n    }\r\n\r\n    public setDefaultTab(name: string): void {\r\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\r\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\r\n            return tab.state === 'settings.' + name;\r\n        })) {\r\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\r\n        }\r\n\r\n        this._config.defaultTab = this.getFullStateName(name);\r\n        //this.$stateProvider.go(this._config.defaultTab);\r\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\r\n    }\r\n\r\n    /**\r\n     * Validates passed tab config object\r\n     * If passed tab is not valid it will throw an error\r\n     */\r\n\r\n    private validateTab(tabObj: SettingsTab): void {\r\n        if (!tabObj || !_.isObject(tabObj)) {\r\n            throw new Error('Invalid object');\r\n        }\r\n\r\n        if (tabObj.state === null || tabObj.state === '') {\r\n            throw new Error('Tab should have valid Angular UI router state name');\r\n        }\r\n\r\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\r\n            throw new Error('\"access\" should be a function');\r\n        }\r\n\r\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\r\n            throw new Error('Invalid state configuration object');\r\n        }\r\n    }\r\n\r\n    public showTitleText (newTitleText: string): string {\r\n        if (newTitleText) {\r\n            this._config.titleText = newTitleText;\r\n            this._config.titleLogo = null;\r\n        }\r\n\r\n        return this._config.titleText;\r\n    }\r\n\r\n    public showTitleLogo(newTitleLogo) {\r\n        if (newTitleLogo) {\r\n            this._config.titleLogo = newTitleLogo;\r\n            this._config.titleText = null;\r\n        }\r\n\r\n        return this._config.titleLogo;\r\n    }\r\n\r\n    public showNavIcon(value: boolean): boolean {\r\n        if (value !== null && value !== undefined) {\r\n            this._config.isNavIcon = !!value;\r\n        }\r\n\r\n        return this._config.isNavIcon;\r\n    }\r\n\r\n    public $get(): ISettingsService {\r\n        \"ngInject\";\r\n\r\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\r\n            this._service = new SettingsService(this._config);\r\n        }\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipSettings.Service', [])\r\n    .provider('pipSettings', SettingsProvider);\r\n\r\n","// Prevent junk from going into typescript definitions\r\n\r\nimport {\r\n    ISettingsService\r\n} from '../common/ISettingsService';\r\n\r\nimport {\r\n    SettingsTab,\r\n    SettingsPageSelectedTab\r\n} from '../common/SettingsConfig';\r\n\r\ninterface ISettingsPageController {\r\n    tabs: SettingsTab[];\r\n    selected: SettingsPageSelectedTab;\r\n    onDropdownSelect: Function;\r\n    onNavigationSelect(state: string): void;\r\n}\r\n\r\n\r\n\r\n(() => {\r\n\r\n    class SettingsPageController implements ISettingsPageController {\r\n    public tabs: SettingsTab[];\r\n    public selected: SettingsPageSelectedTab;\r\n    public onDropdownSelect: Function;\r\n\r\n    constructor(\r\n        private $state: ng.ui.IStateService,\r\n        pipNavService: pip.nav.INavService,\r\n        pipSettings: ISettingsService,\r\n        $rootScope: ng.IRootScopeService, \r\n        $timeout: angular.ITimeoutService\r\n    ) {\r\n\r\n        this.tabs = _.filter(pipSettings.getTabs(), (tab: SettingsTab) => {\r\n                if (tab.visible === true && (tab.access ? tab.access($rootScope['$user'], tab) : true)) {\r\n                    return tab;\r\n                }\r\n            });\r\n\r\n        this.tabs = _.sortBy(this.tabs, 'index');\r\n\r\n        this.selected = new SettingsPageSelectedTab();\r\n        if (this.$state.current.name !== 'settings') {\r\n            this.initSelect(this.$state.current.name);\r\n        } else if (this.$state.current.name === 'settings' && pipSettings.getDefaultTab()) {\r\n            this.initSelect(pipSettings.getDefaultTab().state);\r\n        } else {\r\n            $timeout(() => {\r\n                if (pipSettings.getDefaultTab()) {\r\n                    this.initSelect(pipSettings.getDefaultTab().state);\r\n                }\r\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\r\n                     this.initSelect(this.tabs[0].state);\r\n                }\r\n            });\r\n        }\r\n\r\n        pipNavService.icon.showMenu();\r\n        pipNavService.breadcrumb.text = \"Settings\";\r\n        pipNavService.actions.hide();\r\n        pipNavService.appbar.removeShadow();\r\n        \r\n        this.onDropdownSelect = (state) => {\r\n            this.onNavigationSelect(state.state);\r\n        }\r\n    }\r\n\r\n    private initSelect(state: string): void {\r\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\r\n            return tab.state === state;\r\n        });\r\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\r\n        this.selected.tabId = state;\r\n    }\r\n\r\n    public onNavigationSelect(state: string): void {\r\n        this.initSelect(state);\r\n\r\n        if (this.selected.tab) {\r\n            this.$state.go(state);\r\n        }\r\n    }\r\n}\r\n\r\nangular.module('pipSettings.Page')\r\n    .controller('pipSettingsPageController', SettingsPageController);\r\n})();","{\r\n    function configureSettingsPageRoutes($stateProvider) {\r\n        $stateProvider\r\n            .state('settings', {\r\n                url: '/settings?party_id',\r\n                auth: true,\r\n                controllerAs: 'vm',\r\n                controller: 'pipSettingsPageController',\r\n                templateUrl: 'page/SettingsPage.html'\r\n            });\r\n\r\n    }\r\n\r\n    angular.module('pipSettings.Page')\r\n        .config(configureSettingsPageRoutes);\r\n}\r\n","'use strict';\r\n\r\nangular.module('pipSettings.Page', [\r\n    'ui.router', \r\n    'pipSettings.Service',\r\n    'pipNav', \r\n    'pipSelected',\r\n    'pipTranslate',\r\n    'pipSettings.Templates'\r\n    ]);\r\n\r\n\r\nimport './SettingsPageController';\r\nimport './SettingsPageRoutes';","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"]}