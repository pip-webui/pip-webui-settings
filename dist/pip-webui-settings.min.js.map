{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","temp/pip-webui-settings-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","settings","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","SettingsPageSelectedTab","tabIndex","SettingsPageController","$state","pipNavService","pipSettings","$rootScope","$timeout","_this","tabs","_","filter","getTabs","tab","visible","access","sortBy","selected","current","name","initSelect","getDefaultTab","state","icon","showMenu","breadcrumb","text","actions","hide","appbar","removeShadow","onDropdownSelect","onNavigationSelect","$inject","prototype","find","indexOf","tabId","go","controller","3","configureSettingsPageRoutes","$stateProvider","url","auth","controllerAs","templateUrl","defineProperty","value","SettingsTab","SettingsStateConfig","SettingsConfig","titleText","titleLogo","isNavIcon","SettingsService","config","_config","getFullStateName","setDefaultTab","defaultTab","cloneDeep","showTitleText","newTitleText","showTitleLogo","newTitleLogo","showNavIcon","undefined","SettingsProvider","addTab","tabObj","existingTab","validateTab","push","title","index","stateConfig","isObject","isFunction","$get","isNull","_service","isUndefined","7","./SettingsService","8","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,MAAAL,EAAAK,SAAAC,SAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,GCAA,8DAEAmB,EAAA,4BACAA,EAAA,yBAEAQ,QAAQ1B,OAAO,eACX,sBACA,gKCHJ,IAAA2B,GAAA,WAAA,QAAAA,KAEWpB,KAAAqB,SAAmB,EAE9B,MAAAD,KAJa5B,GAAA4B,wBAAAA,EAeb,WAEI,GAAAE,GAAA,mBAKAA,GAwCCC,EAAAC,EAAAC,EAAAC,EAAAC,GAvCW,GAAAC,GAAM5B,IAOdA,MAAKuB,OAASA,OACNM,KAAQC,EAAAC,OAAON,EAAcO,UAAU,SAAOC,MAC1CA,EAAAC,WAAW,KAAAD,EAAAE,QAAAF,EAAAE,OAAAT,EAAA,MAAAO,IACd,MAAAA,KAKTjC,KAAK6B,KAAAC,EAAQM,OAAOpC,KAAA6B,KAAA,SACpB7B,KAAIqC,SAAY,GAAAjB,GACgB,aAA5BpB,KAAKuB,OAAAe,QAAeC,KACvBvC,KAAAwC,WAAAxC,KAAAuB,OAAAe,QAAAC,MAC+B,aAAvBvC,KAAAuB,OAAWe,QAAAC,MAA4Bd,EAAOgB,gBACtDzC,KAAAwC,WAAAf,EAAAgB,gBAAAC,SAEW,WACAjB,EAAKgB,iBACRb,EAAAY,WAAAf,EAAAgB,gBAAAC,QAEIjB,EAAKgB,iBAAwBb,EAAOC,KAAAZ,OAAA,GACxCW,EAAAY,WAAAZ,EAAAC,KAAA,GAAAa,SAKTlB,EAAcmB,KAAAC,WACdpB,EAAcqB,WAAQC,KAAO,WAC7BtB,EAAcuB,QAAOC,OAErBxB,EAAKyB,OAAgBC,oBACjBC,iBAAK,SAAwBT,GAChCd,EAAAwB,mBAAAV,EAAAA,QA5CL,MAKApB,GAAA+B,SACY,SACR,gBACA,cACA,aACiC,cAsChBC,UAAUd,WAAW,SAAiBE,QACnDL,SAAUJ,IAAMH,EAAAyB,KAAKvD,KAAM6B,KAAA,SAAAI,GAC5B,MAAAA,GAAAS,QAAAA,IAEH1C,KAAKqC,SAAShB,SAAQS,EAAK0B,QAACxD,KAAA6B,KAAA7B,KAAAqC,SAAAJ,KAC/BjC,KAAAqC,SAAAoB,MAAAf,KAGmBY,UAAOF,mBAAA,SAAAV,GAEvB1C,KAAIwC,WAAKE,GACL1C,KAAKqC,SAASJ,KACjBjC,KAAAuB,OAAAmC,GAAAhB,IAERpB,aAGI7B,OAAU,oBACVkE,WAAA,4BAAArC,WCvFLsC,GAAA,SAAajD,EAAAlB,EAAAD,GAEb,qBAESqE,GAAkBC,KAEfpB,MAAM,YACNqB,IAAA,qBACAC,MAAA,EACAC,aAAa,KACdN,WAAA,4BAEVO,YAAA,sCATiBb,SAAA,uFCDlB,oBACIc,eAAW3E,EAAA,cAAA4E,OAAA,YACX3E,OAAA,oBACA,YACA,sBACA,SACA,cACG,eAGP,wLCVA,oBAAA0E,eAAA3E,EAAA,cAAA4E,OAAA,OAOAC,GAAC,WAAD,QAAAA,MAPa,MAAAA,QASbA,YAAAA,QAEiC,WAGjC,QAACC,KAADtE,KAAAgE,MAAA,EALa,MAAAM,QAuBbA,oBAAAA,QAGmC,mBACxBC,KACAvE,KAAA6B,QACA7B,KAAAwE,UAAqB,iBAE/BxE,KAAAyE,UAAA,KAADzE,KAAA0E,WAAC,EARY,MAAAH,QAaTA,eAAAA,QACe,WAEf,QAACI,GAAAC,GAEO,UACJ5E,MAAA6E,QAAOD,EA0DX,SA9DgBvB,SAAU,UAOnBsB,EAAArB,UAAAwB,iBAAP,SAAqBpC,GACjB,MAAO,YAAUA,KAEZY,UAAAyB,cAAA,SAAAxC,OACDT,EAAAyB,KAAMvD,KAAI6E,QAAMhD,KAAA,SAAAI,GACnB,MAAAA,GAAAS,QAAA,YAAAH,IAGJ,KAAA,IAAA1B,OAAA,wBAAA0B,EAAA,sBAGGvC,MAAI6E,QAAAG,WAAwBhF,KAAA8E,iBAAAvC,MAGjBe,UAASb,cAAgB,WACpC,GAAGuC,EAKH,OAJAA,GAASlD,EAAAyB,KAAUvD,KAAA6E,QAAYhD,KAAA,SAAAI,GAClC,MAAAA,GAAAS,QAAAsC,EAAAtC,QAGOZ,EAAAmD,UAAeD,MAEV1B,UAAQ4B,cAAiB,SAAAC,GAOlC,MANCA,KAEDnF,KAAO6E,QAAKL,UAAiBW,EAChCnF,KAAA6E,QAAAJ,UAAA,MAGOzE,KAAA6E,QAAeL,aAEVlB,UAAQ8B,cAAiB,SAAAC,GAOlC,MANCA,KAEDrF,KAAO6E,QAAKJ,UAAiBY,EAChCrF,KAAA6E,QAAAL,UAAA,MAGOxE,KAAK6E,QAASJ,aAEjBnB,UAAAgC,YAAA,SAAAlB,GAMD,MAJY,QAAZA,GAA8BmB,SAAVnB,IACvBpE,KAAA6E,QAAAH,YAAAN,GAGUpE,KAAE6E,QAAUH,WAG3BC,EAAArB,UAACtB,QAAA,WAAA,MAAAF,GAAAmD,UAAAjF,KAAA6E,QAAAhD,OAMG8C,OAFkC,WAI3B,QAAAa,GAAA1B,GACH9D,KAAA8D,eAAqBA,EACxB9D,KAAA6E,QAAA,GAAAN,SAJ0DiB,GAACnC,SAAA,oBAOpDC,UAAwBwB,iBAAA,SAAApC,GAE5B,MAAA,YAAoBA,KAEjBY,UAAAb,cAAA,WAEH,GAAAuC,EAMA,OALHA,GAAAlD,EAAAyB,KAAAvD,KAAA6E,QAAAhD,KAAA,SAAAI,GAEM,MAAAA,GAAAS,QAAAsC,EAAPtC,QAGSZ,EAAAmD,UAAYD,MAEN1B,UAASmC,OAAK,SAAcC,GACvC,GAAGC,MACH3F,KAAI4F,YAAaF,KACH5D,EAAAyB,KAAMvD,KAAA6E,QAAAhD,KAAA,SAA0BI,GAC7C,MAAAA,GAAAS,QAAA,YAAAgD,EAAAhD,QAIG,KAAK,IAAE7B,OAAO,wBAAK6E,EAAAhD,MAAA,gCAEnBmC,QAAQhD,KAAMgE,MACdnD,MAAO1C,KAAE8E,iBAAmBY,EAAKhD,OACjCoD,MAAAJ,EAAcI,MACfC,MAAAL,EAAAK,OAAA,IACC5D,OAACuD,EAAcvD,OAGfD,QAAOwD,EAAKxD,WAAQ,EACpB8D,YAAKlE,EAAAmD,UAAoBS,EAAOM,eAEvChG,KAAA8D,eAAApB,MAAA1C,KAAA8E,iBAAAY,EAAAhD,OAAAgD,EAAAM,aAED,mBAAOhG,MAAA6E,QAAAG,YAA0B,IAAAhF,KAAA6E,QAAAhD,KAAAZ,QAEzBjB,KAAG+E,cAAUW,EAAYhD,UAGnBY,UAAUyB,cAAA,SAA0BxC,GAC9C,IAACT,EAAAyB,KAAAvD,KAAA6E,QAAAhD,KAAA,SAAAI,GAEG,MAACA,GAAQS,QAAU,YAAQH,IAU3B,KAAA,IAAA1B,OAAA,wBAAR0B,EAAuC,4BAE/BsC,QAAMG,WAAUhF,KAAA8E,iBAAkBvC,MAG3Be,UAAUsC,YAAe,SAAUF,OAC1CA,IAAU5D,EAAAmE,SAAMP,GACnB,KAAA,IAAA7E,OAAA,qBAGmB,OAAhB6E,EAAMhD,OAAU,KAAAgD,EAAAhD,MACnB,KAAA,IAAA7B,OAAA,yDAGG6E,EAAMvD,SAAUL,EAAAoE,WAAAR,EAAAvD,QACnB,KAAA,IAAAtB,OAAA,gCAGE,KAAA6E,EAAAM,cAAAlE,EAAAmE,SAAPP,EAAAM,aACQ,KAAA,IAAAnF,OAAe,yCAGlByC,UAAA4B,cAAA,SAAAC,SAEDA,KACHnF,KAAA6E,QAAAL,UAAAW,EAEMnF,KAAA6E,QAAAJ,UAAA,MAECzE,KAAK6E,QAAQL,aAEhBlB,UAAA8B,cAAA,SAAAC,SAEDA,KACHrF,KAAA6E,QAAAJ,UAAAY,EAEMrF,KAAA6E,QAAAL,UAAA,MAECxE,KAAK6E,QAAQJ,aAGLnB,UAAQgC,YAAU,SAAAlB,GAM9B,MALH,QAAAA,GAAAmB,SAAAnB,IAEMpE,KAAA6E,QAAAH,YAAPN,GAGUpE,KAAM6E,QAAMH,aAEjBpB,UAAA6C,KAAA,WAED,UAID,QAHFrE,EAAAsE,OAAApG,KAAAqG,WAAAvE,EAAAwE,YAAAtG,KAAAqG,aACLrG,KAAAqG,SAAC,GAAA1B,GAAA3E,KAAA6E,UAEM7E,KAAAqG,UAEFb,aCrOL/F,OAAY,sDAIZ8G,GAAA,SAAA5F,EAAAlB,EAA2BD,iECJ3B2B,QAAA1B,OAAA,0BACAkB,EAAA,uBAEA6F,oBAAA,IAAAC,GAAA,SAAA9F,EAAAlB,EAAAD,IACA,SAAAC,GACA,IACAA,EAAA0B,QAAA1B,OAAA,yBACA,MAAAU,GACAV,EAAA0B,QAAA1B,OAAA,4BAEAA,EAAAiH,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,kCACA","file":"pip-webui-settings.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport './settings_service/index';\nimport './settings_page/index';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './settings_service';\nexport * from './settings_page';","// Prevent junk from going into typescript definitions\n\nimport {ISettingsService, SettingsTab} from '../settings_service/SettingsService';\n\nexport class SettingsPageSelectedTab {\n    public tab: SettingsTab;\n    public tabIndex: number = 0;\n    public tabId: string;\n}\n\ninterface ISettingsPageController {\n    tabs: SettingsTab[];\n    selected: SettingsPageSelectedTab;\n    onDropdownSelect: Function;\n    onNavigationSelect(state: string): void;\n}\n\n\n\n(() => {\n\n    class SettingsPageController implements ISettingsPageController {\n    public tabs: SettingsTab[];\n    public selected: SettingsPageSelectedTab;\n    public onDropdownSelect: Function;\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        pipNavService: pip.nav.INavService,\n        pipSettings: ISettingsService,\n        $rootScope: ng.IRootScopeService, \n        $timeout: angular.ITimeoutService\n    ) {\n\n        this.tabs = _.filter(pipSettings.getTabs(), (tab: SettingsTab) => {\n                if (tab.visible === true && (tab.access ? tab.access($rootScope['$user'], tab) : true)) {\n                    return tab;\n                }\n            });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = new SettingsPageSelectedTab();\n        if (this.$state.current.name !== 'settings') {\n            this.initSelect(this.$state.current.name);\n        } else if (this.$state.current.name === 'settings' && pipSettings.getDefaultTab()) {\n            this.initSelect(pipSettings.getDefaultTab().state);\n        } else {\n            $timeout(() => {\n                if (pipSettings.getDefaultTab()) {\n                    this.initSelect(pipSettings.getDefaultTab().state);\n                }\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                     this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n\n        pipNavService.icon.showMenu();\n        pipNavService.breadcrumb.text = \"Settings\";\n        pipNavService.actions.hide();\n        pipNavService.appbar.removeShadow();\n        \n        this.onDropdownSelect = (state) => {\n            this.onNavigationSelect(state.state);\n        }\n    }\n\n    private initSelect(state: string): void {\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\n            return tab.state === state;\n        });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n    }\n\n    public onNavigationSelect(state: string): void {\n        this.initSelect(state);\n\n        if (this.selected.tab) {\n            this.$state.go(state);\n        }\n    }\n}\n\nangular.module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n})();","'use strict';\n\nfunction configureSettingsPageRoutes($stateProvider) {\n    $stateProvider\n        .state('settings', {\n            url: '/settings?party_id',\n            auth: true,\n            controllerAs: 'vm',\n            controller: 'pipSettingsPageController',\n            templateUrl: 'settings_page/SettingsPage.html'\n        });\n       \n}\n\nangular.module('pipSettings.Page')\n    .config(configureSettingsPageRoutes);\n","'use strict';\n\nangular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPageController';\nimport './SettingsPageRoutes';","'use strict';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public index: number;\n    public access: Function;\n    public visible: boolean;\n    public stateConfig: SettingsStateConfig;\n}\n\nexport class SettingsStateConfig {\n    public url: string;\n    public auth: boolean = false;\n    public templateUrl?: string;\n    public template?: string;\n}\n\nexport interface ISettingsService {\n    getDefaultTab(): SettingsTab;\n    showTitleText (newTitleText: string): void;\n    showTitleLogo(newTitleLogo);\n    setDefaultTab(name: string): void;\n    showNavIcon(value: boolean): boolean;\n    getTabs(): SettingsTab[];\n}\n\nexport interface ISettingsProvider extends ng.IServiceProvider {\n    getDefaultTab(): SettingsTab;\n    addTab(tabObj: SettingsTab): void;\n    setDefaultTab(name: string): void;\n    getFullStateName(state: string): string;\n}\n\nexport class SettingsConfig {\n\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n\n}\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n\n    public constructor(config: SettingsConfig) {\n        \"ngInject\";\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public getTabs(): SettingsTab[] {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\n\n    public getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: SettingsTab): void {\n        let existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //this.$stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n\n    private validateTab(tabObj: SettingsTab): void {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get(): ISettingsService {\n        \"ngInject\";\n\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\n            this._service = new SettingsService(this._config);\n        }\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","'use strict';\n\nangular.module('pipSettings.Service', []);\n\nimport './SettingsService';","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"]}