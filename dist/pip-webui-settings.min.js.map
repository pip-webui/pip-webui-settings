{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/SettingsModule.ts","src/settings.ts","src/settings_page/SettingsPageController.ts","src/settings_page/SettingsPageRoutes.ts","src/settings_page/index.ts","src/settings_service/SettingsService.ts","src/settings_service/index.ts","src/user_settings/user_settings.ts","src/user_settings/user_settings_basic_info.ts","src/user_settings/user_settings_change_password.ts","src/user_settings/user_settings_sessions.ts","src/user_settings/user_settings_strings.ts","src/user_settings/user_settings_verify_email.ts","temp/pip-webui-settings-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","settings","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","SettingsPageController","$log","$q","$state","pipNavService","pipSettings","$rootScope","$timeout","_this","_log","_q","_state","tabs","_","filter","getTabs","tab","visible","access","$user","sortBy","selected","current","name","initSelect","getDefaultTab","state","icon","showMenu","breadcrumb","text","actions","hide","appbar","removeShadow","onDropdownSelect","onNavigationSelect","$inject","prototype","find","tabIndex","indexOf","tabId","go","controller","4","configureSettingsPageRoutes","$stateProvider","url","auth","controllerAs","templateUrl","5","7","SettingsTab","SettingsConfig","titleText","titleLogo","isNavIcon","SettingsService","config","_rootScope","_config","getFullStateName","setDefaultTab","defaultTab","p","cloneDeep","showTitleText","newTitleText","showTitleLogo","newTitleLogo","showNavIcon","value","undefined","SettingsProvider","_stateProvider","addTab","tabObj","existingTab","validateTab","push","title","index","stateConfig","isObject","isFunction","$get","_service","provider","9","pipSettingsProvider","$scope","$mdDialog","$window","$mdTheming","pipTranslate","pipTransaction","pipTheme","pipToasts","pipDataUser","pipDataParty","pipFormErrors","onPictureChanged","picture","save","$broadcast","error","onPictureCreated","$event","sender","saveChanges","form","$setSubmitted","$party","type","$invalid","loc_pos","party","toJson","err","originalParty","tid","transaction","begin","updateParty","data","aborted","end","nameCopy","message","String","status","status_code","fromJson","id","updateUser","item","use","language","theme","setCurrentTheme","showNotification","translate","onChangePassword","event","show","email","answer","onVerifyEmail","targetEvent","user","email_ver","genders","translateSet","languages","themes","keys","omit","THEMES","get","onExit","errorsWithHint","debounce","onChangeBasicInfo","11","onCancel","cancel","repeat","changePasData","new_password","showRepeatHint","$setValidity","onApply","onCheckRepeatPassword","changePassword","setFormError","1107","1105","errorsRepeatWithHint","formPart","thisModule","pipDataSessionProvider","resolve","sessions","readSessionsResolver","sessionId","readSessionIdResolver","pipDataSession","eachSeries","session","callback","removeSession","without","onRemove","onRemoveAll","13","pipTranslateProvider","translations","SETTINGS_TITLE","SETTINGS_BASIC_INFO_TITLE","SETTINGS_ACTIVE_SESSIONS_TITLE","SETTINGS_BASIC_INFO_FULL_NAME","SETTINGS_BASIC_INFO_VERIFY_HINT","SETTINGS_BASIC_INFO_VERIFY_CODE","SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_CHANGE_PASSWORD","SETTINGS_BASIC_INFO_NAME_HINT","SETTINGS_BASIC_INFO_WORDS_ABOUT_ME","SETTINGS_BASIC_INFO_GENDER","SETTINGS_BASIC_INFO_BIRTHDAY","SETTINGS_BASIC_INFO_LOCATION","SETTINGS_BASIC_INFO_PRIMARY_EMAIL","SETTINGS_BASIC_INFO_FROM","SETTINGS_BASIC_INFO_USER_ID","SETTINGS_CHANGE_PASSWORD_TITLE","SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD","SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD","SETTINGS_ACTIVE_SESSIONS_SUBTITLE","SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION","SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS","SETTINGS_ACTIVE_SESSION_OS","SETTINGS_ACTIVE_SESSION_ACTIVE","SETTINGS_BLACKLIST_TITLE","SETTINGS_BLACKLIST_SUBTITLE","SETTINGS_BLACKLIST_UNBLOCK","SETTINGS_BLACKLIST_EMPTY","SETTINGS_CONTACT_INFO_TITLE","SETTINGS_CONTACT_INFO_EMAIL","SETTINGS_CONTACT_INFO_ADD_EMAIL","SETTINGS_CONTACT_INFO_ADD_PHONE","SETTINGS_CONTACT_INFO_ADD_ADDRESS","SETTINGS_CONTACT_INFO_ADD_ACCOUNT","SETTINGS_CONTACT_INFO_ADD_URL","SETTINGS_CONTACT_INFO_ADDRESS","SETTINGS_CONTACT_INFO_PHONE","SETTINGS_CONTACT_INFO_ACCOUNT_NAME","SETTINGS_CONTACT_INFO_URL","THEME","HINT_PASSWORD","HINT_REPEAT_PASSWORD","ERROR_WRONG_PASSWORD","ERROR_IDENTICAL_PASSWORDS","REPEAT_PASSWORD_INVALID","ERROR_EMAIL_INVALID","14","onAbort","abort","requestEmailVerification","result","onVerify","verifyEmail","verifyData","1106","1103","emailVerified","onRequestVerificationClick","15","run","$templateCache","put"],"mappings":"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","file":"pip-webui-settings.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport './settings_service/index';\nimport './settings_page/index';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './settings_service';\nexport * from './settings_page';","﻿/**\n * @file Registration of settings components\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    angular.module('pipSettings', [\n        'pipSettings.Service',\n        'pipSettings.Page'\n    ]);\n\n})();\n","// Prevent junk from going into typescript definitions\n(() => {\n\nclass SettingsPageController {\n    private _log: ng.ILogService;\n    private _q: ng.IQService;\n    private _state: ng.ui.IStateService;\n\n    public tabs: any;\n    public selected: any;\n    public onDropdownSelect: any;\n\n    constructor(\n        $log: ng.ILogService,\n        $q: ng.IQService,\n        $state: ng.ui.IStateService,\n        pipNavService,\n        pipSettings,\n        $rootScope, \n        $timeout\n    ) {\n        this._log = $log;\n        this._q = $q;\n        this._state = $state;\n\n        this.tabs = _.filter(pipSettings.getTabs(), function (tab: any) {\n                if (tab.visible === true && (tab.access ? tab.access($rootScope.$user, tab) : true)) {\n                    return tab;\n                }\n            });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = {};\n        if (this._state.current.name !== 'settings') {\n            this.initSelect(this._state.current.name);\n        } else if (this._state.current.name === 'settings' && pipSettings.getDefaultTab()) {\n            this.initSelect(pipSettings.getDefaultTab().state);\n        } else {\n            $timeout(function () {\n                if (pipSettings.getDefaultTab()) {\n                    this.initSelect(pipSettings.getDefaultTab().state);\n                }\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                     this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n\n        pipNavService.icon.showMenu();\n        pipNavService.breadcrumb.text = \"Settings\";\n        pipNavService.actions.hide();\n        pipNavService.appbar.removeShadow();\n        \n        this.onDropdownSelect = (state) => {\n            this.onNavigationSelect(state.state);\n        }\n    }\n\n    private initSelect(state: string) {\n        this.selected.tab = _.find(this.tabs, function (tab: any) {\n                    return tab.state === state;\n                });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n    }\n\n    public onNavigationSelect(state: string) {\n        this.initSelect(state);\n\n        if (this.selected.tab) {\n            this._state.go(state);\n        }\n    }\n}\n\nangular.module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n})();","'use strict';\n\nfunction configureSettingsPageRoutes($stateProvider) {\n    $stateProvider\n        .state('settings', {\n            url: '/settings?party_id',\n            auth: true,\n            controllerAs: 'vm',\n            controller: 'pipSettingsPageController',\n            templateUrl: 'settings_page/SettingsPage.html'\n        });\n       \n}\n\nangular.module('pipSettings.Page')\n    .config(configureSettingsPageRoutes);\n","'use strict';\n\nangular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPageController';\nimport './SettingsPageRoutes';","'use strict';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public index: string;\n    public access: boolean;\n    public visible: boolean;\n    public stateConfig: any;\n}\n\nexport interface ISettingsService {\n    getDefaultTab();\n    showTitleText (newTitleText);\n    showTitleLogo(newTitleLogo);\n    setDefaultTab(name: string);\n    showNavIcon(value);\n    getTabs();\n}\n\nexport interface ISettingsProvider extends ng.IServiceProvider {\n    getDefaultTab(): SettingsTab;\n    addTab(tabObj: any);\n    setDefaultTab(name: string): void;\n    getFullStateName(state: string): string;\n}\n\nexport class SettingsConfig {\n\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n\n}\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor($rootScope: ng.IRootScopeService, \n                       config: SettingsConfig) {\n        \"ngInject\";\n        this._rootScope = $rootScope;\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, function (tab) {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab() {\n        var defaultTab;\n        defaultTab = _.find(this._config.tabs, function (p) {\n            return p.state === defaultTab;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string) {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean) {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n    public getTabs() {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n    private _stateProvider: ng.ui.IStateProvider;\n\n    constructor($stateProvider: ng.ui.IStateProvider) {\n        this._stateProvider = $stateProvider;\n    }\n\n    public getFullStateName(state): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        var defaultTab;\n\n        defaultTab = _.find(this._config.tabs, function (p) {\n            return p.state === defaultTab;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: any) {\n        var existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, function (p) {\n            return p.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this._stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, function (tab) {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //this._stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n\n    private validateTab(tabObj: SettingsTab) {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value) {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get($rootScope, $state) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SettingsService($rootScope, this._config);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","'use strict';\n\nangular.module('pipSettings.Service', []);\n\nimport './SettingsService';","/**\n * @file Settings tab logic\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    angular.module('pipUserSettings', [\n        'ngMaterial', 'pipData',\n        'pipSettings.Service',\n        'pipSettings.Page',\n\n        'pipUserSettings.Strings',\n        'pipUserSettings.Sessions',\n        'pipUserSettings.BasicInfo',\n        'pipSettings.Templates'\n    ]);\n\n})();\n","/**\n * @file Settings basic info controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.BasicInfo',\n        ['pipUserSettings.ChangePassword', 'pipUserSettings.VerifyEmail', \n            'pipSettings.Service', 'pipSettings.Page',]);\n\n    thisModule.config(function (pipSettingsProvider) {\n        pipSettingsProvider.addTab({\n            state: 'basic_info',\n            index: 1,\n            title: 'SETTINGS_BASIC_INFO_TITLE',\n            stateConfig: {\n                url: '/basic_info',\n                controller: 'pipUserSettingsBasicInfoController',\n                templateUrl: 'user_settings/user_settings_basic_info.html',\n                auth: true\n            }\n        });\n\n        pipSettingsProvider.setDefaultTab('basic_info');\n    });\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n     *\n     * @description\n     * Controller for the predefined 'basic_info' state.\n     * Provides sync changes user's profile with remote profile.\n     * On state exit everything is saved on the server.\n     */\n    thisModule.controller('pipUserSettingsBasicInfoController',\n        function ($scope, $rootScope, $mdDialog, $state, $window, $timeout, $mdTheming,\n                  pipTranslate, pipTransaction, pipTheme,\n                  pipToasts, pipDataUser, pipDataParty, pipFormErrors) {\n\n            try {\n                $scope.originalParty = angular.toJson($rootScope.$party);\n            } catch (err) {\n                throw err;\n            }\n\n            $scope.nameCopy = $rootScope.$party.name;\n\n            $timeout(function () {\n                $scope.loc_pos = $rootScope.$party.loc_pos;\n            });\n\n            $scope.genders = pipTranslate.translateSet(['male', 'female', 'n/s']);\n            $scope.languages = pipTranslate.translateSet(['ru', 'en']);\n\n            $scope.transaction = pipTransaction('settings.basic_info', $scope);\n\n            $scope.themes = _.keys(_.omit($mdTheming.THEMES, 'default'));\n\n            $state.get('settings.basic_info').onExit = saveChanges;\n\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            /** @see onChangePassword */\n            $scope.onChangePassword = onChangePassword;\n            /** @see onVerifyEmail */\n            $scope.onVerifyEmail = onVerifyEmail;\n            /** @see onPictureCreated */\n            $scope.onPictureCreated = onPictureCreated;\n            /** @see onPictureChanged */\n            $scope.onPictureChanged = onPictureChanged;\n            /** @see updateUser */\n            $scope.onChangeUser = _.debounce(updateUser, 2000);\n            /** @see saveChanges */\n            $scope.onChangeBasicInfo = _.debounce(saveChanges, 2000);\n\n            function onPictureChanged() {\n                $scope.picture.save(\n                    function () {\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\n                    },\n                    function (error) {\n                        return new Error(error);\n                    }\n                );\n            }\n\n            function onPictureCreated($event) {\n                $scope.picture = $event.sender;\n                $scope.picture.save(\n                    function () {\n                        $rootScope.$broadcast('pipPartyAvatarUpdated');\n                    },\n                    function (error) {\n                        return new Error(error);\n                    }\n                );\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeBasicInfo\n             *\n             * @description\n             * Saves changes onto server.\n             * This method responses on change of the input information.\n             * It is updated user's party profile. Also it updates user's profile in $rootScope.\n             */\n            function saveChanges() {\n                if ($scope.form) {\n                    $scope.form.$setSubmitted();\n                }\n\n                if ($rootScope.$party) {\n\n                    if ($rootScope.$party.type === 'person' && $scope.form.$invalid) {\n                        return;\n                    }\n\n                    // Check to avoid unnecessary savings\n                    $rootScope.$party.loc_pos = $scope.loc_pos;\n                    try {\n                        var party = angular.toJson($rootScope.$party);\n                    } catch (err) {\n                        throw err;\n                    }\n\n                    if (party !== $scope.originalParty) {\n                        var tid = $scope.transaction.begin('UPDATING');\n\n                        pipDataParty.updateParty($rootScope.$party,\n                            function (data) {\n                                if ($scope.transaction.aborted(tid)) {\n                                    return;\n                                }\n                                $scope.transaction.end();\n\n                                $scope.originalParty = party;\n                                $scope.nameCopy = data.name;\n                            }, function (error) {\n                                $scope.transaction.end(error);\n                                $scope.message = String() + 'ERROR_' + error.status || error.data.status_code;\n                                $rootScope.$party = angular.fromJson($scope.originalParty);\n                            }\n                        );\n                    }\n                }\n\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangeUser\n             *\n             * @description\n             * Saves changes onto server.\n             * This method responses on change of the user's profile information.\n             * Also it updates user's profile in $rootScope.\n             */\n            function updateUser() {\n                var tid = $scope.transaction.begin('RequestEmailVerification');\n\n                if ($rootScope.$user.id === $rootScope.$party.id) {\n                    pipDataUser.updateUser(\n                        {\n                            item: $rootScope.$user\n                        },\n                        function (data) {\n                            if ($scope.transaction.aborted(tid)) {\n                                return;\n                            }\n                            $scope.transaction.end();\n\n                            pipTranslate.use(data.language);\n                            $rootScope.$user.language = data.language;\n                            $rootScope.$user.theme = data.theme;\n                            if ($rootScope.$user.theme) {\n                                pipTheme.setCurrentTheme($rootScope.$user.theme, true);\n                            }\n\n                        }, function (error) {\n                            var message;\n                            \n                            $scope.transaction.end(error);\n                            message = String() + 'ERROR_' + error.status || error.data.status_code;\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    );\n                }\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onChangePassword\n             *\n             * @description\n             * It opens a dialog panel to change password.\n             *\n             * @param {Object} event    Triggered event object\n             */\n            function onChangePassword(event) {\n                var message;\n\n                $mdDialog.show({\n                    templateUrl: 'user_settings/user_settings_change_password.html',\n                    controller: 'pipUserSettingsChangePasswordController',\n                    targetEvent: event,\n                    locals: {email: $rootScope.$party.email}\n                }).then(\n                    function (answer) {\n                        if (answer) {\n                            message = String() + 'RESET_PWD_SUCCESS_TEXT';\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    });\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.BasicInfo:pipUserSettingsBasicInfoController\n             * @name pipUserSettings.BasicInfo.pipUserSettingsBasicInfoController:onVerifyEmail\n             *\n             * @description\n             * It opens a dialog panel to change password.\n             *\n             * @param {Object} event    Triggered event object\n             */\n            function onVerifyEmail(event) {\n                var message;\n\n                $mdDialog.show({\n                    templateUrl: 'user_settings/user_settings_verify_email.html',\n                    controller: 'pipUserSettingsVerifyEmailController',\n                    targetEvent: event,\n                    locals: {email: $rootScope.$party.email}\n                }).then(\n                    function (answer) {\n                        $scope.user.email_ver = answer;\n                        if (answer) {\n                            message = String() + 'VERIFY_EMAIL_SUCCESS_TEXT';\n                            pipToasts.showNotification(pipTranslate.translate(message), null, null, null);\n                        }\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","/**\n * @file Settings change password controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.ChangePassword', []);\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n     *\n     * @description\n     * Controller for dialog panel of password change.\n     */\n    thisModule.controller('pipUserSettingsChangePasswordController',\n        function ($scope, $rootScope, $mdDialog, email, pipDataUser, pipTransaction, pipFormErrors) {\n\n            $scope.transaction = pipTransaction('settings.change_password', $scope);\n            $scope.errorsRepeatWithHint = function (form, formPart) {\n                if ($scope.showRepeatHint) {\n                    return pipFormErrors.errorsWithHint(form, formPart);\n                }\n\n                return {};\n            };\n            $scope.showRepeatHint = true;\n            $scope.changePasData = {};\n\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            $scope.onCancel = onCancel;\n            $scope.onCheckRepeatPassword = onCheckRepeatPassword;\n            $scope.onApply = onApply;\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCancel\n             *\n             * @description\n             * Closes opened dialog panel.\n             */\n            function onCancel() {\n                $mdDialog.cancel();\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onCheckRepeatPassword\n             *\n             * @description\n             * Validates a password typed into password fields.\n             */\n            function onCheckRepeatPassword() {\n                if ($scope.changePasData) {\n                    if ($scope.repeat === $scope.changePasData.new_password || $scope.repeat === '' || !$scope.repeat) {\n                        $scope.form.repeat.$setValidity('repeat', true);\n                        if ($scope.repeat === $scope.changePasData.new_password) {\n                            $scope.showRepeatHint = false;\n                        } else {\n                            $scope.showRepeatHint = true;\n                        }\n                    } else {\n                        $scope.showRepeatHint = true;\n                        $scope.form.repeat.$setValidity('repeat', false);\n                    }\n                }\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.ChangePassword:pipUserSettingsChangePasswordController\n             * @name pipUserSettings.ChangePassword.pipUserSettingsChangePasswordController:onApply\n             *\n             * @description\n             * Approves password change and sends request to the server on password change.\n             */\n            function onApply() {\n                $scope.onCheckRepeatPassword();\n\n                if ($scope.form.$invalid) {\n                    return;\n                }\n\n                if (!$scope.transaction.begin('CHANGE_PASSWORD')) {\n                    return;\n                }\n\n                $scope.changePasData.email = email;\n\n                pipDataUser.changePassword(\n                    $scope.changePasData,\n                    function () {\n                        $scope.transaction.end();\n                        $mdDialog.hide(true);\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n                        pipFormErrors.setFormError(\n                            $scope.form, error,\n                            {\n                                1107: 'oldPassword',\n                                1105: 'newPassword'\n                            }\n                        );\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","/**\n * @file Settings sessions controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Sessions', [\n        'pipSettings.Service', 'pipSettings.Page',]);\n\n    thisModule.config(function (pipSettingsProvider, pipDataSessionProvider) {\n        pipSettingsProvider.addTab({\n            state: 'sessions',\n            index: 3,\n            title: 'SETTINGS_ACTIVE_SESSIONS_TITLE',\n            stateConfig: {\n                url: '/sessions',\n                controller: 'pipUserSettingsSessionsController',\n                templateUrl: 'user_settings/user_settings_sessions.html',\n                auth: true,\n                resolve: {\n                    sessions: pipDataSessionProvider.readSessionsResolver,\n                    sessionId: pipDataSessionProvider.readSessionIdResolver\n                }\n            }\n        });\n    });\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.Sessions:pipUserSettingsSessionsController\n     *\n     * @description\n     * Controller provides an interface for managing active sessions.\n     */\n    thisModule.controller('pipUserSettingsSessionsController',\n        function ($scope, pipTransaction, pipDataSession, sessions, sessionId) {\n\n            $scope.sessionId = sessionId;\n            $scope.transaction = pipTransaction('settings.sessions', $scope);\n            $scope.sessions = sessions;\n\n            $scope.onRemoveAll = onRemoveAll;\n            $scope.onRemove = onRemove;\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemoveAll\n             *\n             * @description\n             * Closes all active session.\n             */\n            function onRemoveAll() {\n                var tid = $scope.transaction.begin('REMOVING');\n\n                async.eachSeries(\n                    $scope.sessions,\n                    function (session: any, callback) {\n                        if (session.id == $scope.sessionId) {\n                            callback();\n                        } else {\n                            pipDataSession.removeSession(\n                                {\n                                    session: session\n                                },\n                                function () {\n                                    $scope.sessions = _.without($scope.sessions, session);\n                                    callback();\n                                },\n                                function (error) {\n                                    callback;\n                                }\n                            );\n                        }\n                    },\n                    function (err) {\n                        if (err) {\n                            $scope.transaction.end(err);\n                        }\n                        if ($scope.transaction.aborted(tid)) {\n                            return;\n                        }\n                        $scope.transaction.end();\n                    });                \n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.Sessions:pipUserSettingsSessionsController\n             * @name pipUserSettings.Sessions.pipUserSettingsSessionsController:onRemove\n             *\n             * @description\n             * Closes passed session.\n             *\n             * @param {Object} session  Session configuration object\n             */\n            function onRemove(session, callback) {\n                if (session.id === $scope.sessionId) {\n                    return;\n                }\n                var tid = $scope.transaction.begin('REMOVING');\n                pipDataSession.removeSession(\n                    {\n                        session: session\n                    },\n                    function () {\n                        if ($scope.transaction.aborted(tid)) {\n                            return;\n                        }\n                        $scope.transaction.end();\n\n                        $scope.sessions = _.without($scope.sessions, session);\n                        if (callback) {\n                            callback();\n                        }\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n                        $scope.message = 'ERROR_' + error.status || error.data.status_code;\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","/**\n * @file Settings string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* eslint-disable quote-props */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.Strings', ['pipTranslate']);\n\n    thisModule.config(function (pipTranslateProvider) {\n\n        // Set translation strings for the module\n        pipTranslateProvider.translations('en', {\n            'SETTINGS_TITLE': 'Settings',\n            'SETTINGS_BASIC_INFO_TITLE': 'Basic info',\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Active sessions',\n\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Full name',\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Please, verify your email address.',\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Verify email address',\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Your password was changed on ',\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Change your password',\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Please, use your real name to let other people know who you are.',\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Few words about yourself',\n\n            'SETTINGS_BASIC_INFO_GENDER': 'Gender',\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Birthday',\n            'SETTINGS_BASIC_INFO_LOCATION': 'Current location',\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Primary email',\n            'SETTINGS_BASIC_INFO_FROM': 'User since ',\n            'SETTINGS_BASIC_INFO_USER_ID': 'User ID',\n\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Change password',\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'New password',\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Repeat password',\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Current password',\n\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': ' If you notice any unfamiliar devices or locations, click' +\n            '\"Close Session\" to end the session.',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Close session',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Close active sessions',\n            'SETTINGS_ACTIVE_SESSION_OS': 'OS: ',\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'active',\n\n            'SETTINGS_BLACKLIST_TITLE': 'Blacklist',\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Parties from blacklist will not be able to send you invitations and ' +\n            'private messages.',\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Unblock',\n            'SETTINGS_BLACKLIST_EMPTY': 'You have no blocked parties',\n\n            'SETTINGS_CONTACT_INFO_TITLE': 'Contact info',\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Email',\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Add email',\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Add phone',\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Add address',\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Add account',\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Add URL',\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Address',\n            'SETTINGS_CONTACT_INFO_PHONE': 'Phone',\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Account name',\n            'SETTINGS_CONTACT_INFO_URL': 'URL',\n\n            'THEME': 'Theme',\n\n            'HINT_PASSWORD': 'Minimum 6 characters',\n            'HINT_REPEAT_PASSWORD': 'Repeat password',\n\n            'ERROR_WRONG_PASSWORD': 'Wrong password',\n            'ERROR_IDENTICAL_PASSWORDS': 'Old and new passwords are identical',\n            'REPEAT_PASSWORD_INVALID': 'Password does not match',\n            'ERROR_EMAIL_INVALID': 'Please, enter a valid email'\n        });\n\n        pipTranslateProvider.translations('ru', {\n            'SETTINGS_TITLE': 'Настройки',\n            'SETTINGS_BASIC_INFO_TITLE': 'Основные данные',\n            'SETTINGS_ACTIVE_SESSIONS_TITLE': 'Активные сессии',\n\n            'SETTINGS_BASIC_INFO_FULL_NAME': 'Полное имя',\n            'SETTINGS_BASIC_INFO_NAME_HINT': 'Пожалуйста, используйте реальное имя, чтоб люди могли вас узнать',\n            'SETTINGS_BASIC_INFO_VERIFY_HINT': 'Пожалуйста, подтвердите адрес своей электронной почты',\n            'SETTINGS_BASIC_INFO_VERIFY_CODE': 'Подтвердите адрес эл.почты',\n            'SETTINGS_BASIC_INFO_DATE_CHANGE_PASSWORD': 'Ваш пароль был изменен ',\n            'SETTINGS_BASIC_INFO_CHANGE_PASSWORD': 'Поменять пароль',\n\n            'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME': 'Несколько слов о себе',\n            'SETTINGS_BASIC_INFO_GENDER': 'Пол',\n            'SETTINGS_BASIC_INFO_BIRTHDAY': 'Дата рождения',\n            'SETTINGS_BASIC_INFO_LOCATION': 'Текущее местонахождение',\n            'SETTINGS_BASIC_INFO_PRIMARY_EMAIL': 'Основной адрес эл. почты',\n            'SETTINGS_BASIC_INFO_FROM': 'Начиная с',\n            'SETTINGS_BASIC_INFO_USER_ID': 'Личный код',\n\n            'SETTINGS_CHANGE_PASSWORD_TITLE': 'Изменить пароль',\n            'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD': 'Новый пароль',\n            'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD': 'Повтор',\n            'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD': 'Текущий пароль',\n\n            'SETTINGS_ACTIVE_SESSIONS_SUBTITLE': 'Если вы заметили какие-либо незнакомые устройства или ' +\n            'месторасположение, нажмите кнопку \"Закончить сеанс\", чтобы завершить сеанс.',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION': 'Закрыть сессию',\n            'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS': 'Закрыть активные сессии',\n            'SETTINGS_ACTIVE_SESSION_OS': 'ОС: ',\n            'SETTINGS_ACTIVE_SESSION_IP': 'IP: ',\n            'SETTINGS_ACTIVE_SESSION_ACTIVE': 'Активно',\n\n            'SETTINGS_BLACKLIST_TITLE': 'Блокировки',\n            'SETTINGS_BLACKLIST_SUBTITLE': 'Участники из черного списка не смогут' +\n            ' посылать вам приглашения и личные сообщения.',\n            'SETTINGS_BLACKLIST_UNBLOCK': 'Разблокировать',\n            'SETTINGS_BLACKLIST_EMPTY': 'У вас нет заблокированных участников',\n\n            'SETTINGS_CONTACT_INFO_TITLE': 'Контакты',\n            'SETTINGS_CONTACT_INFO_EMAIL': 'Адрес электронной почты',\n            'SETTINGS_CONTACT_INFO_ADD_EMAIL': 'Добавить адрес эл. почты',\n            'SETTINGS_CONTACT_INFO_ADD_PHONE': 'Добавить телефон',\n            'SETTINGS_CONTACT_INFO_ADD_ADDRESS': 'Добавить адрес',\n            'SETTINGS_CONTACT_INFO_ADD_ACCOUNT': 'Добавить аккаунт',\n            'SETTINGS_CONTACT_INFO_ADD_URL': 'Добавить веб-сайт',\n            'SETTINGS_CONTACT_INFO_ADDRESS': 'Адрес',\n            'SETTINGS_CONTACT_INFO_PHONE': 'Телефон',\n            'SETTINGS_CONTACT_INFO_ACCOUNT_NAME': 'Учетка в мессенджере',\n            'SETTINGS_CONTACT_INFO_URL': 'Веб сайт',\n\n            'THEME': 'Тема',\n\n            'HINT_PASSWORD': 'Минимум 6 знаков',\n            'HINT_REPEAT_PASSWORD': 'Повторите пароль',\n\n            'ERROR_WRONG_PASSWORD': 'Неправильный пароль',\n            'ERROR_IDENTICAL_PASSWORDS': 'Старый и новый пароли идентичны',\n            'REPEAT_PASSWORD_INVALID': 'Пароль не совпадает',\n            'ERROR_EMAIL_INVALID': 'Пожалуйста, введите правильный почт.адрес'\n        });\n    });\n\n})();\n","/**\n * @file Settings verify email controller\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipUserSettings.VerifyEmail', []);\n\n    /**\n     * @ngdoc controller\n     * @name pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n     *\n     * @description\n     * Controller for verify email dialog panel.\n     */\n    thisModule.controller('pipUserSettingsVerifyEmailController',\n        function ($scope, $rootScope, $mdDialog, pipTransaction, pipFormErrors, pipDataUser, email) {\n\n            $scope.emailVerified = false;\n            $scope.data = {\n                email: email,\n                code: ''\n            };\n            $scope.transaction = pipTransaction('settings.verify_email', $scope);\n\n            /** @see onAbort */\n            $scope.onAbort = onAbort;\n            /** @see onRequestVerificationClick*/\n            $scope.onRequestVerificationClick = onRequestVerificationClick;\n            $scope.errorsWithHint = pipFormErrors.errorsWithHint;\n            /** @see onVerify */\n            $scope.onVerify = onVerify;\n            /** @see onCancel */\n            $scope.onCancel = onCancel;\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onAbort\n             *\n             * @description\n             * Aborts a verify request.\n             */\n            function onAbort() {\n                $scope.transaction.abort();\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onCancel\n             *\n             * @description\n             * Closes opened dialog panel.\n             */\n            function onCancel() {\n                $mdDialog.cancel();\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onRequestVerificationClick\n             *\n             * @description\n             * Sends request to verify entered email.\n             */\n            function onRequestVerificationClick() {\n                    var tid = $scope.transaction.begin('RequestEmailVerification');\n\n                pipDataUser.requestEmailVerification(\n                    {},                         \n                    function (result) {\n                            if ($scope.transaction.aborted(tid)) {\n                                return;\n                            }\n                            $scope.transaction.end();\n                        }, \n                        function (error) {\n                            $scope.transaction.end(error);\n                        }\n                    );\n            }\n\n            /**\n             * @ngdoc method\n             * @methodOf pipUserSettings.VerifyEmail:pipUserSettingsVerifyEmailController\n             * @name pipUserSettings.VerifyEmail.pipUserSettingsVerifyEmailController:onVerify\n             *\n             * @description\n             * Initiates request on verify email on the server.\n             */\n            function onVerify() {\n                $scope.form.$setSubmitted();\n\n                if ($scope.form.$invalid) {\n                    return;\n                }\n                var tid = $scope.transaction.begin('Verifying');\n\n                pipDataUser.verifyEmail(\n                    {\n                        email: $scope.data.email,\n                        code: $scope.data.code\n                    }, \n                    function (verifyData) {\n                            if ($scope.transaction.aborted(tid)) {\n                                return;\n                            }\n                            $scope.transaction.end();\n\n                        $mdDialog.hide(true);\n                    },\n                    function (error) {\n                        $scope.transaction.end(error);\n\n                        pipFormErrors.setFormError(\n                            $scope.form, error,\n                            {\n                                1106: 'email',\n                                1103: 'code'\n                            }\n                        );\n\n                    }\n                );\n            }\n        }\n    );\n\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings_page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_basic_info.html',\n    '<form name=\"form\" class=\"w-stretch\" novalidate=\"\"><md-progress-linear class=\"pip-progress-top\" ng-show=\"transaction.busy()\" md-mode=\"indeterminate\"></md-progress-linear><div class=\"layout-row bm12\"><div class=\"md-tile-left\"><pip-avatar-edit pip-party-id=\"$party.id\" pip-created=\"onPictureCreated($event)\" pip-changed=\"onPictureChanged($control, $event)\"></pip-avatar-edit></div><div class=\"md-tile-content tp0 layout-align-center\"><h3 class=\"tm16 bm8 text-one-line\">{{ nameCopy }}</h3><p class=\"text-primary text-overflow m0\">{{::\\'SETTINGS_BASIC_INFO_FROM\\' | translate}} {{$user.signup | formatLongDate }}</p></div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_BASIC_INFO_FULL_NAME\\' | translate}}</label> <input name=\"fullName\" step=\"any\" type=\"text\" tabindex=\"0\" required=\"\" ng-model=\"$party.name\" ng-disabled=\"transaction.busy()\" ng-change=\"onChangeBasicInfo()\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.fullName).hint\">{{::\\'ERROR_FULLNAME_INVALID\\' | translate}}</div></md-input-container><md-input-container class=\"md-block bm0\"><label>{{::\\'SETTINGS_BASIC_INFO_PRIMARY_EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" required=\"\" ng-model=\"$party.email\" ng-change=\"onChangeBasicInfo()\" pip-email-unique=\"{{$party.email}}\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint && !$user.email_ver\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_HINT\\' | translate}}</div><div ng-messages=\"errorsWithHint(form.email)\" ng-hide=\"$party.type ==\\'team\\'\"><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div><div ng-message=\"emailUnique\">{{::\\'ERROR_EMAIL_INVALID\\' | translate}}</div></div></md-input-container><md-button class=\"md-raised bm16 tm8 rm8\" ng-click=\"onVerifyEmail($event)\" ng-hide=\"$user.email_ver || $party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_VERIFY_CODE\\' | translate}}</md-button><md-button ng-click=\"onChangePassword($event)\" class=\"md-raised bm16 tm8\" ng-hide=\"$party.type ==\\'team\\'\">{{::\\'SETTINGS_BASIC_INFO_CHANGE_PASSWORD\\' | translate}}</md-button><md-input-container class=\"md-block flex\"><label>{{::\\'SETTINGS_BASIC_INFO_WORDS_ABOUT_ME\\' | translate }}</label> <textarea ng-model=\"$party.about\" columns=\"1\" ng-change=\"onChangeBasicInfo()\"></textarea></md-input-container><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'GENDER\\' | translate}}</label><md-select ng-model=\"$party.gender\" ng-change=\"onChangeBasicInfo()\" placeholder=\"{{\\'GENDER\\' | translate}}\"><md-option ng-value=\"gender.id\" ng-repeat=\"gender in genders\">{{gender.name}}</md-option></md-select></md-input-container><div ng-hide=\"$party.type ==\\'team\\'\"><p class=\"text-caption text-grey tm0 bm0\">{{::\\'SETTINGS_BASIC_INFO_BIRTHDAY\\' | translate}}</p><pip-date ng-model=\"$party.birthday\" ng-change=\"onChangeBasicInfo()\" pip-time-mode=\"past time-mode=\" past\"=\"\"></pip-date></div><md-input-container class=\"md-block\" ng-hide=\"$party.type ==\\'team\\'\"><label>{{::\\'LANGUAGE\\' | translate}}</label><md-select placeholder=\"{{\\'LANGUAGE\\' | translate}}\" ng-model=\"$user.language\" ng-change=\"onChangeUser()\"><md-option ng-value=\"language.id\" ng-repeat=\"language in languages\">{{language.name}}</md-option></md-select></md-input-container><md-input-container class=\"md-block\" ng-if=\"$party.type !=\\'team\\'\"><label>{{::\\'THEME\\' | translate}}</label><md-select class=\"w-stretch theme-text-primary\" ng-model=\"$user.theme\" ng-change=\"onChangeUser()\" ng-disabled=\"transaction.busy()\"><md-option ng-value=\"theme\" ng-repeat=\"theme in themes\" ng-selected=\"$theme == theme ? true : false\">{{ theme | translate }}</md-option></md-select></md-input-container><pip-location-edit class=\"map-edit bm24-flex\" ng-hide=\"$party.type ==\\'team\\'\" pip-changed=\"onChangeBasicInfo()\" pip-location-name=\"$party.loc_name\" pip-location-pos=\"loc_pos\"></pip-location-edit></form>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_change_password.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><form name=\"form\" ng-submit=\"onApply()\"><div class=\"pip-header\"><h3 class=\"m0\">{{::\\'SETTINGS_CHANGE_PASSWORD_TITLE\\' | translate : module}}</h3></div><div class=\"pip-body\"><div class=\"pip-content\"><div class=\"text-error bm8\" ng-messages=\"form.$serverError\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"md-block\"><label>{{::\\'SETTINGS_CHANGE_PASSWORD_CURRENT_PASSWORD\\' | translate }}</label> <input name=\"oldPassword\" type=\"password\" ng-model=\"changePasData.old_password\" ng-required=\"change_password.$submitted\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.oldPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"ERROR_1107\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{\\'SETTINGS_CHANGE_PASSWORD_NEW_PASSWORD\\' | translate }}</label> <input name=\"newPassword\" type=\"password\" ng-model=\"changePasData.new_password\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\" pip-clear-errors=\"\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.newPassword).hint\">{{ \\'HINT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsWithHint(form, form.newPassword)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"ERROR_1105\">{{::\\'ERROR_IDENTICAL_PASSWORDS\\' | translate }}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{ \\'SETTINGS_CHANGE_PASSWORD_REPEAT_RASSWORD\\' | translate }}</label> <input name=\"repeat\" type=\"password\" ng-model=\"repeat\" ng-change=\"onCheckRepeatPassword()\" ng-required=\"change_password.$submitted\" ng-minlength=\"6\"><div class=\"hint\" ng-if=\"errorsRepeatWithHint(form.repeat).hint\">{{::\\'HINT_REPEAT_PASSWORD\\' | translate }}</div><div ng-messages=\"errorsRepeatWithHint(form.repeat)\"><div ng-message=\"required\">{{::\\'ERROR_REQUIRED\\' | translate }}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate }}</div><div ng-message=\"repeat\">{{::\\'REPEAT_PASSWORD_INVALID\\' | translate }}</div></div></md-input-container></div></div><div class=\"pip-footer\"><div><md-button aria-label=\"xxx\" ng-click=\"onCancel()\">{{::\\'CANCEL\\' | translate }}</md-button><md-button type=\"submit\" class=\"md-accent\" aria-label=\"xxx\">{{::\\'APPLY\\' | translate : module}}</md-button></div></div></form></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_sessions.html',\n    '<md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><div class=\"pip-details-title pip-sessions\"><p class=\"pip-title bm16\">{{::\\'SETTINGS_ACTIVE_SESSIONS_TITLE\\' | translate}}</p><p class=\"pip-subtitle\">{{::\\'SETTINGS_ACTIVE_SESSIONS_SUBTITLE\\' | translate}}</p></div><md-list class=\"w-stretch\"><div ng-repeat=\"session in sessions\"><div class=\"layout-row\" ng-init=\"showBlock = session.id != sessionId\" ng-click=\"showBlock = !showBlock\"><p class=\"m0 text-subhead2 text-overflow max-w50-stretch\">{{::session.client}}</p><p class=\"m0 lp4 text-body1 color-secondary-text flex\">{{::\\'SETTINGS_ACTIVE_SESSION_ACTIVE\\' | translate}}</p><p class=\"m0 text-body1 color-secondary-text\">{{::country}}<md-icon ng-if=\"showBlock\" md-svg-icon=\"icons:triangle-up\"></md-icon><md-icon ng-if=\"!showBlock\" md-svg-icon=\"icons:triangle-down\"></md-icon></p></div><div class=\"layout-row bm8 bp8\" ng-class=\"{\\'divider-bottom\\':!$last}\"><div class=\"flex-50\"><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\">{{session.last_req | date : \\'medium\\'}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_OS\\' | translate}}{{::session.platform}}</p><p class=\"m0 bm4 text-body1 text-overflow color-secondary-text\" ng-show=\"showBlock\">{{::\\'SETTINGS_ACTIVE_SESSION_IP\\' | translate}}{{::session.address}}</p><md-button class=\"md-raised\" ng-show=\"showBlock && session.id != sessionId\" ng-click=\"onRemove(session)\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_SESSION\\' | translate}}</md-button></div><pip-location-ip class=\"map-edit flex-50\" ng-if=\"showBlock\" pip-ipaddress=\"session.address\" pip-extra-info=\"country = extraInfo.country\"></pip-location-ip></div></div></md-list><div class=\"layout-row layout-align-end-center\"><md-button class=\"md-raised\" ng-show=\"sessions.length > 1\" ng-click=\"onRemoveAll()\">{{::\\'SETTINGS_ACTIVE_SESSIONS_CLOSE_ACTIVE_SESSIONS\\' | translate}}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('user_settings/user_settings_verify_email.html',\n    '<md-dialog class=\"pip-dialog layout-column\" width=\"440\"><div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2>{{::\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{::\\'VERIFY_EMAIL_TEXT_1\\' | translate}}</p><form name=\"form\" novalidate=\"\"><div ng-messages=\"form.$serverError\" class=\"text-error bm8\"><div ng-message=\"ERROR_UNKNOWN\">{{ form.$serverError.ERROR_UNKNOWN | translate }}</div></div><md-input-container class=\"display bp4 md-block\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"email\" type=\"email\" ng-model=\"data.email\" required=\"\" step=\"any\" pip-clear-errors=\"\" tabindex=\"1\" ng-disabled=\"transaction.busy()\" pip-test=\"input-email\"><div class=\"hint\" ng-if=\"errorsWithHint(form, form.email).hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"errorsWithHint(form, form.email)\" xng-if=\"!form.email.$pristine\"><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1106\">{{::\\'ERROR_USER_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"md-block\"><label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label> <input name=\"code\" ng-disabled=\"transaction.busy()\" tabindex=\"0\" ng-model=\"data.code\" required=\"\" pip-clear-errors=\"\"><div ng-messages=\"errorsWithHint(form, form.code)\"><div ng-message=\"required\">{{::\\'ERROR_CODE_INVALID\\' | translate }}</div><div ng-message=\"ERROR_1103\">{{::\\'ERROR_CODE_WRONG\\' | translate }}</div></div></md-input-container><p>{{::\\'VERIFY_EMAIL_TEXT_21\\' | translate}} <a ng-click=\"onRequestVerificationClick()\" class=\"pointer\" tabindex=\"0\">{{::\\'VERIFY_EMAIL_RESEND\\' | translate}}</a> {{::\\'VERIFY_EMAIL_TEXT_22\\' | translate}}</p></form></div></div><div class=\"pip-footer\"><md-button ng-click=\"onCancel()\" ng-hide=\"transaction.busy()\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"md-accent\" ng-click=\"onVerify()\" ng-hide=\"transaction.busy()\" tabindex=\"0\" aria-label=\"xxx\" ng-disabled=\"data.code.length == 0 || data.email.length == 0 || (!data.email && form.$pristine) || (!data.code)\">{{::\\'VERIFY\\' | translate}}</md-button><md-button class=\"md-warn\" ng-show=\"transaction.busy()\" ng-click=\"transaction.abort()\" tabindex=\"0\" aria-label=\"xxx\">{{::\\'CANCEL\\' | translate}}</md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"]}