{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/index.ts","src/page/SettingsPage.ts","src/page/SettingsPageRoutes.ts","src/page/index.ts","src/service/SettingsConfig.ts","src/service/SettingsPageSelectedTab.ts","src/service/SettingsService.ts","src/service/SettingsStateConfig.ts","src/service/SettingsTab.ts","src/service/index.ts","temp/pip-webui-settings-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","settings","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","__export","SettingsPageSelectedTab_1","SettingsPageController","$state","pipNavService","pipSettings","$rootScope","$timeout","_this","tabs","_","filter","getTabs","tab","visible","access","sortBy","selected","SettingsPageSelectedTab","current","name","initSelect","getDefaultTab","state","icon","showMenu","breadcrumb","text","actions","hide","appbar","removeShadow","onDropdownSelect","onNavigationSelect","$inject","prototype","find","tabIndex","indexOf","tabId","go","../service/SettingsPageSelectedTab","3","configureSettingsPageRoutes","$stateProvider","url","auth","controllerAs","controller","templateUrl","defineProperty","value","SettingsConfig","titleText","titleLogo","isNavIcon","Object","SettingsConfig_1","SettingsService","config","_config","getFullStateName","setDefaultTab","defaultTab","cloneDeep","showTitleText","newTitleText","showTitleLogo","newTitleLogo","showNavIcon","undefined","SettingsProvider","addTab","tabObj","existingTab","validateTab","push","title","index","stateConfig","isObject","isFunction","$get","isNull","_service","isUndefined","9","SettingsStateConfig","10","SettingsTab","m","p","hasOwnProperty","./SettingsConfig","./SettingsPageSelectedTab","./SettingsService","./SettingsStateConfig","./SettingsTab","12","run","$templateCache","put"],"mappings":"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","file":"pip-webui-settings.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './service';\nimport './page';\n\nangular.module('pipSettings', [\n    'pipSettings.Service',\n    'pipSettings.Page'\n]);\n\nexport * from './service';","import { ISettingsService } from '../service/ISettingsService';\nimport { SettingsTab } from '../service/SettingsTab';\nimport { SettingsPageSelectedTab } from '../service/SettingsPageSelectedTab';\n\ninterface ISettingsPageController {\n    tabs: SettingsTab[];\n    selected: SettingsPageSelectedTab;\n    onDropdownSelect: Function;\n    onNavigationSelect(state: string): void;\n}\n\nclass SettingsPageController implements ISettingsPageController {\n    public tabs: SettingsTab[];\n    public selected: SettingsPageSelectedTab;\n    public onDropdownSelect: Function;\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        pipNavService: pip.nav.INavService,\n        pipSettings: ISettingsService,\n        $rootScope: ng.IRootScopeService, \n        $timeout: angular.ITimeoutService\n    ) {\n\n        this.tabs = _.filter(pipSettings.getTabs(), (tab: SettingsTab) => {\n                if (tab.visible === true && (tab.access ? tab.access($rootScope['$user'], tab) : true)) {\n                    return tab;\n                }\n            });\n\n        this.tabs = _.sortBy(this.tabs, 'index');\n\n        this.selected = new SettingsPageSelectedTab();\n        if (this.$state.current.name !== 'settings') {\n            this.initSelect(this.$state.current.name);\n        } else if (this.$state.current.name === 'settings' && pipSettings.getDefaultTab()) {\n            this.initSelect(pipSettings.getDefaultTab().state);\n        } else {\n            $timeout(() => {\n                if (pipSettings.getDefaultTab()) {\n                    this.initSelect(pipSettings.getDefaultTab().state);\n                }\n                if (!pipSettings.getDefaultTab() && this.tabs.length > 0) {\n                     this.initSelect(this.tabs[0].state);\n                }\n            });\n        }\n\n        pipNavService.icon.showMenu();\n        pipNavService.breadcrumb.text = \"Settings\";\n        pipNavService.actions.hide();\n        pipNavService.appbar.removeShadow();\n        \n        this.onDropdownSelect = (state) => {\n            this.onNavigationSelect(state.state);\n        }\n    }\n\n    private initSelect(state: string): void {\n        this.selected.tab = _.find(this.tabs, (tab: SettingsTab) => {\n            return tab.state === state;\n        });\n        this.selected.tabIndex = _.indexOf(this.tabs, this.selected.tab);\n        this.selected.tabId = state;\n        this.$state.go(this.selected.tabId);\n    }\n\n    public onNavigationSelect(state: string): void {\n        this.initSelect(state);\n\n        if (this.selected.tab) {\n            this.$state.go(state);\n        }\n    }\n}\n\nangular\n    .module('pipSettings.Page')\n    .controller('pipSettingsPageController', SettingsPageController);\n","{\n    function configureSettingsPageRoutes($stateProvider) {\n        $stateProvider\n            .state('settings', {\n                url: '/settings?party_id',\n                auth: true,\n                controllerAs: 'vm',\n                controller: 'pipSettingsPageController',\n                templateUrl: 'page/SettingsPage.html'\n            });\n\n    }\n\n    angular.module('pipSettings.Page')\n        .config(configureSettingsPageRoutes);\n}\n","angular.module('pipSettings.Page', [\n    'ui.router', \n    'pipSettings.Service',\n    'pipNav', \n    'pipSelected',\n    'pipTranslate',\n    'pipSettings.Templates'\n    ]);\n\n\nimport './SettingsPage';\nimport './SettingsPageRoutes';","import { SettingsTab } from './SettingsTab';\n\nexport class SettingsConfig {\n    public defaultTab: string;\n    public tabs: SettingsTab[] = [];\n    public titleText: string = 'SETTINGS_TITLE';\n    public titleLogo: boolean = null;\n    public isNavIcon: boolean = true;\n}\n","import { SettingsTab } from './SettingsTab';\n\nexport class SettingsPageSelectedTab {\n    public tab: SettingsTab;\n    public tabIndex: number = 0;\n    public tabId: string;\n}","import { SettingsTab } from './SettingsTab';\nimport { SettingsConfig } from './SettingsConfig';\nimport { ISettingsService } from './ISettingsService';\nimport { ISettingsProvider } from './ISettingsService';\n\nclass SettingsService implements ISettingsService {\n    private _config: SettingsConfig;\n\n    public constructor(config: SettingsConfig) {\n        \"ngInject\";\n        this._config = config;\n    }\n\n    private getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public setDefaultTab(name: string): void {\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === this._config.defaultTab;\n        });\n        return _.cloneDeep(defaultTab);\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public getTabs(): SettingsTab[] {\n        return _.cloneDeep(this._config.tabs);\n    }\n\n}\n\nclass SettingsProvider implements ISettingsProvider {\n    private _service: SettingsService;\n    private _config: SettingsConfig = new SettingsConfig();\n\n    constructor(private $stateProvider: ng.ui.IStateProvider) {}\n\n    public getFullStateName(state: string): string {\n        return 'settings.' + state;\n    }\n\n    public getDefaultTab(): SettingsTab {\n        let defaultTab: SettingsTab;\n\n        defaultTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === defaultTab.state;\n        });\n\n        return _.cloneDeep(defaultTab);\n    }\n\n    public addTab(tabObj: SettingsTab): void {\n        let existingTab: SettingsTab;\n\n        this.validateTab(tabObj);\n        existingTab = _.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + tabObj.state;\n        });\n        if (existingTab) {\n            throw new Error('Tab with state name \"' + tabObj.state + '\" is already registered');\n        }\n\n        this._config.tabs.push({\n            state: this.getFullStateName(tabObj.state),\n            title: tabObj.title,\n            index: tabObj.index || 100000,\n            access: tabObj.access,\n            visible: tabObj.visible !== false,\n            stateConfig: _.cloneDeep(tabObj.stateConfig)\n        });\n        this.$stateProvider.state(this.getFullStateName(tabObj.state), tabObj.stateConfig);\n\n        // if we just added first state and no default state is specified\n        if (typeof this._config.defaultTab === 'undefined' && this._config.tabs.length === 1) {\n            this.setDefaultTab(tabObj.state);\n        }\n    }\n\n    public setDefaultTab(name: string): void {\n        // TODO [apidhirnyi] extract expression inside 'if' into variable. It isn't readable now.\n        if (!_.find(this._config.tabs, (tab: SettingsTab) => {\n            return tab.state === 'settings.' + name;\n        })) {\n            throw new Error('Tab with state name \"' + name + '\" is not registered');\n        }\n\n        this._config.defaultTab = this.getFullStateName(name);\n        //console.log(this.$stateProvider);\n        //this.$stateProvider.go(this._config.defaultTab);\n            //pipAuthStateProvider.redirect('settings', getFullStateName(name));\n    }\n\n    /**\n     * Validates passed tab config object\n     * If passed tab is not valid it will throw an error\n     */\n    private validateTab(tabObj: SettingsTab): void {\n        if (!tabObj || !_.isObject(tabObj)) {\n            throw new Error('Invalid object');\n        }\n\n        if (tabObj.state === null || tabObj.state === '') {\n            throw new Error('Tab should have valid Angular UI router state name');\n        }\n\n        if (tabObj.access && !_.isFunction(tabObj.access)) {\n            throw new Error('\"access\" should be a function');\n        }\n\n        if (!tabObj.stateConfig || !_.isObject(tabObj.stateConfig)) {\n            throw new Error('Invalid state configuration object');\n        }\n    }\n\n    public showTitleText (newTitleText: string): string {\n        if (newTitleText) {\n            this._config.titleText = newTitleText;\n            this._config.titleLogo = null;\n        }\n\n        return this._config.titleText;\n    }\n\n    public showTitleLogo(newTitleLogo) {\n        if (newTitleLogo) {\n            this._config.titleLogo = newTitleLogo;\n            this._config.titleText = null;\n        }\n\n        return this._config.titleLogo;\n    }\n\n    public showNavIcon(value: boolean): boolean {\n        if (value !== null && value !== undefined) {\n            this._config.isNavIcon = !!value;\n        }\n\n        return this._config.isNavIcon;\n    }\n\n    public $get(): ISettingsService {\n        \"ngInject\";\n\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\n            this._service = new SettingsService(this._config);\n        }\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipSettings.Service')\n    .provider('pipSettings', SettingsProvider);\n\n","export class SettingsStateConfig {\n    public url: string;\n    public auth: boolean = false;\n    public templateUrl?: string;\n    public template?: string;\n}","import { SettingsStateConfig } from './SettingsStateConfig';\n\nexport class SettingsTab {\n    public state: string;\n    public title: string;\n    public index: number;\n    public access: Function;\n    public visible: boolean;\n    public stateConfig: SettingsStateConfig;\n}\n","angular.module('pipSettings.Service', []);\n\nimport './SettingsConfig';\nimport './SettingsPageSelectedTab';\nimport './SettingsStateConfig';\nimport './SettingsTab';\nimport './SettingsService';\n\nexport * from './SettingsConfig';\nexport * from './SettingsPageSelectedTab';\nexport * from './SettingsStateConfig';\nexport * from './SettingsTab';\nexport * from './SettingsService';\n","(function(module) {\ntry {\n  module = angular.module('pipSettings.Templates');\n} catch (e) {\n  module = angular.module('pipSettings.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('page/SettingsPage.html',\n    '<md-toolbar class=\"pip-appbar-ext\"></md-toolbar><pip-document width=\"800\" min-height=\"400\" class=\"pip-settings\"><div class=\"pip-menu-container\" ng-hide=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\"><md-list class=\"pip-menu pip-simple-list\" pip-selected=\"vm.selected.tabIndex\" pip-selected-watch=\"vm.selected.navId\" pip-select=\"vm.onNavigationSelect($event.id)\"><md-list-item class=\"pip-simple-list-item pip-selectable flex\" ng-repeat=\"tab in vm.tabs track by tab.state\" ng-if=\"vm.$party.id == vm.$user.id || tab.state == \\'settings.basic_info\\'|| tab.state ==\\'settings.contact_info\\' || tab.state ==\\'settings.blacklist\\'\" md-ink-ripple=\"\" pip-id=\"{{:: tab.state }}\"><p>{{::tab.title | translate}}</p></md-list-item></md-list><div class=\"pip-content-container\"><pip-dropdown pip-actions=\"vm.tabs\" pip-dropdown-select=\"vm.onDropdownSelect\" pip-active-index=\"vm.selected.tabIndex\"></pip-dropdown><div class=\"pip-body tp24-flex layout-column\" ui-view=\"\"></div></div></div><div class=\"layout-column layout-align-center-center flex\" ng-show=\"vm.manager === false || !vm.tabs || vm.tabs.length < 1\">{{::\\'ERROR_400\\' | translate}}</div></pip-document>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-settings-html.min.js.map\n"]}